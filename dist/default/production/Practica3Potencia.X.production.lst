

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed May 22 10:50:38 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.05
    41                           ; Generated 20/12/2018 GMT
    42                           ; 
    43                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F886 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454                           
   455                           	psect	idataBANK0
   456  0005                     __pidataBANK0:	
   457                           
   458                           ;initializer for _key2
   459  0005  3430               	retlw	48
   460  0006  3400               	retlw	0
   461                           
   462                           ;initializer for _keypress
   463  0007  3430               	retlw	48
   464                           
   465                           	psect	strings
   466  0800                     __pstrings:	
   467  0800                     stringtab:	
   468  0800                     __stringtab:	
   469                           
   470                           ;	String table - string pointers are 1 byte each
   471  0800  1BFF               	btfsc	btemp+1,7
   472  0801  280A               	ljmp	stringcode
   473  0802  1383               	bcf	3,7
   474  0803  187F               	btfsc	btemp+1,0
   475  0804  1783               	bsf	3,7
   476  0805  0800               	movf	0,w
   477  0806  0A84               	incf	4,f
   478  0807  1903               	skipnz
   479  0808  0AFF               	incf	btemp+1,f
   480  0809  0008               	return
   481  080A                     stringcode:	
   482  080A                     stringdir:	
   483  080A  3008               	movlw	high stringdir
   484  080B  008A               	movwf	10
   485  080C  0804               	movf	4,w
   486  080D  0A84               	incf	4,f
   487  080E  0782               	addwf	2,f
   488  080F                     __stringbase:	
   489  080F  3400               	retlw	0
   490  0810                     __end_of__stringtab:	
   491  0810                     _keyPadMatrix:	
   492  0810  3441               	retlw	65
   493  0811  3400               	retlw	0
   494  0812  3431               	retlw	49
   495  0813  3400               	retlw	0
   496  0814  3432               	retlw	50
   497  0815  3400               	retlw	0
   498  0816  3433               	retlw	51
   499  0817  3400               	retlw	0
   500  0818  3442               	retlw	66
   501  0819  3400               	retlw	0
   502  081A  3434               	retlw	52
   503  081B  3400               	retlw	0
   504  081C  3435               	retlw	53
   505  081D  3400               	retlw	0
   506  081E  3436               	retlw	54
   507  081F  3400               	retlw	0
   508  0820  3443               	retlw	67
   509  0821  3400               	retlw	0
   510  0822  3437               	retlw	55
   511  0823  3400               	retlw	0
   512  0824  3438               	retlw	56
   513  0825  3400               	retlw	0
   514  0826  3439               	retlw	57
   515  0827  3400               	retlw	0
   516  0828  3444               	retlw	68
   517  0829  3400               	retlw	0
   518  082A  342A               	retlw	42
   519  082B  3400               	retlw	0
   520  082C  3430               	retlw	48
   521  082D  3400               	retlw	0
   522  082E  3423               	retlw	35
   523  082F  3400               	retlw	0
   524  0830  34FF               	retlw	255
   525  0831  3400               	retlw	0
   526  0832                     __end_of_keyPadMatrix:	
   527  0832                     _dpowers:	
   528  0832  3401               	retlw	1
   529  0833  3400               	retlw	0
   530  0834  340A               	retlw	10
   531  0835  3400               	retlw	0
   532  0836  3464               	retlw	100
   533  0837  3400               	retlw	0
   534  0838  34E8               	retlw	232
   535  0839  3403               	retlw	3
   536  083A  3410               	retlw	16
   537  083B  3427               	retlw	39
   538  083C                     __end_of_dpowers:	
   539  0005                     _PORTA	set	5
   540  0007                     _PORTC	set	7
   541  003A                     _RC2	set	58
   542  0039                     _RC1	set	57
   543  0038                     _RC0	set	56
   544  002E                     _RA6	set	46
   545  002F                     _RA7	set	47
   546  002D                     _RA5	set	45
   547  002B                     _RA3	set	43
   548  002C                     _RA4	set	44
   549  002A                     _RA2	set	42
   550  0029                     _RA1	set	41
   551  0028                     _RA0	set	40
   552  0033                     _RB3	set	51
   553  0032                     _RB2	set	50
   554  0035                     _RB5	set	53
   555  0036                     _RB6	set	54
   556  0034                     _RB4	set	52
   557  0037                     _RB7	set	55
   558  0030                     _RB0	set	48
   559  0085                     _TRISA	set	133
   560  0087                     _TRISC	set	135
   561  0086                     _TRISB	set	134
   562  0090                     _OSCTUNE	set	144
   563  008F                     _OSCCONbits	set	143
   564  0188                     _ANSEL	set	392
   565  0189                     _ANSELH	set	393
   566  083C                     STR_12:	
   567  083C  3444               	retlw	68	;'D'
   568  083D  3469               	retlw	105	;'i'
   569  083E  3472               	retlw	114	;'r'
   570  083F  343A               	retlw	58	;':'
   571  0840  3420               	retlw	32	;' '
   572  0841  3441               	retlw	65	;'A'
   573  0842  3464               	retlw	100	;'d'
   574  0843  3465               	retlw	101	;'e'
   575  0844  346C               	retlw	108	;'l'
   576  0845  3461               	retlw	97	;'a'
   577  0846  346E               	retlw	110	;'n'
   578  0847  3474               	retlw	116	;'t'
   579  0848  3465               	retlw	101	;'e'
   580  0849  3400               	retlw	0
   581  084A                     STR_7:	
   582  084A  3441               	retlw	65	;'A'
   583  084B  3464               	retlw	100	;'d'
   584  084C  3465               	retlw	101	;'e'
   585  084D  346C               	retlw	108	;'l'
   586  084E  3461               	retlw	97	;'a'
   587  084F  346E               	retlw	110	;'n'
   588  0850  3474               	retlw	116	;'t'
   589  0851  3465               	retlw	101	;'e'
   590  0852  343A               	retlw	58	;':'
   591  0853  3420               	retlw	32	;' '
   592  0854  3400               	retlw	0
   593  0855                     STR_14:	
   594  0855  3444               	retlw	68	;'D'
   595  0856  3469               	retlw	105	;'i'
   596  0857  3472               	retlw	114	;'r'
   597  0858  343A               	retlw	58	;':'
   598  0859  3420               	retlw	32	;' '
   599  085A  3441               	retlw	65	;'A'
   600  085B  3474               	retlw	116	;'t'
   601  085C  3472               	retlw	114	;'r'
   602  085D  3461               	retlw	97	;'a'
   603  085E  3473               	retlw	115	;'s'
   604  085F  3400               	retlw	0
   605  0860                     STR_13:	
   606  0860  3420               	retlw	32	;' '
   607  0861  3443               	retlw	67	;'C'
   608  0862  346D               	retlw	109	;'m'
   609  0863  3420               	retlw	32	;' '
   610  0864  3464               	retlw	100	;'d'
   611  0865  3465               	retlw	101	;'e'
   612  0866  343A               	retlw	58	;':'
   613  0867  3420               	retlw	32	;' '
   614  0868  3400               	retlw	0
   615  0869                     STR_2:	
   616  0869  3441               	retlw	65	;'A'
   617  086A  3474               	retlw	116	;'t'
   618  086B  3472               	retlw	114	;'r'
   619  086C  3461               	retlw	97	;'a'
   620  086D  3473               	retlw	115	;'s'
   621  086E  343A               	retlw	58	;':'
   622  086F  3420               	retlw	32	;' '
   623  0870  3400               	retlw	0
   624  0871                     STR_3:	
   625  0871  3430               	retlw	48	;'0'
   626  0872  3420               	retlw	32	;' '
   627  0873  3443               	retlw	67	;'C'
   628  0874  346D               	retlw	109	;'m'
   629  0875  3400               	retlw	0
   630  0876                     STR_1:	
   631  0876  3425               	retlw	37	;'%'
   632  0877  3464               	retlw	100	;'d'
   633  0878  3400               	retlw	0
   634  0860                     
   635                           ; #config settings
   636  0000                     
   637                           	psect	cinit
   638  07DD                     start_initialization:	
   639  07DD                     __initialization:	
   640                           
   641                           ; Initialize objects allocated to BANK0
   642  07DD  120A  118A  2005  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   643  07E2  00E7               	movwf	__pdataBANK0& (0+127)
   644  07E3  120A  118A  2006  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   645  07E8  00E8               	movwf	(__pdataBANK0+1)& (0+127)
   646  07E9  120A  118A  2007   	fcall	__pidataBANK0+2	;fetch initializer
   647  07EC  00E9               	movwf	(__pdataBANK0+2)& (0+127)
   648                           
   649                           ; Clear objects allocated to BANK0
   650  07ED  01D8               	clrf	__pbssBANK0& (0+127)
   651  07EE  01D9               	clrf	(__pbssBANK0+1)& (0+127)
   652  07EF  01DA               	clrf	(__pbssBANK0+2)& (0+127)
   653  07F0  01DB               	clrf	(__pbssBANK0+3)& (0+127)
   654  07F1  01DC               	clrf	(__pbssBANK0+4)& (0+127)
   655  07F2  01DD               	clrf	(__pbssBANK0+5)& (0+127)
   656  07F3  01DE               	clrf	(__pbssBANK0+6)& (0+127)
   657  07F4  01DF               	clrf	(__pbssBANK0+7)& (0+127)
   658  07F5  01E0               	clrf	(__pbssBANK0+8)& (0+127)
   659  07F6  01E1               	clrf	(__pbssBANK0+9)& (0+127)
   660  07F7  01E2               	clrf	(__pbssBANK0+10)& (0+127)
   661  07F8  01E3               	clrf	(__pbssBANK0+11)& (0+127)
   662  07F9  01E4               	clrf	(__pbssBANK0+12)& (0+127)
   663  07FA  01E5               	clrf	(__pbssBANK0+13)& (0+127)
   664  07FB  01E6               	clrf	(__pbssBANK0+14)& (0+127)
   665  07FC                     end_of_initialization:	
   666                           ;End of C runtime variable initialization code
   667                           
   668  07FC                     __end_of__initialization:	
   669  07FC  0183               	clrf	3
   670  07FD  120A  158A  2ABC   	ljmp	_main	;jump to C main() function
   671                           
   672                           	psect	bssBANK0
   673  0058                     __pbssBANK0:	
   674  0058                     _lastCm:	
   675  0058                     	ds	2
   676  005A                     _cm:	
   677  005A                     	ds	2
   678  005C                     _CmAntiHorario:	
   679  005C                     	ds	2
   680  005E                     _CmHorario:	
   681  005E                     	ds	2
   682  0060                     _Grados:	
   683  0060                     	ds	2
   684  0062                     _old_key:	
   685  0062                     	ds	1
   686  0063                     _key:	
   687  0063                     	ds	1
   688  0064                     _LastState:	
   689  0064                     	ds	1
   690  0065                     _buffer:	
   691  0065                     	ds	2
   692                           
   693                           	psect	dataBANK0
   694  0067                     __pdataBANK0:	
   695  0067                     _key2:	
   696  0067                     	ds	2
   697  0069                     _keypress:	
   698  0069                     	ds	1
   699                           
   700                           	psect	cstackCOMMON
   701  0070                     __pcstackCOMMON:	
   702  0070                     ?_ConfigInit:	
   703  0070                     ??_ConfigInit:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_Lcd_Init:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ??_StopMotor:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ??_RunMotor:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_Lcd_Port:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ??_Lcd_Port:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_Lcd_Cmd:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_Lcd_Clear:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?_Lcd_Write_Char:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_StopMotor:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_configurarHorario:	
   734                           ; 2 bytes @ 0x0
   735                           
   736  0070                     ?_configurarAntiHorario:	
   737                           ; 2 bytes @ 0x0
   738                           
   739  0070                     ?_KeyPadGetKey:	
   740                           ; 2 bytes @ 0x0
   741                           
   742  0070                     ?_RunMotor:	
   743                           ; 2 bytes @ 0x0
   744                           
   745  0070                     ?_Encoder:	
   746                           ; 2 bytes @ 0x0
   747                           
   748  0070                     ?__Umul8_16:	
   749                           ; 2 bytes @ 0x0
   750                           
   751  0070                     ?_main:	
   752                           ; 2 bytes @ 0x0
   753                           
   754  0070                     ?_VerificarInversionGiro:	
   755                           ; 2 bytes @ 0x0
   756                           
   757  0070                     ?___wmul:	
   758                           ; 2 bytes @ 0x0
   759                           
   760  0070                     ?___lwdiv:	
   761                           ; 2 bytes @ 0x0
   762                           
   763  0070                     ?___xxtofl:	
   764                           ; 2 bytes @ 0x0
   765                           
   766  0070                     Lcd_Port@a:	
   767                           ; 4 bytes @ 0x0
   768                           
   769  0070                     __Umul8_16@multiplicand:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ___wmul@multiplier:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ___lwdiv@divisor:	
   776                           ; 2 bytes @ 0x0
   777                           
   778  0070                     ___xxtofl@val:	
   779                           ; 2 bytes @ 0x0
   780                           
   781                           
   782                           ; 4 bytes @ 0x0
   783  0070                     	ds	1
   784  0071                     ??_Lcd_Cmd:	
   785  0071                     ??_Lcd_Write_Char:	
   786                           ; 1 bytes @ 0x1
   787                           
   788                           
   789                           ; 1 bytes @ 0x1
   790  0071                     	ds	1
   791  0072                     ??_KeyPadGetKey:	
   792  0072                     ??__Umul8_16:	
   793                           ; 1 bytes @ 0x2
   794                           
   795  0072                     Lcd_Write_Char@temp:	
   796                           ; 1 bytes @ 0x2
   797                           
   798  0072                     ___wmul@multiplicand:	
   799                           ; 1 bytes @ 0x2
   800                           
   801  0072                     ___lwdiv@dividend:	
   802                           ; 2 bytes @ 0x2
   803                           
   804                           
   805                           ; 2 bytes @ 0x2
   806  0072                     	ds	1
   807  0073                     Lcd_Cmd@a:	
   808  0073                     Lcd_Write_Char@y:	
   809                           ; 1 bytes @ 0x3
   810                           
   811                           
   812                           ; 1 bytes @ 0x3
   813  0073                     	ds	1
   814  0074                     ??_Lcd_Init:	
   815  0074                     ??_Lcd_Clear:	
   816                           ; 1 bytes @ 0x4
   817                           
   818  0074                     ?_Lcd_Set_Cursor:	
   819                           ; 1 bytes @ 0x4
   820                           
   821  0074                     ??___wmul:	
   822                           ; 1 bytes @ 0x4
   823                           
   824  0074                     ??___lwdiv:	
   825                           ; 1 bytes @ 0x4
   826                           
   827  0074                     ??___xxtofl:	
   828                           ; 1 bytes @ 0x4
   829                           
   830  0074                     Lcd_Set_Cursor@b:	
   831                           ; 1 bytes @ 0x4
   832                           
   833  0074                     Lcd_Write_Char@a:	
   834                           ; 1 bytes @ 0x4
   835                           
   836  0074                     KeyPadGetKey@key:	
   837                           ; 1 bytes @ 0x4
   838                           
   839  0074                     ___wmul@product:	
   840                           ; 1 bytes @ 0x4
   841                           
   842  0074                     __Umul8_16@product:	
   843                           ; 2 bytes @ 0x4
   844                           
   845                           
   846                           ; 2 bytes @ 0x4
   847  0074                     	ds	1
   848  0075                     ??_Lcd_Set_Cursor:	
   849  0075                     ?_Lcd_Write_String:	
   850                           ; 1 bytes @ 0x5
   851                           
   852  0075                     KeyPadGetKey@row:	
   853                           ; 1 bytes @ 0x5
   854                           
   855  0075                     Lcd_Write_String@a:	
   856                           ; 1 bytes @ 0x5
   857                           
   858  0075                     ___lwdiv@quotient:	
   859                           ; 2 bytes @ 0x5
   860                           
   861                           
   862                           ; 2 bytes @ 0x5
   863  0075                     	ds	1
   864  0076                     __Umul8_16@word_mpld:	
   865                           
   866                           ; 2 bytes @ 0x6
   867  0076                     	ds	1
   868  0077                     ??_Lcd_Write_String:	
   869  0077                     Lcd_Set_Cursor@a:	
   870                           ; 1 bytes @ 0x7
   871                           
   872  0077                     ___lwdiv@counter:	
   873                           ; 1 bytes @ 0x7
   874                           
   875                           
   876                           ; 1 bytes @ 0x7
   877  0077                     	ds	1
   878  0078                     ?___lwmod:	
   879  0078                     Lcd_Set_Cursor@z:	
   880                           ; 2 bytes @ 0x8
   881                           
   882  0078                     ___xxtofl@sign:	
   883                           ; 1 bytes @ 0x8
   884                           
   885  0078                     __Umul8_16@multiplier:	
   886                           ; 1 bytes @ 0x8
   887                           
   888  0078                     ___lwmod@divisor:	
   889                           ; 1 bytes @ 0x8
   890                           
   891                           
   892                           ; 2 bytes @ 0x8
   893  0078                     	ds	1
   894  0079                     Lcd_Set_Cursor@y:	
   895  0079                     ___xxtofl@exp:	
   896                           ; 1 bytes @ 0x9
   897                           
   898                           
   899                           ; 1 bytes @ 0x9
   900  0079                     	ds	1
   901  007A                     Lcd_Set_Cursor@temp:	
   902  007A                     Lcd_Write_String@i:	
   903                           ; 1 bytes @ 0xA
   904                           
   905  007A                     ___lwmod@dividend:	
   906                           ; 2 bytes @ 0xA
   907                           
   908  007A                     ___xxtofl@arg:	
   909                           ; 2 bytes @ 0xA
   910                           
   911                           
   912                           ; 4 bytes @ 0xA
   913  007A                     	ds	2
   914  007C                     ??___lwmod:	
   915                           
   916                           ; 1 bytes @ 0xC
   917  007C                     	ds	1
   918  007D                     ___lwmod@counter:	
   919                           
   920                           ; 1 bytes @ 0xD
   921  007D                     	ds	1
   922                           
   923                           	psect	cstackBANK0
   924  0020                     __pcstackBANK0:	
   925  0020                     ?_sprintf:	
   926  0020                     ?___fladd:	
   927                           ; 2 bytes @ 0x0
   928                           
   929  0020                     ?___flmul:	
   930                           ; 4 bytes @ 0x0
   931                           
   932  0020                     sprintf@f:	
   933                           ; 4 bytes @ 0x0
   934                           
   935  0020                     ___fladd@b:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0020                     ___flmul@b:	
   939                           ; 4 bytes @ 0x0
   940                           
   941                           
   942                           ; 4 bytes @ 0x0
   943  0020                     	ds	3
   944  0023                     ??_sprintf:	
   945                           
   946                           ; 1 bytes @ 0x3
   947  0023                     	ds	1
   948  0024                     ___fladd@a:	
   949  0024                     ___flmul@a:	
   950                           ; 4 bytes @ 0x4
   951                           
   952                           
   953                           ; 4 bytes @ 0x4
   954  0024                     	ds	2
   955  0026                     sprintf@ap:	
   956                           
   957                           ; 1 bytes @ 0x6
   958  0026                     	ds	1
   959  0027                     sprintf@flag:	
   960                           
   961                           ; 1 bytes @ 0x7
   962  0027                     	ds	1
   963  0028                     ??___fladd:	
   964  0028                     ??___flmul:	
   965                           ; 1 bytes @ 0x8
   966                           
   967  0028                     sprintf@prec:	
   968                           ; 1 bytes @ 0x8
   969                           
   970                           
   971                           ; 1 bytes @ 0x8
   972  0028                     	ds	1
   973  0029                     sprintf@val:	
   974                           
   975                           ; 2 bytes @ 0x9
   976  0029                     	ds	2
   977  002B                     sprintf@sp:	
   978                           
   979                           ; 1 bytes @ 0xB
   980  002B                     	ds	1
   981  002C                     sprintf@c:	
   982                           
   983                           ; 1 bytes @ 0xC
   984  002C                     	ds	1
   985  002D                     ___flmul@sign:	
   986                           
   987                           ; 1 bytes @ 0xD
   988  002D                     	ds	1
   989  002E                     ___flmul@grs:	
   990                           
   991                           ; 4 bytes @ 0xE
   992  002E                     	ds	2
   993  0030                     ___fladd@signs:	
   994                           
   995                           ; 1 bytes @ 0x10
   996  0030                     	ds	1
   997  0031                     ___fladd@aexp:	
   998                           
   999                           ; 1 bytes @ 0x11
  1000  0031                     	ds	1
  1001  0032                     ___fladd@bexp:	
  1002  0032                     ___flmul@aexp:	
  1003                           ; 1 bytes @ 0x12
  1004                           
  1005                           
  1006                           ; 1 bytes @ 0x12
  1007  0032                     	ds	1
  1008  0033                     ___fladd@grs:	
  1009  0033                     ___flmul@bexp:	
  1010                           ; 1 bytes @ 0x13
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x13
  1014  0033                     	ds	1
  1015  0034                     ___flmul@prod:	
  1016                           
  1017                           ; 4 bytes @ 0x14
  1018  0034                     	ds	4
  1019  0038                     ___flmul@temp:	
  1020                           
  1021                           ; 2 bytes @ 0x18
  1022  0038                     	ds	2
  1023  003A                     ?___flge:	
  1024  003A                     ?___fltol:	
  1025                           ; 1 bit 
  1026                           
  1027  003A                     ___flge@ff1:	
  1028                           ; 4 bytes @ 0x1A
  1029                           
  1030  003A                     ___fltol@f1:	
  1031                           ; 4 bytes @ 0x1A
  1032                           
  1033                           
  1034                           ; 4 bytes @ 0x1A
  1035  003A                     	ds	4
  1036  003E                     ??___fltol:	
  1037  003E                     ___flge@ff2:	
  1038                           ; 1 bytes @ 0x1E
  1039                           
  1040                           
  1041                           ; 4 bytes @ 0x1E
  1042  003E                     	ds	4
  1043  0042                     ??___flge:	
  1044                           
  1045                           ; 1 bytes @ 0x22
  1046  0042                     	ds	1
  1047  0043                     ___fltol@sign1:	
  1048                           
  1049                           ; 1 bytes @ 0x23
  1050  0043                     	ds	1
  1051  0044                     ___fltol@exp1:	
  1052                           
  1053                           ; 1 bytes @ 0x24
  1054  0044                     	ds	1
  1055  0045                     ?_Lcd_Write_Integer:	
  1056  0045                     Lcd_Write_Integer@a:	
  1057                           ; 1 bytes @ 0x25
  1058                           
  1059                           
  1060                           ; 2 bytes @ 0x25
  1061  0045                     	ds	1
  1062  0046                     ??_VerificarInversionGiro:	
  1063                           
  1064                           ; 1 bytes @ 0x26
  1065  0046                     	ds	1
  1066  0047                     ??_Lcd_Write_Integer:	
  1067                           
  1068                           ; 1 bytes @ 0x27
  1069  0047                     	ds	1
  1070  0048                     Lcd_Write_Integer@Data:	
  1071                           
  1072                           ; 10 bytes @ 0x28
  1073  0048                     	ds	10
  1074  0052                     ??_configurarHorario:	
  1075  0052                     ??_configurarAntiHorario:	
  1076                           ; 1 bytes @ 0x32
  1077                           
  1078  0052                     ??_Encoder:	
  1079                           ; 1 bytes @ 0x32
  1080                           
  1081                           
  1082                           ; 1 bytes @ 0x32
  1083  0052                     	ds	4
  1084  0056                     ??_main:	
  1085                           
  1086                           ; 1 bytes @ 0x36
  1087  0056                     	ds	2
  1088                           
  1089                           	psect	maintext
  1090  0ABC                     __pmaintext:	
  1091 ;;
  1092 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1093 ;;
  1094 ;; *************** function _main *****************
  1095 ;; Defined at:
  1096 ;;		line 12 in file "main.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  2   26[None  ] int 
  1103 ;; Registers used:
  1104 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : B00/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1110 ;;      Params:         0       0       0       0       0
  1111 ;;      Locals:         0       0       0       0       0
  1112 ;;      Temps:          0       2       0       0       0
  1113 ;;      Totals:         0       2       0       0       0
  1114 ;;Total ram usage:        2 bytes
  1115 ;; Hardware stack levels required when called:    5
  1116 ;; This function calls:
  1117 ;;		_ConfigInit
  1118 ;;		_Encoder
  1119 ;;		_KeyPadGetKey
  1120 ;;		_Lcd_Init
  1121 ;;		_RunMotor
  1122 ;;		_StopMotor
  1123 ;;		_configurarAntiHorario
  1124 ;;		_configurarHorario
  1125 ;; This function is called by:
  1126 ;;		Startup code after reset
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           
  1131                           ;psect for function _main
  1132  0ABC                     _main:	
  1133                           
  1134                           ;main.c: 13:     ConfigInit();
  1135                           
  1136                           ;incstack = 0
  1137                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1138  0ABC  120A  158A  20A1  120A  158A  	fcall	_ConfigInit
  1139                           
  1140                           ;main.c: 14:     Lcd_Init();
  1141  0AC1  120A  158A  2261  120A  158A  	fcall	_Lcd_Init
  1142                           
  1143                           ;main.c: 15:     StopMotor();
  1144  0AC6  120A  118A  2008  120A  158A  	fcall	_StopMotor
  1145                           
  1146                           ;main.c: 16:     configurarHorario();
  1147  0ACB  120A  118A  200D  120A  158A  	fcall	_configurarHorario
  1148                           
  1149                           ;main.c: 17:     configurarAntiHorario();
  1150  0AD0  120A  158A  270A  120A  158A  	fcall	_configurarAntiHorario
  1151  0AD5                     l2867:	
  1152                           
  1153                           ;main.c: 21:         keypress = KeyPadGetKey();
  1154  0AD5  120A  158A  2390  120A  158A  	fcall	_KeyPadGetKey
  1155  0ADA  0870               	movf	?_KeyPadGetKey,w
  1156  0ADB  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0ADC  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0ADD  00D6               	movwf	??_main
  1159  0ADE  0856               	movf	??_main,w
  1160  0ADF  00E9               	movwf	_keypress
  1161                           
  1162                           ;main.c: 24:         if (keypress != 0xFF) {
  1163  0AE0  0A69               	incf	_keypress,w
  1164  0AE1  1D03               	btfss	3,2
  1165  0AE2  2AFC               	goto	l2883
  1166  0AE3  2B12               	goto	l28
  1167  0AE4                     l2873:	
  1168                           
  1169                           ;main.c: 28:                     configurarHorario();
  1170  0AE4  120A  118A  200D  120A  158A  	fcall	_configurarHorario
  1171                           
  1172                           ;main.c: 29:                     break;
  1173  0AE9  2B12               	goto	l28
  1174  0AEA                     l2875:	
  1175                           
  1176                           ;main.c: 31:                     configurarAntiHorario();
  1177  0AEA  120A  158A  270A  120A  158A  	fcall	_configurarAntiHorario
  1178                           
  1179                           ;main.c: 32:                     break;
  1180  0AEF  2B12               	goto	l28
  1181  0AF0                     l2877:	
  1182                           
  1183                           ;main.c: 34:                     StopMotor();
  1184  0AF0  120A  118A  2008  120A  158A  	fcall	_StopMotor
  1185                           
  1186                           ;main.c: 35:                     break;
  1187  0AF5  2B12               	goto	l28
  1188  0AF6                     l2879:	
  1189                           
  1190                           ;main.c: 37:                     RunMotor();
  1191  0AF6  120A  158A  207C  120A  158A  	fcall	_RunMotor
  1192                           
  1193                           ;main.c: 38:                     break;
  1194  0AFB  2B12               	goto	l28
  1195  0AFC                     l2883:	
  1196  0AFC  0869               	movf	_keypress,w
  1197  0AFD  00D6               	movwf	??_main
  1198  0AFE  01D7               	clrf	??_main+1
  1199                           
  1200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1201                           ; Switch size 1, requested type "simple"
  1202                           ; Number of cases is 1, Range of values is 0 to 0
  1203                           ; switch strategies available:
  1204                           ; Name         Instructions Cycles
  1205                           ; simple_byte            4     3 (average)
  1206                           ; direct_byte           11     8 (fixed)
  1207                           ; jumptable            260     6 (fixed)
  1208                           ;	Chosen strategy is simple_byte
  1209  0AFF  0857               	movf	??_main+1,w
  1210  0B00  3A00               	xorlw	0	; case 0
  1211  0B01  1903               	skipnz
  1212  0B02  2B04               	goto	l2979
  1213  0B03  2B12               	goto	l28
  1214  0B04                     l2979:	
  1215                           
  1216                           ; Switch size 1, requested type "simple"
  1217                           ; Number of cases is 4, Range of values is 65 to 68
  1218                           ; switch strategies available:
  1219                           ; Name         Instructions Cycles
  1220                           ; simple_byte           13     7 (average)
  1221                           ; direct_byte           23    11 (fixed)
  1222                           ; jumptable            263     9 (fixed)
  1223                           ;	Chosen strategy is simple_byte
  1224  0B04  0856               	movf	??_main,w
  1225  0B05  3A41               	xorlw	65	; case 65
  1226  0B06  1903               	skipnz
  1227  0B07  2AE4               	goto	l2873
  1228  0B08  3A03               	xorlw	3	; case 66
  1229  0B09  1903               	skipnz
  1230  0B0A  2AEA               	goto	l2875
  1231  0B0B  3A01               	xorlw	1	; case 67
  1232  0B0C  1903               	skipnz
  1233  0B0D  2AF0               	goto	l2877
  1234  0B0E  3A07               	xorlw	7	; case 68
  1235  0B0F  1903               	skipnz
  1236  0B10  2AF6               	goto	l2879
  1237  0B11  2B12               	goto	l28
  1238  0B12                     l28:	
  1239                           ;main.c: 40:         }
  1240                           
  1241                           
  1242                           ;main.c: 43:         if (RB0 == 1 && LastState == 0) {
  1243  0B12  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0B13  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0B14  1C06               	btfss	6,0	;volatile
  1246  0B15  2B1F               	goto	l35
  1247  0B16  0864               	movf	_LastState,w
  1248  0B17  1D03               	btfss	3,2
  1249  0B18  2B1F               	goto	l35
  1250                           
  1251                           ;main.c: 44:             Encoder();
  1252  0B19  120A  118A  20C9  120A  158A  	fcall	_Encoder
  1253                           
  1254                           ;main.c: 45:         } else if (RB0 == 0) {
  1255  0B1E  2AD5               	goto	l2867
  1256  0B1F                     l35:	
  1257  0B1F  1806               	btfsc	6,0	;volatile
  1258  0B20  2AD5               	goto	l2867
  1259                           
  1260                           ;main.c: 46:             LastState = 0;
  1261  0B21  01E4               	clrf	_LastState
  1262  0B22  2AD5               	goto	l2867
  1263  0B23                     __end_of_main:	
  1264                           
  1265                           	psect	text1
  1266  000D                     __ptext1:	
  1267 ;; *************** function _configurarHorario *****************
  1268 ;; Defined at:
  1269 ;;		line 125 in file "Controls.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  2    8[None  ] int 
  1276 ;; Registers used:
  1277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1283 ;;      Params:         0       0       0       0       0
  1284 ;;      Locals:         0       0       0       0       0
  1285 ;;      Temps:          0       4       0       0       0
  1286 ;;      Totals:         0       4       0       0       0
  1287 ;;Total ram usage:        4 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    4
  1290 ;; This function calls:
  1291 ;;		_KeyPadGetKey
  1292 ;;		_Lcd_Clear
  1293 ;;		_Lcd_Set_Cursor
  1294 ;;		_Lcd_Write_Integer
  1295 ;;		_Lcd_Write_String
  1296 ;;		_RunMotor
  1297 ;;		_StopMotor
  1298 ;;		___wmul
  1299 ;; This function is called by:
  1300 ;;		_main
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           
  1305                           ;psect for function _configurarHorario
  1306  000D                     _configurarHorario:	
  1307                           
  1308                           ;Controls.c: 127:     buffer = 0;
  1309                           
  1310                           ;incstack = 0
  1311                           ; Regs used in _configurarHorario: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1312  000D  1283               	bcf	3,5	;RP0=0, select bank0
  1313  000E  1303               	bcf	3,6	;RP1=0, select bank0
  1314  000F  01E5               	clrf	_buffer
  1315  0010  01E6               	clrf	_buffer+1
  1316                           
  1317                           ;Controls.c: 128:     StopMotor();
  1318  0011  120A  118A  2008  120A  118A  	fcall	_StopMotor
  1319  0016                     L2:	
  1320                           
  1321                           ;Controls.c: 130:     Lcd_Clear();
  1322  0016  160A  118A  27F5  120A  118A  	fcall	_Lcd_Clear
  1323                           
  1324                           ;Controls.c: 131:     Lcd_Set_Cursor(1, 1);
  1325  001B  01F4               	clrf	Lcd_Set_Cursor@b
  1326  001C  0AF4               	incf	Lcd_Set_Cursor@b,f
  1327  001D  3001               	movlw	1
  1328  001E  120A  158A  2217  120A  118A  	fcall	_Lcd_Set_Cursor
  1329                           
  1330                           ;Controls.c: 132:     Lcd_Write_String("Adelante: ");
  1331  0023  303B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1332  0024  00F5               	movwf	Lcd_Write_String@a
  1333  0025  3080               	movlw	128
  1334  0026  00F6               	movwf	Lcd_Write_String@a+1
  1335  0027  120A  158A  21DA  120A  118A  	fcall	_Lcd_Write_String
  1336                           
  1337                           ;Controls.c: 133:     Lcd_Set_Cursor(2, 1);
  1338  002C  01F4               	clrf	Lcd_Set_Cursor@b
  1339  002D  0AF4               	incf	Lcd_Set_Cursor@b,f
  1340  002E  3002               	movlw	2
  1341  002F  120A  158A  2217  120A  118A  	fcall	_Lcd_Set_Cursor
  1342                           
  1343                           ;Controls.c: 134:     Lcd_Write_String("0 Cm");
  1344  0034  3062               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1345                           
  1346                           ;Controls.c: 141:             switch (key2) {
  1347  0035  287C               	goto	L3
  1348  0036                     l2713:	
  1349                           
  1350                           ;Controls.c: 144:                     buffer = 0;
  1351  0036  01E5               	clrf	_buffer
  1352  0037  01E6               	clrf	_buffer+1
  1353  0038  2816               	goto	L2
  1354  0039                     l2725:	
  1355                           ;Controls.c: 150:                     break;
  1356                           
  1357                           ;Controls.c: 149:                     Lcd_Write_String("0 Cm");
  1358                           
  1359                           ;Controls.c: 148:                     Lcd_Set_Cursor(2, 1);
  1360                           
  1361                           ;Controls.c: 147:                     Lcd_Write_String("Adelante: ");
  1362                           
  1363                           ;Controls.c: 146:                     Lcd_Set_Cursor(1, 1);
  1364                           
  1365                           ;Controls.c: 145:                     Lcd_Clear();
  1366                           
  1367                           
  1368                           ;Controls.c: 156:                     Grados = 0;
  1369  0039  01E0               	clrf	_Grados
  1370  003A  01E1               	clrf	_Grados+1
  1371                           
  1372                           ;Controls.c: 157:                     CmHorario = buffer;
  1373  003B  0866               	movf	_buffer+1,w
  1374  003C  00DF               	movwf	_CmHorario+1
  1375  003D  0865               	movf	_buffer,w
  1376  003E  00DE               	movwf	_CmHorario
  1377                           
  1378                           ;Controls.c: 158:                     RunMotor();
  1379  003F  120A  158A  207C  120A  118A  	fcall	_RunMotor
  1380                           
  1381                           ;Controls.c: 159:                     if (CmHorario != 0) {
  1382  0044  1283               	bcf	3,5	;RP0=0, select bank0
  1383  0045  1303               	bcf	3,6	;RP1=0, select bank0
  1384  0046  085E               	movf	_CmHorario,w
  1385  0047  045F               	iorwf	_CmHorario+1,w
  1386  0048  1D03               	btfss	3,2
  1387  0049  0008               	return
  1388  004A  2884               	goto	l2707
  1389  004B                     l2735:	
  1390                           
  1391                           ;Controls.c: 168:                     buffer = (10 * buffer + key2);
  1392  004B  0866               	movf	_buffer+1,w
  1393  004C  00F1               	movwf	___wmul@multiplier+1
  1394  004D  0865               	movf	_buffer,w
  1395  004E  00F0               	movwf	___wmul@multiplier
  1396  004F  300A               	movlw	10
  1397  0050  00F2               	movwf	___wmul@multiplicand
  1398  0051  3000               	movlw	0
  1399  0052  00F3               	movwf	___wmul@multiplicand+1
  1400  0053  120A  158A  20EF  120A  118A  	fcall	___wmul
  1401  0058  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0059  1303               	bcf	3,6	;RP1=0, select bank0
  1403  005A  0867               	movf	_key2,w
  1404  005B  0770               	addwf	?___wmul,w
  1405  005C  00E5               	movwf	_buffer
  1406  005D  0868               	movf	_key2+1,w
  1407  005E  1803               	skipnc
  1408  005F  0A68               	incf	_key2+1,w
  1409  0060  0771               	addwf	?___wmul+1,w
  1410  0061  00E6               	movwf	_buffer+1
  1411                           
  1412                           ;Controls.c: 169:                     buffer -= 48;
  1413  0062  30D0               	movlw	208
  1414  0063  07E5               	addwf	_buffer,f
  1415  0064  1803               	skipnc
  1416  0065  0AE6               	incf	_buffer+1,f
  1417  0066  30FF               	movlw	255
  1418  0067  07E6               	addwf	_buffer+1,f
  1419                           
  1420                           ;Controls.c: 170:                     Lcd_Set_Cursor(2, 1);
  1421  0068  01F4               	clrf	Lcd_Set_Cursor@b
  1422  0069  0AF4               	incf	Lcd_Set_Cursor@b,f
  1423  006A  3002               	movlw	2
  1424  006B  120A  158A  2217  120A  118A  	fcall	_Lcd_Set_Cursor
  1425                           
  1426                           ;Controls.c: 171:                     Lcd_Write_Integer(buffer);
  1427  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1428  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1429  0072  0866               	movf	_buffer+1,w
  1430  0073  00C6               	movwf	Lcd_Write_Integer@a+1
  1431  0074  0865               	movf	_buffer,w
  1432  0075  00C5               	movwf	Lcd_Write_Integer@a
  1433  0076  120A  158A  2089  120A  118A  	fcall	_Lcd_Write_Integer
  1434                           
  1435                           ;Controls.c: 172:                     Lcd_Write_String(" Cm");
  1436  007B  3063               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  1437  007C                     L3:	
  1438  007C  00F5               	movwf	Lcd_Write_String@a
  1439  007D  3080               	movlw	128
  1440  007E  00F6               	movwf	Lcd_Write_String@a+1
  1441  007F  120A  158A  21DA  120A  118A  	fcall	_Lcd_Write_String
  1442  0084                     l2707:	
  1443                           
  1444                           ;Controls.c: 138:         keypress = KeyPadGetKey();
  1445  0084  120A  158A  2390  120A  118A  	fcall	_KeyPadGetKey
  1446  0089  0870               	movf	?_KeyPadGetKey,w
  1447  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1448  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1449  008C  00D2               	movwf	??_configurarHorario
  1450  008D  0852               	movf	??_configurarHorario,w
  1451  008E  00E9               	movwf	_keypress
  1452                           
  1453                           ;Controls.c: 139:         if (keypress != keyPadMatrix[ 0x10 ]) {
  1454  008F  3021               	movlw	low (((_keyPadMatrix+32)-__stringbase)| (0+32768))
  1455  0090  0084               	movwf	4
  1456  0091  120A  158A  200A  120A  118A  	fcall	stringdir
  1457  0096  00D2               	movwf	??_configurarHorario
  1458  0097  120A  158A  200A  120A  118A  	fcall	stringdir
  1459  009C  00D3               	movwf	??_configurarHorario+1
  1460  009D  0869               	movf	_keypress,w
  1461  009E  00D4               	movwf	??_configurarHorario+2
  1462  009F  01D5               	clrf	??_configurarHorario+3
  1463  00A0  0853               	movf	??_configurarHorario+1,w
  1464  00A1  0655               	xorwf	??_configurarHorario+3,w
  1465  00A2  1D03               	skipz
  1466  00A3  28A6               	goto	u3655
  1467  00A4  0852               	movf	??_configurarHorario,w
  1468  00A5  0654               	xorwf	??_configurarHorario+2,w
  1469  00A6                     u3655:	
  1470  00A6  1903               	skipnz
  1471  00A7  2884               	goto	l2707
  1472                           
  1473                           ;Controls.c: 140:             key2 = keypress;
  1474  00A8  0869               	movf	_keypress,w
  1475  00A9  00D2               	movwf	??_configurarHorario
  1476  00AA  01D3               	clrf	??_configurarHorario+1
  1477  00AB  0852               	movf	??_configurarHorario,w
  1478  00AC  00E7               	movwf	_key2
  1479  00AD  0853               	movf	??_configurarHorario+1,w
  1480  00AE  00E8               	movwf	_key2+1
  1481                           
  1482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1483                           ; Switch size 1, requested type "simple"
  1484                           ; Number of cases is 1, Range of values is 0 to 0
  1485                           ; switch strategies available:
  1486                           ; Name         Instructions Cycles
  1487                           ; simple_byte            4     3 (average)
  1488                           ; direct_byte           11     8 (fixed)
  1489                           ; jumptable            260     6 (fixed)
  1490                           ;	Chosen strategy is simple_byte
  1491                           
  1492                           ;Controls.c: 173:             }
  1493  00AF  0868               	movf	_key2+1,w
  1494  00B0  3A00               	xorlw	0	; case 0
  1495  00B1  1903               	skipnz
  1496  00B2  28B4               	goto	l2981
  1497  00B3  284B               	goto	l2735
  1498  00B4                     l2981:	
  1499                           
  1500                           ; Switch size 1, requested type "simple"
  1501                           ; Number of cases is 6, Range of values is 35 to 68
  1502                           ; switch strategies available:
  1503                           ; Name         Instructions Cycles
  1504                           ; simple_byte           19    10 (average)
  1505                           ; direct_byte          113    11 (fixed)
  1506                           ; jumptable            263     9 (fixed)
  1507                           ;	Chosen strategy is simple_byte
  1508  00B4  0867               	movf	_key2,w
  1509  00B5  3A23               	xorlw	35	; case 35
  1510  00B6  1903               	skipnz
  1511  00B7  28C8               	goto	l222
  1512  00B8  3A09               	xorlw	9	; case 42
  1513  00B9  1903               	skipnz
  1514  00BA  28C8               	goto	l222
  1515  00BB  3A6B               	xorlw	107	; case 65
  1516  00BC  1903               	skipnz
  1517  00BD  2836               	goto	l2713
  1518  00BE  3A03               	xorlw	3	; case 66
  1519  00BF  1903               	skipnz
  1520  00C0  28C8               	goto	l222
  1521  00C1  3A01               	xorlw	1	; case 67
  1522  00C2  1903               	skipnz
  1523  00C3  28C8               	goto	l222
  1524  00C4  3A07               	xorlw	7	; case 68
  1525  00C5  1903               	skipnz
  1526  00C6  2839               	goto	l2725
  1527  00C7  284B               	goto	l2735
  1528  00C8                     l222:	
  1529                           ;Controls.c: 174:         }
  1530                           
  1531  00C8  2884               	goto	l2707
  1532  00C9                     __end_of_configurarHorario:	
  1533                           
  1534                           	psect	text2
  1535  0F0A                     __ptext2:	
  1536 ;; *************** function _configurarAntiHorario *****************
  1537 ;; Defined at:
  1538 ;;		line 68 in file "Controls.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  2   10[None  ] int 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1552 ;;      Params:         0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0
  1554 ;;      Temps:          0       4       0       0       0
  1555 ;;      Totals:         0       4       0       0       0
  1556 ;;Total ram usage:        4 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    4
  1559 ;; This function calls:
  1560 ;;		_KeyPadGetKey
  1561 ;;		_Lcd_Clear
  1562 ;;		_Lcd_Set_Cursor
  1563 ;;		_Lcd_Write_Integer
  1564 ;;		_Lcd_Write_String
  1565 ;;		_RunMotor
  1566 ;;		_StopMotor
  1567 ;;		___wmul
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _configurarAntiHorario
  1575  0F0A                     _configurarAntiHorario:	
  1576                           
  1577                           ;Controls.c: 70:     buffer = 0;
  1578                           
  1579                           ;incstack = 0
  1580                           ; Regs used in _configurarAntiHorario: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  1581  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0F0C  01E5               	clrf	_buffer
  1584  0F0D  01E6               	clrf	_buffer+1
  1585                           
  1586                           ;Controls.c: 71:     StopMotor();
  1587  0F0E  120A  118A  2008  120A  158A  	fcall	_StopMotor
  1588                           
  1589                           ;Controls.c: 73:     Lcd_Clear();
  1590  0F13  160A  118A  27F5  120A  158A  	fcall	_Lcd_Clear
  1591                           
  1592                           ;Controls.c: 74:     Lcd_Set_Cursor(1, 1);
  1593  0F18  01F4               	clrf	Lcd_Set_Cursor@b
  1594  0F19  0AF4               	incf	Lcd_Set_Cursor@b,f
  1595  0F1A  3001               	movlw	1
  1596  0F1B  120A  158A  2217  120A  158A  	fcall	_Lcd_Set_Cursor
  1597                           
  1598                           ;Controls.c: 75:     Lcd_Write_String("Atras: ");
  1599  0F20  305A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1600  0F21  00F5               	movwf	Lcd_Write_String@a
  1601  0F22  3080               	movlw	128
  1602  0F23  00F6               	movwf	Lcd_Write_String@a+1
  1603  0F24  120A  158A  21DA  120A  158A  	fcall	_Lcd_Write_String
  1604                           
  1605                           ;Controls.c: 76:     Lcd_Set_Cursor(2, 1);
  1606  0F29  01F4               	clrf	Lcd_Set_Cursor@b
  1607  0F2A  0AF4               	incf	Lcd_Set_Cursor@b,f
  1608  0F2B  3002               	movlw	2
  1609  0F2C  120A  158A  2217  120A  158A  	fcall	_Lcd_Set_Cursor
  1610                           
  1611                           ;Controls.c: 77:     Lcd_Write_String("0 Cm");
  1612  0F31  3062               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1613  0F32  00F5               	movwf	Lcd_Write_String@a
  1614  0F33  3080               	movlw	128
  1615  0F34  00F6               	movwf	Lcd_Write_String@a+1
  1616  0F35  120A  158A  21DA  120A  158A  	fcall	_Lcd_Write_String
  1617  0F3A                     l2765:	
  1618                           
  1619                           ;Controls.c: 81:         keypress = KeyPadGetKey();
  1620  0F3A  120A  158A  2390  120A  158A  	fcall	_KeyPadGetKey
  1621  0F3F  0870               	movf	?_KeyPadGetKey,w
  1622  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  1623  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  1624  0F42  00D2               	movwf	??_configurarAntiHorario
  1625  0F43  0852               	movf	??_configurarAntiHorario,w
  1626  0F44  00E9               	movwf	_keypress
  1627                           
  1628                           ;Controls.c: 82:         if (keypress != keyPadMatrix[ 0x10 ]) {
  1629  0F45  3021               	movlw	low (((_keyPadMatrix+32)-__stringbase)| (0+32768))
  1630  0F46  0084               	movwf	4
  1631  0F47  120A  158A  200A  120A  158A  	fcall	stringdir
  1632  0F4C  00D2               	movwf	??_configurarAntiHorario
  1633  0F4D  120A  158A  200A  120A  158A  	fcall	stringdir
  1634  0F52  00D3               	movwf	??_configurarAntiHorario+1
  1635  0F53  0869               	movf	_keypress,w
  1636  0F54  00D4               	movwf	??_configurarAntiHorario+2
  1637  0F55  01D5               	clrf	??_configurarAntiHorario+3
  1638  0F56  0853               	movf	??_configurarAntiHorario+1,w
  1639  0F57  0655               	xorwf	??_configurarAntiHorario+3,w
  1640  0F58  1D03               	skipz
  1641  0F59  2F5C               	goto	u3675
  1642  0F5A  0852               	movf	??_configurarAntiHorario,w
  1643  0F5B  0654               	xorwf	??_configurarAntiHorario+2,w
  1644  0F5C                     u3675:	
  1645  0F5C  1903               	skipnz
  1646  0F5D  2FF5               	goto	l2805
  1647                           
  1648                           ;Controls.c: 83:             key2 = keypress;
  1649  0F5E  0869               	movf	_keypress,w
  1650  0F5F  00D2               	movwf	??_configurarAntiHorario
  1651  0F60  01D3               	clrf	??_configurarAntiHorario+1
  1652  0F61  0852               	movf	??_configurarAntiHorario,w
  1653  0F62  00E7               	movwf	_key2
  1654  0F63  0853               	movf	??_configurarAntiHorario+1,w
  1655  0F64  00E8               	movwf	_key2+1
  1656                           
  1657                           ;Controls.c: 84:             switch (key2) {
  1658  0F65  2FDC               	goto	l2803
  1659  0F66                     l2771:	
  1660                           
  1661                           ;Controls.c: 88:                     buffer = 0;
  1662  0F66  01E5               	clrf	_buffer
  1663  0F67  01E6               	clrf	_buffer+1
  1664                           
  1665                           ;Controls.c: 89:                     Lcd_Clear();
  1666  0F68  160A  118A  27F5  120A  158A  	fcall	_Lcd_Clear
  1667                           
  1668                           ;Controls.c: 90:                     Lcd_Set_Cursor(1, 1);
  1669  0F6D  01F4               	clrf	Lcd_Set_Cursor@b
  1670  0F6E  0AF4               	incf	Lcd_Set_Cursor@b,f
  1671  0F6F  3001               	movlw	1
  1672  0F70  120A  158A  2217  120A  158A  	fcall	_Lcd_Set_Cursor
  1673                           
  1674                           ;Controls.c: 91:                     Lcd_Write_String("Atras: ");
  1675  0F75  305A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1676  0F76  00F5               	movwf	Lcd_Write_String@a
  1677  0F77  3080               	movlw	128
  1678  0F78  00F6               	movwf	Lcd_Write_String@a+1
  1679  0F79  120A  158A  21DA  120A  158A  	fcall	_Lcd_Write_String
  1680                           
  1681                           ;Controls.c: 92:                     Lcd_Set_Cursor(2, 1);
  1682  0F7E  01F4               	clrf	Lcd_Set_Cursor@b
  1683  0F7F  0AF4               	incf	Lcd_Set_Cursor@b,f
  1684  0F80  3002               	movlw	2
  1685  0F81  120A  158A  2217  120A  158A  	fcall	_Lcd_Set_Cursor
  1686                           
  1687                           ;Controls.c: 93:                     Lcd_Write_String("0 Cm");
  1688  0F86  3062               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1689  0F87  00F5               	movwf	Lcd_Write_String@a
  1690  0F88  3080               	movlw	128
  1691  0F89  00F6               	movwf	Lcd_Write_String@a+1
  1692  0F8A  120A  158A  21DA  120A  158A  	fcall	_Lcd_Write_String
  1693                           
  1694                           ;Controls.c: 94:                     break;
  1695  0F8F  2FF5               	goto	l2805
  1696  0F90                     l2783:	
  1697                           
  1698                           ;Controls.c: 98:                     Grados = 0;
  1699  0F90  01E0               	clrf	_Grados
  1700  0F91  01E1               	clrf	_Grados+1
  1701                           
  1702                           ;Controls.c: 99:                     CmAntiHorario = buffer;
  1703  0F92  0866               	movf	_buffer+1,w
  1704  0F93  00DD               	movwf	_CmAntiHorario+1
  1705  0F94  0865               	movf	_buffer,w
  1706  0F95  00DC               	movwf	_CmAntiHorario
  1707                           
  1708                           ;Controls.c: 100:                     RunMotor();
  1709  0F96  120A  158A  207C  120A  158A  	fcall	_RunMotor
  1710                           
  1711                           ;Controls.c: 101:                     if (CmAntiHorario != 0) {
  1712  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0F9D  085C               	movf	_CmAntiHorario,w
  1715  0F9E  045D               	iorwf	_CmAntiHorario+1,w
  1716  0F9F  1D03               	btfss	3,2
  1717  0FA0  0008               	return
  1718  0FA1  2FF5               	goto	l2805
  1719  0FA2                     l2793:	
  1720                           
  1721                           ;Controls.c: 110:                     buffer = (10 * buffer + key2);
  1722  0FA2  0866               	movf	_buffer+1,w
  1723  0FA3  00F1               	movwf	___wmul@multiplier+1
  1724  0FA4  0865               	movf	_buffer,w
  1725  0FA5  00F0               	movwf	___wmul@multiplier
  1726  0FA6  300A               	movlw	10
  1727  0FA7  00F2               	movwf	___wmul@multiplicand
  1728  0FA8  3000               	movlw	0
  1729  0FA9  00F3               	movwf	___wmul@multiplicand+1
  1730  0FAA  120A  158A  20EF  120A  158A  	fcall	___wmul
  1731  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  1733  0FB1  0867               	movf	_key2,w
  1734  0FB2  0770               	addwf	?___wmul,w
  1735  0FB3  00E5               	movwf	_buffer
  1736  0FB4  0868               	movf	_key2+1,w
  1737  0FB5  1803               	skipnc
  1738  0FB6  0A68               	incf	_key2+1,w
  1739  0FB7  0771               	addwf	?___wmul+1,w
  1740  0FB8  00E6               	movwf	_buffer+1
  1741                           
  1742                           ;Controls.c: 111:                     buffer -= 48;
  1743  0FB9  30D0               	movlw	208
  1744  0FBA  07E5               	addwf	_buffer,f
  1745  0FBB  1803               	skipnc
  1746  0FBC  0AE6               	incf	_buffer+1,f
  1747  0FBD  30FF               	movlw	255
  1748  0FBE  07E6               	addwf	_buffer+1,f
  1749                           
  1750                           ;Controls.c: 112:                     Lcd_Set_Cursor(2, 1);
  1751  0FBF  01F4               	clrf	Lcd_Set_Cursor@b
  1752  0FC0  0AF4               	incf	Lcd_Set_Cursor@b,f
  1753  0FC1  3002               	movlw	2
  1754  0FC2  120A  158A  2217  120A  158A  	fcall	_Lcd_Set_Cursor
  1755                           
  1756                           ;Controls.c: 113:                     Lcd_Write_Integer(buffer);
  1757  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  1758  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  1759  0FC9  0866               	movf	_buffer+1,w
  1760  0FCA  00C6               	movwf	Lcd_Write_Integer@a+1
  1761  0FCB  0865               	movf	_buffer,w
  1762  0FCC  00C5               	movwf	Lcd_Write_Integer@a
  1763  0FCD  120A  158A  2089  120A  158A  	fcall	_Lcd_Write_Integer
  1764                           
  1765                           ;Controls.c: 114:                     Lcd_Write_String(" Cm");
  1766  0FD2  3063               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  1767  0FD3  00F5               	movwf	Lcd_Write_String@a
  1768  0FD4  3080               	movlw	128
  1769  0FD5  00F6               	movwf	Lcd_Write_String@a+1
  1770  0FD6  120A  158A  21DA  120A  158A  	fcall	_Lcd_Write_String
  1771                           
  1772                           ;Controls.c: 115:             }
  1773  0FDB  2FF5               	goto	l2805
  1774  0FDC                     l2803:	
  1775                           
  1776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1777                           ; Switch size 1, requested type "simple"
  1778                           ; Number of cases is 1, Range of values is 0 to 0
  1779                           ; switch strategies available:
  1780                           ; Name         Instructions Cycles
  1781                           ; simple_byte            4     3 (average)
  1782                           ; direct_byte           11     8 (fixed)
  1783                           ; jumptable            260     6 (fixed)
  1784                           ;	Chosen strategy is simple_byte
  1785  0FDC  0868               	movf	_key2+1,w
  1786  0FDD  3A00               	xorlw	0	; case 0
  1787  0FDE  1903               	skipnz
  1788  0FDF  2FE1               	goto	l2983
  1789  0FE0  2FA2               	goto	l2793
  1790  0FE1                     l2983:	
  1791                           
  1792                           ; Switch size 1, requested type "simple"
  1793                           ; Number of cases is 6, Range of values is 35 to 68
  1794                           ; switch strategies available:
  1795                           ; Name         Instructions Cycles
  1796                           ; simple_byte           19    10 (average)
  1797                           ; direct_byte          113    11 (fixed)
  1798                           ; jumptable            263     9 (fixed)
  1799                           ;	Chosen strategy is simple_byte
  1800  0FE1  0867               	movf	_key2,w
  1801  0FE2  3A23               	xorlw	35	; case 35
  1802  0FE3  1903               	skipnz
  1803  0FE4  2FF5               	goto	l2805
  1804  0FE5  3A09               	xorlw	9	; case 42
  1805  0FE6  1903               	skipnz
  1806  0FE7  2FF5               	goto	l2805
  1807  0FE8  3A6B               	xorlw	107	; case 65
  1808  0FE9  1903               	skipnz
  1809  0FEA  2FF5               	goto	l2805
  1810  0FEB  3A03               	xorlw	3	; case 66
  1811  0FEC  1903               	skipnz
  1812  0FED  2F66               	goto	l2771
  1813  0FEE  3A01               	xorlw	1	; case 67
  1814  0FEF  1903               	skipnz
  1815  0FF0  2FF5               	goto	l2805
  1816  0FF1  3A07               	xorlw	7	; case 68
  1817  0FF2  1903               	skipnz
  1818  0FF3  2F90               	goto	l2783
  1819  0FF4  2FA2               	goto	l2793
  1820  0FF5                     l2805:	
  1821                           
  1822                           ;Controls.c: 117:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1823  0FF5  3003               	movlw	3
  1824  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  1825  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  1826  0FF8  00D3               	movwf	??_configurarAntiHorario+1
  1827  0FF9  3097               	movlw	151
  1828  0FFA  00D2               	movwf	??_configurarAntiHorario
  1829  0FFB                     u3777:	
  1830  0FFB  0BD2               	decfsz	??_configurarAntiHorario,f
  1831  0FFC  2FFB               	goto	u3777
  1832  0FFD  0BD3               	decfsz	??_configurarAntiHorario+1,f
  1833  0FFE  2FFB               	goto	u3777
  1834  0FFF  2F3A               	goto	l2765
  1835  1000                     __end_of_configurarAntiHorario:	
  1836                           
  1837                           	psect	text3
  1838  08EF                     __ptext3:	
  1839 ;; *************** function ___wmul *****************
  1840 ;; Defined at:
  1841 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  multiplier      2    0[COMMON] unsigned int 
  1844 ;;  multiplicand    2    2[COMMON] unsigned int 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  product         2    4[COMMON] unsigned int 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  2    0[COMMON] unsigned int 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1856 ;;      Params:         4       0       0       0       0
  1857 ;;      Locals:         2       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0
  1859 ;;      Totals:         6       0       0       0       0
  1860 ;;Total ram usage:        6 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_configurarAntiHorario
  1866 ;;		_configurarHorario
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           
  1871                           ;psect for function ___wmul
  1872  08EF                     ___wmul:	
  1873                           
  1874                           ;incstack = 0
  1875                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1876  08EF  01F4               	clrf	___wmul@product
  1877  08F0  01F5               	clrf	___wmul@product+1
  1878  08F1                     l2423:	
  1879  08F1  1C70               	btfss	___wmul@multiplier,0
  1880  08F2  28F9               	goto	l361
  1881  08F3  0872               	movf	___wmul@multiplicand,w
  1882  08F4  07F4               	addwf	___wmul@product,f
  1883  08F5  1803               	skipnc
  1884  08F6  0AF5               	incf	___wmul@product+1,f
  1885  08F7  0873               	movf	___wmul@multiplicand+1,w
  1886  08F8  07F5               	addwf	___wmul@product+1,f
  1887  08F9                     l361:	
  1888  08F9  3001               	movlw	1
  1889  08FA                     u3065:	
  1890  08FA  1003               	clrc
  1891  08FB  0DF2               	rlf	___wmul@multiplicand,f
  1892  08FC  0DF3               	rlf	___wmul@multiplicand+1,f
  1893  08FD  3EFF               	addlw	-1
  1894  08FE  1D03               	skipz
  1895  08FF  28FA               	goto	u3065
  1896  0900  3001               	movlw	1
  1897  0901                     u3075:	
  1898  0901  1003               	clrc
  1899  0902  0CF1               	rrf	___wmul@multiplier+1,f
  1900  0903  0CF0               	rrf	___wmul@multiplier,f
  1901  0904  3EFF               	addlw	-1
  1902  0905  1D03               	skipz
  1903  0906  2901               	goto	u3075
  1904  0907  0870               	movf	___wmul@multiplier,w
  1905  0908  0471               	iorwf	___wmul@multiplier+1,w
  1906  0909  1D03               	btfss	3,2
  1907  090A  28F1               	goto	l2423
  1908  090B  0875               	movf	___wmul@product+1,w
  1909  090C  00F1               	movwf	?___wmul+1
  1910  090D  0874               	movf	___wmul@product,w
  1911  090E  00F0               	movwf	?___wmul
  1912  090F  0008               	return
  1913  0910                     __end_of___wmul:	
  1914                           
  1915                           	psect	text4
  1916  0008                     __ptext4:	
  1917 ;; *************** function _StopMotor *****************
  1918 ;; Defined at:
  1919 ;;		line 58 in file "Controls.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;		None
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  2    6[None  ] int 
  1926 ;; Registers used:
  1927 ;;		None
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1933 ;;      Params:         0       0       0       0       0
  1934 ;;      Locals:         0       0       0       0       0
  1935 ;;      Temps:          0       0       0       0       0
  1936 ;;      Totals:         0       0       0       0       0
  1937 ;;Total ram usage:        0 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_main
  1943 ;;		_configurarAntiHorario
  1944 ;;		_configurarHorario
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function _StopMotor
  1950  0008                     _StopMotor:	
  1951                           
  1952                           ;Controls.c: 59:     RC1 = 0;
  1953                           
  1954                           ;incstack = 0
  1955                           ; Regs used in _StopMotor: []
  1956  0008  1283               	bcf	3,5	;RP0=0, select bank0
  1957  0009  1303               	bcf	3,6	;RP1=0, select bank0
  1958  000A  1087               	bcf	7,1	;volatile
  1959                           
  1960                           ;Controls.c: 60:     RC0 = 0;
  1961  000B  1007               	bcf	7,0	;volatile
  1962                           
  1963                           ;Controls.c: 61:     return 0;;	Return value of _StopMotor is never used
  1964  000C  0008               	return
  1965  000D                     __end_of_StopMotor:	
  1966                           
  1967                           	psect	text5
  1968  087C                     __ptext5:	
  1969 ;; *************** function _RunMotor *****************
  1970 ;; Defined at:
  1971 ;;		line 47 in file "Controls.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;		None
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  2   14[None  ] int 
  1978 ;; Registers used:
  1979 ;;		wreg, status,2, status,0
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1985 ;;      Params:         0       0       0       0       0
  1986 ;;      Locals:         0       0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0
  1988 ;;      Totals:         0       0       0       0       0
  1989 ;;Total ram usage:        0 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; This function calls:
  1992 ;;		Nothing
  1993 ;; This function is called by:
  1994 ;;		_main
  1995 ;;		_configurarAntiHorario
  1996 ;;		_configurarHorario
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           
  2001                           ;psect for function _RunMotor
  2002  087C                     _RunMotor:	
  2003                           
  2004                           ;Controls.c: 48:     if (CmAntiHorario != 0 && CmHorario != 0) {
  2005                           
  2006                           ;incstack = 0
  2007                           ; Regs used in _RunMotor: [wreg+status,2+status,0]
  2008  087C  1283               	bcf	3,5	;RP0=0, select bank0
  2009  087D  1303               	bcf	3,6	;RP1=0, select bank0
  2010  087E  085C               	movf	_CmAntiHorario,w
  2011  087F  045D               	iorwf	_CmAntiHorario+1,w
  2012  0880  1903               	btfsc	3,2
  2013  0881  0008               	return
  2014  0882  085E               	movf	_CmHorario,w
  2015  0883  045F               	iorwf	_CmHorario+1,w
  2016  0884  1903               	btfsc	3,2
  2017  0885  0008               	return
  2018                           
  2019                           ;Controls.c: 49:         RC0 = 1;
  2020  0886  1407               	bsf	7,0	;volatile
  2021                           
  2022                           ;Controls.c: 50:         RC1 = 0;
  2023  0887  1087               	bcf	7,1	;volatile
  2024  0888  0008               	return
  2025  0889                     __end_of_RunMotor:	
  2026                           
  2027                           	psect	text6
  2028  0B90                     __ptext6:	
  2029 ;; *************** function _KeyPadGetKey *****************
  2030 ;; Defined at:
  2031 ;;		line 19 in file "KeyPad.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;		None
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  row             1    5[COMMON] unsigned char 
  2036 ;;  key             1    4[COMMON] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  2    0[COMMON] int 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2046 ;;      Params:         2       0       0       0       0
  2047 ;;      Locals:         2       0       0       0       0
  2048 ;;      Temps:          2       0       0       0       0
  2049 ;;      Totals:         6       0       0       0       0
  2050 ;;Total ram usage:        6 bytes
  2051 ;; Hardware stack levels used:    2
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_main
  2056 ;;		_configurarAntiHorario
  2057 ;;		_configurarHorario
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           
  2062                           ;psect for function _KeyPadGetKey
  2063  0B90                     _KeyPadGetKey:	
  2064                           
  2065                           ;KeyPad.c: 21:     char key = 0, row;
  2066                           
  2067                           ;incstack = 0
  2068                           ; Regs used in _KeyPadGetKey: [wreg-fsr0h+status,2+status,0+pclath]
  2069  0B90  01F4               	clrf	KeyPadGetKey@key
  2070                           
  2071                           ;KeyPad.c: 23:     for (row = 0b00000001; row < 0b00010000; row <<= 1) {
  2072  0B91  01F5               	clrf	KeyPadGetKey@row
  2073  0B92  0AF5               	incf	KeyPadGetKey@row,f
  2074  0B93                     l127:	
  2075                           
  2076                           ;KeyPad.c: 24:         {;KeyPad.c: 25:             RA0 = (row & 0x0001) >> 0;
  2077  0B93  1C75               	btfss	KeyPadGetKey@row,0
  2078  0B94  2B99               	goto	u2780
  2079  0B95  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0B96  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0B97  1405               	bsf	5,0	;volatile
  2082  0B98  2B9C               	goto	l2317
  2083  0B99                     u2780:	
  2084  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0B9B  1005               	bcf	5,0	;volatile
  2087  0B9C                     l2317:	
  2088                           
  2089                           ;KeyPad.c: 26:             RA1 = (row & 0x0002) >> 1;
  2090  0B9C  0875               	movf	KeyPadGetKey@row,w
  2091  0B9D  00F2               	movwf	??_KeyPadGetKey
  2092  0B9E  3001               	movlw	1
  2093  0B9F                     u2805:	
  2094  0B9F  1003               	clrc
  2095  0BA0  0CF2               	rrf	??_KeyPadGetKey,f
  2096  0BA1  3EFF               	addlw	-1
  2097  0BA2  1D03               	skipz
  2098  0BA3  2B9F               	goto	u2805
  2099  0BA4  1C72               	btfss	??_KeyPadGetKey,0
  2100  0BA5  2BAA               	goto	u2810
  2101  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  2102  0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  2103  0BA8  1485               	bsf	5,1	;volatile
  2104  0BA9  2BAD               	goto	u2824
  2105  0BAA                     u2810:	
  2106  0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  2107  0BAB  1303               	bcf	3,6	;RP1=0, select bank0
  2108  0BAC  1085               	bcf	5,1	;volatile
  2109  0BAD                     u2824:	
  2110                           
  2111                           ;KeyPad.c: 27:             RA2 = (row & 0x0004) >> 2;
  2112  0BAD  0875               	movf	KeyPadGetKey@row,w
  2113  0BAE  00F2               	movwf	??_KeyPadGetKey
  2114  0BAF  3002               	movlw	2
  2115  0BB0                     u2835:	
  2116  0BB0  1003               	clrc
  2117  0BB1  0CF2               	rrf	??_KeyPadGetKey,f
  2118  0BB2  3EFF               	addlw	-1
  2119  0BB3  1D03               	skipz
  2120  0BB4  2BB0               	goto	u2835
  2121  0BB5  1C72               	btfss	??_KeyPadGetKey,0
  2122  0BB6  2BBB               	goto	u2840
  2123  0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  2124  0BB8  1303               	bcf	3,6	;RP1=0, select bank0
  2125  0BB9  1505               	bsf	5,2	;volatile
  2126  0BBA  2BBE               	goto	u2854
  2127  0BBB                     u2840:	
  2128  0BBB  1283               	bcf	3,5	;RP0=0, select bank0
  2129  0BBC  1303               	bcf	3,6	;RP1=0, select bank0
  2130  0BBD  1105               	bcf	5,2	;volatile
  2131  0BBE                     u2854:	
  2132                           
  2133                           ;KeyPad.c: 28:             RA4 = (row & 0x0008) >> 3;
  2134  0BBE  0875               	movf	KeyPadGetKey@row,w
  2135  0BBF  00F2               	movwf	??_KeyPadGetKey
  2136  0BC0  3003               	movlw	3
  2137  0BC1                     u2865:	
  2138  0BC1  1003               	clrc
  2139  0BC2  0CF2               	rrf	??_KeyPadGetKey,f
  2140  0BC3  3EFF               	addlw	-1
  2141  0BC4  1D03               	skipz
  2142  0BC5  2BC1               	goto	u2865
  2143  0BC6  1C72               	btfss	??_KeyPadGetKey,0
  2144  0BC7  2BCC               	goto	u2870
  2145  0BC8  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0BC9  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0BCA  1605               	bsf	5,4	;volatile
  2148  0BCB  2BCF               	goto	l2319
  2149  0BCC                     u2870:	
  2150  0BCC  1283               	bcf	3,5	;RP0=0, select bank0
  2151  0BCD  1303               	bcf	3,6	;RP1=0, select bank0
  2152  0BCE  1205               	bcf	5,4	;volatile
  2153  0BCF                     l2319:	
  2154                           
  2155                           ;KeyPad.c: 29:             _delay((unsigned long)((1)*(8000000/4000.0)));
  2156  0BCF  3003               	movlw	3
  2157  0BD0  00F3               	movwf	??_KeyPadGetKey+1
  2158  0BD1  3097               	movlw	151
  2159  0BD2  00F2               	movwf	??_KeyPadGetKey
  2160  0BD3                     u3787:	
  2161  0BD3  0BF2               	decfsz	??_KeyPadGetKey,f
  2162  0BD4  2BD3               	goto	u3787
  2163  0BD5  0BF3               	decfsz	??_KeyPadGetKey+1,f
  2164  0BD6  2BD3               	goto	u3787
  2165  0BD7  2BD8               	nop2
  2166                           
  2167                           ;KeyPad.c: 30:         };KeyPad.c: 32:         if (RA3)break;
  2168  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0BDA  1985               	btfsc	5,3	;volatile
  2171  0BDB  2BF8               	goto	l128
  2172                           
  2173                           ;KeyPad.c: 33:         key++;
  2174  0BDC  3001               	movlw	1
  2175  0BDD  00F2               	movwf	??_KeyPadGetKey
  2176  0BDE  0872               	movf	??_KeyPadGetKey,w
  2177  0BDF  07F4               	addwf	KeyPadGetKey@key,f
  2178                           
  2179                           ;KeyPad.c: 34:         if (RA5)break;
  2180  0BE0  1A85               	btfsc	5,5	;volatile
  2181  0BE1  2BF8               	goto	l128
  2182                           
  2183                           ;KeyPad.c: 35:         key++;
  2184  0BE2  3001               	movlw	1
  2185  0BE3  00F2               	movwf	??_KeyPadGetKey
  2186  0BE4  0872               	movf	??_KeyPadGetKey,w
  2187  0BE5  07F4               	addwf	KeyPadGetKey@key,f
  2188                           
  2189                           ;KeyPad.c: 36:         if (RA7)break;
  2190  0BE6  1B85               	btfsc	5,7	;volatile
  2191  0BE7  2BF8               	goto	l128
  2192                           
  2193                           ;KeyPad.c: 37:         key++;
  2194  0BE8  3001               	movlw	1
  2195  0BE9  00F2               	movwf	??_KeyPadGetKey
  2196  0BEA  0872               	movf	??_KeyPadGetKey,w
  2197  0BEB  07F4               	addwf	KeyPadGetKey@key,f
  2198                           
  2199                           ;KeyPad.c: 38:         if (RA6)break;
  2200  0BEC  1B05               	btfsc	5,6	;volatile
  2201  0BED  2BF8               	goto	l128
  2202                           
  2203                           ;KeyPad.c: 39:         key++;
  2204  0BEE  3001               	movlw	1
  2205  0BEF  00F2               	movwf	??_KeyPadGetKey
  2206  0BF0  0872               	movf	??_KeyPadGetKey,w
  2207  0BF1  07F4               	addwf	KeyPadGetKey@key,f
  2208                           
  2209                           ;KeyPad.c: 40:     }
  2210  0BF2  1003               	clrc
  2211  0BF3  0DF5               	rlf	KeyPadGetKey@row,f
  2212  0BF4  3010               	movlw	16
  2213  0BF5  0275               	subwf	KeyPadGetKey@row,w
  2214  0BF6  1C03               	skipc
  2215  0BF7  2B93               	goto	l127
  2216  0BF8                     l128:	
  2217                           
  2218                           ;KeyPad.c: 41:     RA0 = 0;
  2219  0BF8  1005               	bcf	5,0	;volatile
  2220                           
  2221                           ;KeyPad.c: 42:     RA1 = 0;
  2222  0BF9  1085               	bcf	5,1	;volatile
  2223                           
  2224                           ;KeyPad.c: 43:     RA2 = 0;
  2225  0BFA  1105               	bcf	5,2	;volatile
  2226                           
  2227                           ;KeyPad.c: 44:     RA4 = 0;
  2228  0BFB  1205               	bcf	5,4	;volatile
  2229                           
  2230                           ;KeyPad.c: 45:     if (key != old_key) {
  2231  0BFC  0874               	movf	KeyPadGetKey@key,w
  2232  0BFD  0662               	xorwf	_old_key,w
  2233  0BFE  1903               	skipnz
  2234  0BFF  2C14               	goto	l2359
  2235                           
  2236                           ;KeyPad.c: 46:         old_key = key;
  2237  0C00  0874               	movf	KeyPadGetKey@key,w
  2238  0C01  00F2               	movwf	??_KeyPadGetKey
  2239  0C02  0872               	movf	??_KeyPadGetKey,w
  2240  0C03  00E2               	movwf	_old_key
  2241                           
  2242                           ;KeyPad.c: 47:         return keyPadMatrix[ key ];
  2243  0C04  0874               	movf	KeyPadGetKey@key,w
  2244  0C05  00F2               	movwf	??_KeyPadGetKey
  2245  0C06  0772               	addwf	??_KeyPadGetKey,w
  2246  0C07  3E01               	addlw	low ((_keyPadMatrix-__stringbase)| (0+32768))
  2247  0C08  0084               	movwf	4
  2248  0C09  120A  158A  200A  120A  158A  	fcall	stringdir
  2249  0C0E  00F0               	movwf	?_KeyPadGetKey
  2250  0C0F  120A  158A  200A   	fcall	stringdir
  2251  0C12  00F1               	movwf	?_KeyPadGetKey+1
  2252  0C13  0008               	return
  2253  0C14                     l2359:	
  2254                           
  2255                           ;KeyPad.c: 49:         return keyPadMatrix[ 0x10 ];
  2256  0C14  3021               	movlw	low (((_keyPadMatrix+32)-__stringbase)| (0+32768))
  2257  0C15  0084               	movwf	4
  2258  0C16  120A  158A  200A  120A  158A  	fcall	stringdir
  2259  0C1B  00F0               	movwf	?_KeyPadGetKey
  2260  0C1C  120A  158A  200A   	fcall	stringdir
  2261  0C1F  00F1               	movwf	?_KeyPadGetKey+1
  2262  0C20  0008               	return
  2263  0C21                     __end_of_KeyPadGetKey:	
  2264                           
  2265                           	psect	text7
  2266  0A61                     __ptext7:	
  2267 ;; *************** function _Lcd_Init *****************
  2268 ;; Defined at:
  2269 ;;		line 60 in file "Lcd.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0, pclath, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         0       0       0       0       0
  2284 ;;      Locals:         0       0       0       0       0
  2285 ;;      Temps:          2       0       0       0       0
  2286 ;;      Totals:         2       0       0       0       0
  2287 ;;Total ram usage:        2 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    2
  2290 ;; This function calls:
  2291 ;;		_Lcd_Cmd
  2292 ;;		_Lcd_Port
  2293 ;; This function is called by:
  2294 ;;		_main
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           
  2299                           ;psect for function _Lcd_Init
  2300  0A61                     _Lcd_Init:	
  2301                           
  2302                           ;Lcd.c: 61:     Lcd_Port(0x00);
  2303                           
  2304                           ;incstack = 0
  2305                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2306  0A61  3000               	movlw	0
  2307  0A62  120A  158A  20BB  120A  158A  	fcall	_Lcd_Port
  2308                           
  2309                           ;Lcd.c: 62:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2310  0A67  3034               	movlw	52
  2311  0A68  00F5               	movwf	??_Lcd_Init+1
  2312  0A69  30F1               	movlw	241
  2313  0A6A  00F4               	movwf	??_Lcd_Init
  2314  0A6B                     u3797:	
  2315  0A6B  0BF4               	decfsz	??_Lcd_Init,f
  2316  0A6C  2A6B               	goto	u3797
  2317  0A6D  0BF5               	decfsz	??_Lcd_Init+1,f
  2318  0A6E  2A6B               	goto	u3797
  2319  0A6F  2A70               	nop2
  2320                           
  2321                           ;Lcd.c: 63:     Lcd_Cmd(0x03);
  2322  0A70  3003               	movlw	3
  2323  0A71  120A  158A  20D5  120A  158A  	fcall	_Lcd_Cmd
  2324                           
  2325                           ;Lcd.c: 64:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2326  0A76  300D               	movlw	13
  2327  0A77  00F5               	movwf	??_Lcd_Init+1
  2328  0A78  30FB               	movlw	251
  2329  0A79  00F4               	movwf	??_Lcd_Init
  2330  0A7A                     u3807:	
  2331  0A7A  0BF4               	decfsz	??_Lcd_Init,f
  2332  0A7B  2A7A               	goto	u3807
  2333  0A7C  0BF5               	decfsz	??_Lcd_Init+1,f
  2334  0A7D  2A7A               	goto	u3807
  2335  0A7E  2A7F               	nop2
  2336                           
  2337                           ;Lcd.c: 65:     Lcd_Cmd(0x03);
  2338  0A7F  3003               	movlw	3
  2339  0A80  120A  158A  20D5  120A  158A  	fcall	_Lcd_Cmd
  2340                           
  2341                           ;Lcd.c: 66:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2342  0A85  301D               	movlw	29
  2343  0A86  00F5               	movwf	??_Lcd_Init+1
  2344  0A87  3091               	movlw	145
  2345  0A88  00F4               	movwf	??_Lcd_Init
  2346  0A89                     u3817:	
  2347  0A89  0BF4               	decfsz	??_Lcd_Init,f
  2348  0A8A  2A89               	goto	u3817
  2349  0A8B  0BF5               	decfsz	??_Lcd_Init+1,f
  2350  0A8C  2A89               	goto	u3817
  2351                           
  2352                           ;Lcd.c: 67:     Lcd_Cmd(0x03);
  2353  0A8D  3003               	movlw	3
  2354  0A8E  120A  158A  20D5  120A  158A  	fcall	_Lcd_Cmd
  2355                           
  2356                           ;Lcd.c: 68:     Lcd_Cmd(0x02);
  2357  0A93  3002               	movlw	2
  2358  0A94  120A  158A  20D5  120A  158A  	fcall	_Lcd_Cmd
  2359                           
  2360                           ;Lcd.c: 69:     Lcd_Cmd(0x02);
  2361  0A99  3002               	movlw	2
  2362  0A9A  120A  158A  20D5  120A  158A  	fcall	_Lcd_Cmd
  2363                           
  2364                           ;Lcd.c: 70:     Lcd_Cmd(0x08);
  2365  0A9F  3008               	movlw	8
  2366  0AA0  120A  158A  20D5  120A  158A  	fcall	_Lcd_Cmd
  2367                           
  2368                           ;Lcd.c: 71:     Lcd_Cmd(0x00);
  2369  0AA5  3000               	movlw	0
  2370  0AA6  120A  158A  20D5  120A  158A  	fcall	_Lcd_Cmd
  2371                           
  2372                           ;Lcd.c: 72:     Lcd_Cmd(0x0C);
  2373  0AAB  300C               	movlw	12
  2374  0AAC  120A  158A  20D5  120A  158A  	fcall	_Lcd_Cmd
  2375                           
  2376                           ;Lcd.c: 73:     Lcd_Cmd(0x00);
  2377  0AB1  3000               	movlw	0
  2378  0AB2  120A  158A  20D5  120A  158A  	fcall	_Lcd_Cmd
  2379                           
  2380                           ;Lcd.c: 74:     Lcd_Cmd(0x06);
  2381  0AB7  3006               	movlw	6
  2382  0AB8  120A  158A  20D5   	fcall	_Lcd_Cmd
  2383  0ABB  0008               	return
  2384  0ABC                     __end_of_Lcd_Init:	
  2385                           
  2386                           	psect	text8
  2387  00C9                     __ptext8:	
  2388 ;; *************** function _Encoder *****************
  2389 ;; Defined at:
  2390 ;;		line 204 in file "Controls.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  2   18[None  ] int 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         0       0       0       0       0
  2405 ;;      Locals:         0       0       0       0       0
  2406 ;;      Temps:          0       1       0       0       0
  2407 ;;      Totals:         0       1       0       0       0
  2408 ;;Total ram usage:        1 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:    4
  2411 ;; This function calls:
  2412 ;;		_Lcd_Clear
  2413 ;;		_Lcd_Set_Cursor
  2414 ;;		_Lcd_Write_Integer
  2415 ;;		_Lcd_Write_String
  2416 ;;		_VerificarInversionGiro
  2417 ;;		___fladd
  2418 ;;		___flmul
  2419 ;;		___fltol
  2420 ;;		___xxtofl
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           
  2427                           ;psect for function _Encoder
  2428  00C9                     _Encoder:	
  2429                           
  2430                           ;Controls.c: 205:     LastState = 1;
  2431                           
  2432                           ;incstack = 0
  2433                           ; Regs used in _Encoder: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2434  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  2435  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  2436  00CB  01E4               	clrf	_LastState
  2437  00CC  0AE4               	incf	_LastState,f
  2438                           
  2439                           ;Controls.c: 206:     Grados++;
  2440  00CD  3001               	movlw	1
  2441  00CE  07E0               	addwf	_Grados,f
  2442  00CF  1803               	skipnc
  2443  00D0  0AE1               	incf	_Grados+1,f
  2444  00D1  3000               	movlw	0
  2445  00D2  07E1               	addwf	_Grados+1,f
  2446                           
  2447                           ;Controls.c: 207:     VerificarInversionGiro();
  2448  00D3  120A  158A  2631  120A  118A  	fcall	_VerificarInversionGiro
  2449                           
  2450                           ;Controls.c: 208:     RC2 = !RC2;
  2451  00D8  3004               	movlw	4
  2452  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  2453  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  2454  00DB  0687               	xorwf	7,f
  2455                           
  2456                           ;Controls.c: 209:     cm = Grados * 0.97;
  2457  00DC  0860               	movf	_Grados,w
  2458  00DD  00F0               	movwf	___xxtofl@val
  2459  00DE  0861               	movf	_Grados+1,w
  2460  00DF  00F1               	movwf	___xxtofl@val+1
  2461  00E0  3000               	movlw	0
  2462  00E1  1BF1               	btfsc	___xxtofl@val+1,7
  2463  00E2  30FF               	movlw	255
  2464  00E3  00F2               	movwf	___xxtofl@val+2
  2465  00E4  00F3               	movwf	___xxtofl@val+3
  2466  00E5  3001               	movlw	1
  2467  00E6  120A  158A  24B6  120A  118A  	fcall	___xxtofl
  2468  00EB  0873               	movf	?___xxtofl+3,w
  2469  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  2470  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  2471  00EE  00A7               	movwf	___flmul@a+3
  2472  00EF  0872               	movf	?___xxtofl+2,w
  2473  00F0  00A6               	movwf	___flmul@a+2
  2474  00F1  0871               	movf	?___xxtofl+1,w
  2475  00F2  00A5               	movwf	___flmul@a+1
  2476  00F3  0870               	movf	?___xxtofl,w
  2477  00F4  00A4               	movwf	___flmul@a
  2478  00F5  303F               	movlw	63
  2479  00F6  00A3               	movwf	___flmul@b+3
  2480  00F7  3078               	movlw	120
  2481  00F8  00A2               	movwf	___flmul@b+2
  2482  00F9  3051               	movlw	81
  2483  00FA  00A1               	movwf	___flmul@b+1
  2484  00FB  30EC               	movlw	236
  2485  00FC  00A0               	movwf	___flmul@b
  2486  00FD  120A  118A  24C8  120A  118A  	fcall	___flmul
  2487  0102  1283               	bcf	3,5	;RP0=0, select bank0
  2488  0103  1303               	bcf	3,6	;RP1=0, select bank0
  2489  0104  0823               	movf	?___flmul+3,w
  2490  0105  00BD               	movwf	___fltol@f1+3
  2491  0106  0822               	movf	?___flmul+2,w
  2492  0107  00BC               	movwf	___fltol@f1+2
  2493  0108  0821               	movf	?___flmul+1,w
  2494  0109  00BB               	movwf	___fltol@f1+1
  2495  010A  0820               	movf	?___flmul,w
  2496  010B  00BA               	movwf	___fltol@f1
  2497  010C  120A  158A  2323  120A  118A  	fcall	___fltol
  2498  0111  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0112  1303               	bcf	3,6	;RP1=0, select bank0
  2500  0113  083B               	movf	?___fltol+1,w
  2501  0114  00DB               	movwf	_cm+1
  2502  0115  083A               	movf	?___fltol,w
  2503  0116  00DA               	movwf	_cm
  2504                           
  2505                           ;Controls.c: 211:     if (RC0 && (cm > lastCm)) {
  2506  0117  1C07               	btfss	7,0	;volatile
  2507  0118  299E               	goto	l244
  2508  0119  0859               	movf	_lastCm+1,w
  2509  011A  3A80               	xorlw	128
  2510  011B  00D2               	movwf	??_Encoder
  2511  011C  085B               	movf	_cm+1,w
  2512  011D  3A80               	xorlw	128
  2513  011E  0252               	subwf	??_Encoder,w
  2514  011F  1D03               	skipz
  2515  0120  2923               	goto	u3705
  2516  0121  085A               	movf	_cm,w
  2517  0122  0258               	subwf	_lastCm,w
  2518  0123                     u3705:	
  2519  0123  1803               	skipnc
  2520  0124  299E               	goto	l244
  2521                           
  2522                           ;Controls.c: 212:         lastCm = cm + 0.9;
  2523  0125  1283               	bcf	3,5	;RP0=0, select bank0
  2524  0126  1303               	bcf	3,6	;RP1=0, select bank0
  2525  0127  085A               	movf	_cm,w
  2526  0128  00F0               	movwf	___xxtofl@val
  2527  0129  085B               	movf	_cm+1,w
  2528  012A  00F1               	movwf	___xxtofl@val+1
  2529  012B  3000               	movlw	0
  2530  012C  1BF1               	btfsc	___xxtofl@val+1,7
  2531  012D  30FF               	movlw	255
  2532  012E  00F2               	movwf	___xxtofl@val+2
  2533  012F  00F3               	movwf	___xxtofl@val+3
  2534  0130  3001               	movlw	1
  2535  0131  120A  158A  24B6  120A  118A  	fcall	___xxtofl
  2536  0136  0873               	movf	?___xxtofl+3,w
  2537  0137  1283               	bcf	3,5	;RP0=0, select bank0
  2538  0138  1303               	bcf	3,6	;RP1=0, select bank0
  2539  0139  00A7               	movwf	___fladd@a+3
  2540  013A  0872               	movf	?___xxtofl+2,w
  2541  013B  00A6               	movwf	___fladd@a+2
  2542  013C  0871               	movf	?___xxtofl+1,w
  2543  013D  00A5               	movwf	___fladd@a+1
  2544  013E  0870               	movf	?___xxtofl,w
  2545  013F  00A4               	movwf	___fladd@a
  2546  0140  303F               	movlw	63
  2547  0141  00A3               	movwf	___fladd@b+3
  2548  0142  3066               	movlw	102
  2549  0143  00A2               	movwf	___fladd@b+2
  2550  0144  3066               	movlw	102
  2551  0145  00A1               	movwf	___fladd@b+1
  2552  0146  3066               	movlw	102
  2553  0147  00A0               	movwf	___fladd@b
  2554  0148  120A  118A  2299  120A  118A  	fcall	___fladd
  2555  014D  1283               	bcf	3,5	;RP0=0, select bank0
  2556  014E  1303               	bcf	3,6	;RP1=0, select bank0
  2557  014F  0823               	movf	?___fladd+3,w
  2558  0150  00BD               	movwf	___fltol@f1+3
  2559  0151  0822               	movf	?___fladd+2,w
  2560  0152  00BC               	movwf	___fltol@f1+2
  2561  0153  0821               	movf	?___fladd+1,w
  2562  0154  00BB               	movwf	___fltol@f1+1
  2563  0155  0820               	movf	?___fladd,w
  2564  0156  00BA               	movwf	___fltol@f1
  2565  0157  120A  158A  2323  120A  118A  	fcall	___fltol
  2566  015C  1283               	bcf	3,5	;RP0=0, select bank0
  2567  015D  1303               	bcf	3,6	;RP1=0, select bank0
  2568  015E  083B               	movf	?___fltol+1,w
  2569  015F  00D9               	movwf	_lastCm+1
  2570  0160  083A               	movf	?___fltol,w
  2571  0161  00D8               	movwf	_lastCm
  2572                           
  2573                           ;Controls.c: 213:         Lcd_Clear();
  2574  0162  160A  118A  27F5  120A  118A  	fcall	_Lcd_Clear
  2575                           
  2576                           ;Controls.c: 214:         Lcd_Set_Cursor(1, 1);
  2577  0167  01F4               	clrf	Lcd_Set_Cursor@b
  2578  0168  0AF4               	incf	Lcd_Set_Cursor@b,f
  2579  0169  3001               	movlw	1
  2580  016A  120A  158A  2217  120A  118A  	fcall	_Lcd_Set_Cursor
  2581                           
  2582                           ;Controls.c: 215:         Lcd_Write_String("Dir: Adelante");
  2583  016F  302D               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2584  0170  00F5               	movwf	Lcd_Write_String@a
  2585  0171  3080               	movlw	128
  2586  0172  00F6               	movwf	Lcd_Write_String@a+1
  2587  0173  120A  158A  21DA  120A  118A  	fcall	_Lcd_Write_String
  2588                           
  2589                           ;Controls.c: 216:         Lcd_Set_Cursor(2, 1);
  2590  0178  01F4               	clrf	Lcd_Set_Cursor@b
  2591  0179  0AF4               	incf	Lcd_Set_Cursor@b,f
  2592  017A  3002               	movlw	2
  2593  017B  120A  158A  2217  120A  118A  	fcall	_Lcd_Set_Cursor
  2594                           
  2595                           ;Controls.c: 217:         Lcd_Write_Integer(cm);
  2596  0180  1283               	bcf	3,5	;RP0=0, select bank0
  2597  0181  1303               	bcf	3,6	;RP1=0, select bank0
  2598  0182  085B               	movf	_cm+1,w
  2599  0183  00C6               	movwf	Lcd_Write_Integer@a+1
  2600  0184  085A               	movf	_cm,w
  2601  0185  00C5               	movwf	Lcd_Write_Integer@a
  2602  0186  120A  158A  2089  120A  118A  	fcall	_Lcd_Write_Integer
  2603                           
  2604                           ;Controls.c: 218:         Lcd_Write_String(" Cm de: ");
  2605  018B  3051               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2606  018C  00F5               	movwf	Lcd_Write_String@a
  2607  018D  3080               	movlw	128
  2608  018E  00F6               	movwf	Lcd_Write_String@a+1
  2609  018F  120A  158A  21DA  120A  118A  	fcall	_Lcd_Write_String
  2610                           
  2611                           ;Controls.c: 219:         Lcd_Write_Integer(CmHorario);
  2612  0194  1283               	bcf	3,5	;RP0=0, select bank0
  2613  0195  1303               	bcf	3,6	;RP1=0, select bank0
  2614  0196  085F               	movf	_CmHorario+1,w
  2615  0197  00C6               	movwf	Lcd_Write_Integer@a+1
  2616  0198  085E               	movf	_CmHorario,w
  2617  0199  00C5               	movwf	Lcd_Write_Integer@a
  2618  019A  120A  158A  2089   	fcall	_Lcd_Write_Integer
  2619                           
  2620                           ;Controls.c: 220:     } else if (RC1 && (cm > lastCm)) {
  2621  019D  0008               	return
  2622  019E                     l244:	
  2623  019E  1283               	bcf	3,5	;RP0=0, select bank0
  2624  019F  1303               	bcf	3,6	;RP1=0, select bank0
  2625  01A0  1C87               	btfss	7,1	;volatile
  2626  01A1  0008               	return
  2627  01A2  0859               	movf	_lastCm+1,w
  2628  01A3  3A80               	xorlw	128
  2629  01A4  00D2               	movwf	??_Encoder
  2630  01A5  085B               	movf	_cm+1,w
  2631  01A6  3A80               	xorlw	128
  2632  01A7  0252               	subwf	??_Encoder,w
  2633  01A8  1D03               	skipz
  2634  01A9  29AC               	goto	u3725
  2635  01AA  085A               	movf	_cm,w
  2636  01AB  0258               	subwf	_lastCm,w
  2637  01AC                     u3725:	
  2638  01AC  1803               	skipnc
  2639  01AD  0008               	return
  2640                           
  2641                           ;Controls.c: 221:         lastCm = cm + 0.9;
  2642  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2643  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2644  01B0  085A               	movf	_cm,w
  2645  01B1  00F0               	movwf	___xxtofl@val
  2646  01B2  085B               	movf	_cm+1,w
  2647  01B3  00F1               	movwf	___xxtofl@val+1
  2648  01B4  3000               	movlw	0
  2649  01B5  1BF1               	btfsc	___xxtofl@val+1,7
  2650  01B6  30FF               	movlw	255
  2651  01B7  00F2               	movwf	___xxtofl@val+2
  2652  01B8  00F3               	movwf	___xxtofl@val+3
  2653  01B9  3001               	movlw	1
  2654  01BA  120A  158A  24B6  120A  118A  	fcall	___xxtofl
  2655  01BF  0873               	movf	?___xxtofl+3,w
  2656  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  2657  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  2658  01C2  00A7               	movwf	___fladd@a+3
  2659  01C3  0872               	movf	?___xxtofl+2,w
  2660  01C4  00A6               	movwf	___fladd@a+2
  2661  01C5  0871               	movf	?___xxtofl+1,w
  2662  01C6  00A5               	movwf	___fladd@a+1
  2663  01C7  0870               	movf	?___xxtofl,w
  2664  01C8  00A4               	movwf	___fladd@a
  2665  01C9  303F               	movlw	63
  2666  01CA  00A3               	movwf	___fladd@b+3
  2667  01CB  3066               	movlw	102
  2668  01CC  00A2               	movwf	___fladd@b+2
  2669  01CD  3066               	movlw	102
  2670  01CE  00A1               	movwf	___fladd@b+1
  2671  01CF  3066               	movlw	102
  2672  01D0  00A0               	movwf	___fladd@b
  2673  01D1  120A  118A  2299  120A  118A  	fcall	___fladd
  2674  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2675  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2676  01D8  0823               	movf	?___fladd+3,w
  2677  01D9  00BD               	movwf	___fltol@f1+3
  2678  01DA  0822               	movf	?___fladd+2,w
  2679  01DB  00BC               	movwf	___fltol@f1+2
  2680  01DC  0821               	movf	?___fladd+1,w
  2681  01DD  00BB               	movwf	___fltol@f1+1
  2682  01DE  0820               	movf	?___fladd,w
  2683  01DF  00BA               	movwf	___fltol@f1
  2684  01E0  120A  158A  2323  120A  118A  	fcall	___fltol
  2685  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  2686  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  2687  01E7  083B               	movf	?___fltol+1,w
  2688  01E8  00D9               	movwf	_lastCm+1
  2689  01E9  083A               	movf	?___fltol,w
  2690  01EA  00D8               	movwf	_lastCm
  2691                           
  2692                           ;Controls.c: 222:         cm = Grados * 0.97;
  2693  01EB  0860               	movf	_Grados,w
  2694  01EC  00F0               	movwf	___xxtofl@val
  2695  01ED  0861               	movf	_Grados+1,w
  2696  01EE  00F1               	movwf	___xxtofl@val+1
  2697  01EF  3000               	movlw	0
  2698  01F0  1BF1               	btfsc	___xxtofl@val+1,7
  2699  01F1  30FF               	movlw	255
  2700  01F2  00F2               	movwf	___xxtofl@val+2
  2701  01F3  00F3               	movwf	___xxtofl@val+3
  2702  01F4  3001               	movlw	1
  2703  01F5  120A  158A  24B6  120A  118A  	fcall	___xxtofl
  2704  01FA  0873               	movf	?___xxtofl+3,w
  2705  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2706  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2707  01FD  00A7               	movwf	___flmul@a+3
  2708  01FE  0872               	movf	?___xxtofl+2,w
  2709  01FF  00A6               	movwf	___flmul@a+2
  2710  0200  0871               	movf	?___xxtofl+1,w
  2711  0201  00A5               	movwf	___flmul@a+1
  2712  0202  0870               	movf	?___xxtofl,w
  2713  0203  00A4               	movwf	___flmul@a
  2714  0204  303F               	movlw	63
  2715  0205  00A3               	movwf	___flmul@b+3
  2716  0206  3078               	movlw	120
  2717  0207  00A2               	movwf	___flmul@b+2
  2718  0208  3051               	movlw	81
  2719  0209  00A1               	movwf	___flmul@b+1
  2720  020A  30EC               	movlw	236
  2721  020B  00A0               	movwf	___flmul@b
  2722  020C  120A  118A  24C8  120A  118A  	fcall	___flmul
  2723  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2724  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2725  0213  0823               	movf	?___flmul+3,w
  2726  0214  00BD               	movwf	___fltol@f1+3
  2727  0215  0822               	movf	?___flmul+2,w
  2728  0216  00BC               	movwf	___fltol@f1+2
  2729  0217  0821               	movf	?___flmul+1,w
  2730  0218  00BB               	movwf	___fltol@f1+1
  2731  0219  0820               	movf	?___flmul,w
  2732  021A  00BA               	movwf	___fltol@f1
  2733  021B  120A  158A  2323  120A  118A  	fcall	___fltol
  2734  0220  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0221  1303               	bcf	3,6	;RP1=0, select bank0
  2736  0222  083B               	movf	?___fltol+1,w
  2737  0223  00DB               	movwf	_cm+1
  2738  0224  083A               	movf	?___fltol,w
  2739  0225  00DA               	movwf	_cm
  2740                           
  2741                           ;Controls.c: 223:         Lcd_Clear();
  2742  0226  160A  118A  27F5  120A  118A  	fcall	_Lcd_Clear
  2743                           
  2744                           ;Controls.c: 224:         Lcd_Set_Cursor(1, 1);
  2745  022B  01F4               	clrf	Lcd_Set_Cursor@b
  2746  022C  0AF4               	incf	Lcd_Set_Cursor@b,f
  2747  022D  3001               	movlw	1
  2748  022E  120A  158A  2217  120A  118A  	fcall	_Lcd_Set_Cursor
  2749                           
  2750                           ;Controls.c: 225:         Lcd_Write_String("Dir: Atras");
  2751  0233  3046               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2752  0234  00F5               	movwf	Lcd_Write_String@a
  2753  0235  3080               	movlw	128
  2754  0236  00F6               	movwf	Lcd_Write_String@a+1
  2755  0237  120A  158A  21DA  120A  118A  	fcall	_Lcd_Write_String
  2756                           
  2757                           ;Controls.c: 226:         Lcd_Set_Cursor(2, 1);
  2758  023C  01F4               	clrf	Lcd_Set_Cursor@b
  2759  023D  0AF4               	incf	Lcd_Set_Cursor@b,f
  2760  023E  3002               	movlw	2
  2761  023F  120A  158A  2217  120A  118A  	fcall	_Lcd_Set_Cursor
  2762                           
  2763                           ;Controls.c: 227:         Lcd_Write_Integer(Grados * 0.97);
  2764  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2765  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2766  0246  0860               	movf	_Grados,w
  2767  0247  00F0               	movwf	___xxtofl@val
  2768  0248  0861               	movf	_Grados+1,w
  2769  0249  00F1               	movwf	___xxtofl@val+1
  2770  024A  3000               	movlw	0
  2771  024B  1BF1               	btfsc	___xxtofl@val+1,7
  2772  024C  30FF               	movlw	255
  2773  024D  00F2               	movwf	___xxtofl@val+2
  2774  024E  00F3               	movwf	___xxtofl@val+3
  2775  024F  3001               	movlw	1
  2776  0250  120A  158A  24B6  120A  118A  	fcall	___xxtofl
  2777  0255  0873               	movf	?___xxtofl+3,w
  2778  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0257  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0258  00A7               	movwf	___flmul@a+3
  2781  0259  0872               	movf	?___xxtofl+2,w
  2782  025A  00A6               	movwf	___flmul@a+2
  2783  025B  0871               	movf	?___xxtofl+1,w
  2784  025C  00A5               	movwf	___flmul@a+1
  2785  025D  0870               	movf	?___xxtofl,w
  2786  025E  00A4               	movwf	___flmul@a
  2787  025F  303F               	movlw	63
  2788  0260  00A3               	movwf	___flmul@b+3
  2789  0261  3078               	movlw	120
  2790  0262  00A2               	movwf	___flmul@b+2
  2791  0263  3051               	movlw	81
  2792  0264  00A1               	movwf	___flmul@b+1
  2793  0265  30EC               	movlw	236
  2794  0266  00A0               	movwf	___flmul@b
  2795  0267  120A  118A  24C8  120A  118A  	fcall	___flmul
  2796  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2797  026D  1303               	bcf	3,6	;RP1=0, select bank0
  2798  026E  0823               	movf	?___flmul+3,w
  2799  026F  00BD               	movwf	___fltol@f1+3
  2800  0270  0822               	movf	?___flmul+2,w
  2801  0271  00BC               	movwf	___fltol@f1+2
  2802  0272  0821               	movf	?___flmul+1,w
  2803  0273  00BB               	movwf	___fltol@f1+1
  2804  0274  0820               	movf	?___flmul,w
  2805  0275  00BA               	movwf	___fltol@f1
  2806  0276  120A  158A  2323  120A  118A  	fcall	___fltol
  2807  027B  1283               	bcf	3,5	;RP0=0, select bank0
  2808  027C  1303               	bcf	3,6	;RP1=0, select bank0
  2809  027D  083B               	movf	?___fltol+1,w
  2810  027E  00C6               	movwf	Lcd_Write_Integer@a+1
  2811  027F  083A               	movf	?___fltol,w
  2812  0280  00C5               	movwf	Lcd_Write_Integer@a
  2813  0281  120A  158A  2089  120A  118A  	fcall	_Lcd_Write_Integer
  2814                           
  2815                           ;Controls.c: 228:         Lcd_Write_String(" Cm de: ");
  2816  0286  3051               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2817  0287  00F5               	movwf	Lcd_Write_String@a
  2818  0288  3080               	movlw	128
  2819  0289  00F6               	movwf	Lcd_Write_String@a+1
  2820  028A  120A  158A  21DA  120A  118A  	fcall	_Lcd_Write_String
  2821                           
  2822                           ;Controls.c: 229:         Lcd_Write_Integer(CmAntiHorario);
  2823  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2824  0290  1303               	bcf	3,6	;RP1=0, select bank0
  2825  0291  085D               	movf	_CmAntiHorario+1,w
  2826  0292  00C6               	movwf	Lcd_Write_Integer@a+1
  2827  0293  085C               	movf	_CmAntiHorario,w
  2828  0294  00C5               	movwf	Lcd_Write_Integer@a
  2829  0295  120A  158A  2089   	fcall	_Lcd_Write_Integer
  2830  0298  0008               	return
  2831  0299                     __end_of_Encoder:	
  2832                           
  2833                           	psect	text9
  2834  0B23                     __ptext9:	
  2835 ;; *************** function ___fltol *****************
  2836 ;; Defined at:
  2837 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  f1              4   26[BANK0 ] int 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  exp1            1   36[BANK0 ] unsigned char 
  2842 ;;  sign1           1   35[BANK0 ] unsigned char 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  4   26[BANK0 ] long 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2852 ;;      Params:         0       4       0       0       0
  2853 ;;      Locals:         0       2       0       0       0
  2854 ;;      Temps:          0       5       0       0       0
  2855 ;;      Totals:         0      11       0       0       0
  2856 ;;Total ram usage:       11 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_Encoder
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function ___fltol
  2867  0B23                     ___fltol:	
  2868                           
  2869                           ;incstack = 0
  2870                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2871  0B23  1003               	clrc
  2872  0B24  1283               	bcf	3,5	;RP0=0, select bank0
  2873  0B25  1303               	bcf	3,6	;RP1=0, select bank0
  2874  0B26  0D3C               	rlf	___fltol@f1+2,w
  2875  0B27  0D3D               	rlf	___fltol@f1+3,w
  2876  0B28  00BE               	movwf	??___fltol
  2877  0B29  083E               	movf	??___fltol,w
  2878  0B2A  00C4               	movwf	___fltol@exp1
  2879  0B2B  0844               	movf	___fltol@exp1,w
  2880  0B2C  1D03               	btfss	3,2
  2881  0B2D  2B37               	goto	l2441
  2882  0B2E                     l2437:	
  2883  0B2E  3000               	movlw	0
  2884  0B2F  00BD               	movwf	?___fltol+3
  2885  0B30  3000               	movlw	0
  2886  0B31  00BC               	movwf	?___fltol+2
  2887  0B32  3000               	movlw	0
  2888  0B33  00BB               	movwf	?___fltol+1
  2889  0B34  3000               	movlw	0
  2890  0B35  00BA               	movwf	?___fltol
  2891  0B36  0008               	return
  2892  0B37                     l2441:	
  2893  0B37  083A               	movf	___fltol@f1,w
  2894  0B38  00BE               	movwf	??___fltol
  2895  0B39  083B               	movf	___fltol@f1+1,w
  2896  0B3A  00BF               	movwf	??___fltol+1
  2897  0B3B  083C               	movf	___fltol@f1+2,w
  2898  0B3C  00C0               	movwf	??___fltol+2
  2899  0B3D  083D               	movf	___fltol@f1+3,w
  2900  0B3E  00C1               	movwf	??___fltol+3
  2901  0B3F  301F               	movlw	31
  2902  0B40                     u3105:	
  2903  0B40  1003               	clrc
  2904  0B41  0CC1               	rrf	??___fltol+3,f
  2905  0B42  0CC0               	rrf	??___fltol+2,f
  2906  0B43  0CBF               	rrf	??___fltol+1,f
  2907  0B44  0CBE               	rrf	??___fltol,f
  2908  0B45  3EFF               	addlw	-1
  2909  0B46  1D03               	skipz
  2910  0B47  2B40               	goto	u3105
  2911  0B48  083E               	movf	??___fltol,w
  2912  0B49  00C2               	movwf	??___fltol+4
  2913  0B4A  0842               	movf	??___fltol+4,w
  2914  0B4B  00C3               	movwf	___fltol@sign1
  2915  0B4C  17BC               	bsf	___fltol@f1+2,7
  2916  0B4D  30FF               	movlw	255
  2917  0B4E  05BA               	andwf	___fltol@f1,f
  2918  0B4F  30FF               	movlw	255
  2919  0B50  05BB               	andwf	___fltol@f1+1,f
  2920  0B51  30FF               	movlw	255
  2921  0B52  05BC               	andwf	___fltol@f1+2,f
  2922  0B53  3000               	movlw	0
  2923  0B54  05BD               	andwf	___fltol@f1+3,f
  2924  0B55  3096               	movlw	150
  2925  0B56  02C4               	subwf	___fltol@exp1,f
  2926  0B57  1FC4               	btfss	___fltol@exp1,7
  2927  0B58  2B6E               	goto	l2459
  2928  0B59  0844               	movf	___fltol@exp1,w
  2929  0B5A  3A80               	xorlw	128
  2930  0B5B  3E97               	addlw	151
  2931  0B5C  1C03               	btfss	3,0
  2932  0B5D  2B2E               	goto	l2437
  2933  0B5E                     l2457:	
  2934  0B5E  3001               	movlw	1
  2935  0B5F                     u3135:	
  2936  0B5F  1003               	clrc
  2937  0B60  0CBD               	rrf	___fltol@f1+3,f
  2938  0B61  0CBC               	rrf	___fltol@f1+2,f
  2939  0B62  0CBB               	rrf	___fltol@f1+1,f
  2940  0B63  0CBA               	rrf	___fltol@f1,f
  2941  0B64  3EFF               	addlw	-1
  2942  0B65  1D03               	skipz
  2943  0B66  2B5F               	goto	u3135
  2944  0B67  3001               	movlw	1
  2945  0B68  00BE               	movwf	??___fltol
  2946  0B69  083E               	movf	??___fltol,w
  2947  0B6A  07C4               	addwf	___fltol@exp1,f
  2948  0B6B  1903               	btfsc	3,2
  2949  0B6C  2B81               	goto	l2467
  2950  0B6D  2B5E               	goto	l2457
  2951  0B6E                     l2459:	
  2952  0B6E  3020               	movlw	32
  2953  0B6F  0244               	subwf	___fltol@exp1,w
  2954  0B70  1803               	btfsc	3,0
  2955  0B71  2B2E               	goto	l2437
  2956  0B72                     l554:	
  2957  0B72  0844               	movf	___fltol@exp1,w
  2958  0B73  1903               	btfsc	3,2
  2959  0B74  2B81               	goto	l2467
  2960  0B75  3001               	movlw	1
  2961  0B76  00BE               	movwf	??___fltol
  2962  0B77                     u3165:	
  2963  0B77  1003               	clrc
  2964  0B78  0DBA               	rlf	___fltol@f1,f
  2965  0B79  0DBB               	rlf	___fltol@f1+1,f
  2966  0B7A  0DBC               	rlf	___fltol@f1+2,f
  2967  0B7B  0DBD               	rlf	___fltol@f1+3,f
  2968  0B7C  0BBE               	decfsz	??___fltol,f
  2969  0B7D  2B77               	goto	u3165
  2970  0B7E  3001               	movlw	1
  2971  0B7F  02C4               	subwf	___fltol@exp1,f
  2972  0B80  2B72               	goto	l554
  2973  0B81                     l2467:	
  2974  0B81  0843               	movf	___fltol@sign1,w
  2975  0B82  1903               	btfsc	3,2
  2976  0B83  0008               	return
  2977  0B84  09BA               	comf	___fltol@f1,f
  2978  0B85  09BB               	comf	___fltol@f1+1,f
  2979  0B86  09BC               	comf	___fltol@f1+2,f
  2980  0B87  09BD               	comf	___fltol@f1+3,f
  2981  0B88  0ABA               	incf	___fltol@f1,f
  2982  0B89  1903               	skipnz
  2983  0B8A  0ABB               	incf	___fltol@f1+1,f
  2984  0B8B  1903               	skipnz
  2985  0B8C  0ABC               	incf	___fltol@f1+2,f
  2986  0B8D  1903               	skipnz
  2987  0B8E  0ABD               	incf	___fltol@f1+3,f
  2988  0B8F  0008               	return
  2989  0B90                     __end_of___fltol:	
  2990                           
  2991                           	psect	text10
  2992  0299                     __ptext10:	
  2993 ;; *************** function ___fladd *****************
  2994 ;; Defined at:
  2995 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;  b               4    0[BANK0 ] long 
  2998 ;;  a               4    4[BANK0 ] long 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;  grs             1   19[BANK0 ] unsigned char 
  3001 ;;  bexp            1   18[BANK0 ] unsigned char 
  3002 ;;  aexp            1   17[BANK0 ] unsigned char 
  3003 ;;  signs           1   16[BANK0 ] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  4    0[BANK0 ] unsigned char 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0, btemp+1
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3013 ;;      Params:         0       8       0       0       0
  3014 ;;      Locals:         0       4       0       0       0
  3015 ;;      Temps:          0       8       0       0       0
  3016 ;;      Totals:         0      20       0       0       0
  3017 ;;Total ram usage:       20 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_Encoder
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           
  3027                           ;psect for function ___fladd
  3028  0299                     ___fladd:	
  3029                           
  3030                           ;incstack = 0
  3031                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3032  0299  1283               	bcf	3,5	;RP0=0, select bank0
  3033  029A  1303               	bcf	3,6	;RP1=0, select bank0
  3034  029B  0823               	movf	___fladd@b+3,w
  3035  029C  3980               	andlw	128
  3036  029D  00A8               	movwf	??___fladd
  3037  029E  0828               	movf	??___fladd,w
  3038  029F  00B0               	movwf	___fladd@signs
  3039  02A0  0823               	movf	___fladd@b+3,w
  3040  02A1  00A8               	movwf	??___fladd
  3041  02A2  0728               	addwf	??___fladd,w
  3042  02A3  00A9               	movwf	??___fladd+1
  3043  02A4  0829               	movf	??___fladd+1,w
  3044  02A5  00B2               	movwf	___fladd@bexp
  3045  02A6  1BA2               	btfsc	___fladd@b+2,7
  3046  02A7  1432               	bsf	___fladd@bexp,0
  3047  02A8  0832               	movf	___fladd@bexp,w
  3048  02A9  1903               	btfsc	3,2
  3049  02AA  2AB9               	goto	l2489
  3050  02AB  0A32               	incf	___fladd@bexp,w
  3051  02AC  1D03               	btfss	3,2
  3052  02AD  2AB6               	goto	l2485
  3053  02AE  3000               	movlw	0
  3054  02AF  00A3               	movwf	___fladd@b+3
  3055  02B0  3000               	movlw	0
  3056  02B1  00A2               	movwf	___fladd@b+2
  3057  02B2  3000               	movlw	0
  3058  02B3  00A1               	movwf	___fladd@b+1
  3059  02B4  3000               	movlw	0
  3060  02B5  00A0               	movwf	___fladd@b
  3061  02B6                     l2485:	
  3062  02B6  17A2               	bsf	___fladd@b+2,7
  3063  02B7  01A3               	clrf	___fladd@b+3
  3064  02B8  2AC1               	goto	l2491
  3065  02B9                     l2489:	
  3066  02B9  3000               	movlw	0
  3067  02BA  00A3               	movwf	___fladd@b+3
  3068  02BB  3000               	movlw	0
  3069  02BC  00A2               	movwf	___fladd@b+2
  3070  02BD  3000               	movlw	0
  3071  02BE  00A1               	movwf	___fladd@b+1
  3072  02BF  3000               	movlw	0
  3073  02C0  00A0               	movwf	___fladd@b
  3074  02C1                     l2491:	
  3075  02C1  0827               	movf	___fladd@a+3,w
  3076  02C2  3980               	andlw	128
  3077  02C3  00A8               	movwf	??___fladd
  3078  02C4  0828               	movf	??___fladd,w
  3079  02C5  00B1               	movwf	___fladd@aexp
  3080  02C6  0831               	movf	___fladd@aexp,w
  3081  02C7  0630               	xorwf	___fladd@signs,w
  3082  02C8  1D03               	btfss	3,2
  3083  02C9  1730               	bsf	___fladd@signs,6
  3084  02CA  0827               	movf	___fladd@a+3,w
  3085  02CB  00A8               	movwf	??___fladd
  3086  02CC  0728               	addwf	??___fladd,w
  3087  02CD  00A9               	movwf	??___fladd+1
  3088  02CE  0829               	movf	??___fladd+1,w
  3089  02CF  00B1               	movwf	___fladd@aexp
  3090  02D0  1BA6               	btfsc	___fladd@a+2,7
  3091  02D1  1431               	bsf	___fladd@aexp,0
  3092  02D2  0831               	movf	___fladd@aexp,w
  3093  02D3  1903               	btfsc	3,2
  3094  02D4  2AE3               	goto	l2513
  3095  02D5  0A31               	incf	___fladd@aexp,w
  3096  02D6  1D03               	btfss	3,2
  3097  02D7  2AE0               	goto	l2509
  3098  02D8  3000               	movlw	0
  3099  02D9  00A7               	movwf	___fladd@a+3
  3100  02DA  3000               	movlw	0
  3101  02DB  00A6               	movwf	___fladd@a+2
  3102  02DC  3000               	movlw	0
  3103  02DD  00A5               	movwf	___fladd@a+1
  3104  02DE  3000               	movlw	0
  3105  02DF  00A4               	movwf	___fladd@a
  3106  02E0                     l2509:	
  3107  02E0  17A6               	bsf	___fladd@a+2,7
  3108  02E1  01A7               	clrf	___fladd@a+3
  3109  02E2  2AEB               	goto	l654
  3110  02E3                     l2513:	
  3111  02E3  3000               	movlw	0
  3112  02E4  00A7               	movwf	___fladd@a+3
  3113  02E5  3000               	movlw	0
  3114  02E6  00A6               	movwf	___fladd@a+2
  3115  02E7  3000               	movlw	0
  3116  02E8  00A5               	movwf	___fladd@a+1
  3117  02E9  3000               	movlw	0
  3118  02EA  00A4               	movwf	___fladd@a
  3119  02EB                     l654:	
  3120  02EB  0832               	movf	___fladd@bexp,w
  3121  02EC  0231               	subwf	___fladd@aexp,w
  3122  02ED  1803               	skipnc
  3123  02EE  2B31               	goto	l2549
  3124  02EF  1F30               	btfss	___fladd@signs,6
  3125  02F0  2AF5               	goto	l2519
  3126  02F1  3080               	movlw	128
  3127  02F2  00A8               	movwf	??___fladd
  3128  02F3  0828               	movf	??___fladd,w
  3129  02F4  06B0               	xorwf	___fladd@signs,f
  3130  02F5                     l2519:	
  3131  02F5  0832               	movf	___fladd@bexp,w
  3132  02F6  00A8               	movwf	??___fladd
  3133  02F7  0828               	movf	??___fladd,w
  3134  02F8  00B3               	movwf	___fladd@grs
  3135  02F9  0831               	movf	___fladd@aexp,w
  3136  02FA  00A8               	movwf	??___fladd
  3137  02FB  0828               	movf	??___fladd,w
  3138  02FC  00B2               	movwf	___fladd@bexp
  3139  02FD  0833               	movf	___fladd@grs,w
  3140  02FE  00A8               	movwf	??___fladd
  3141  02FF  0828               	movf	??___fladd,w
  3142  0300  00B1               	movwf	___fladd@aexp
  3143  0301  0820               	movf	___fladd@b,w
  3144  0302  00A8               	movwf	??___fladd
  3145  0303  0828               	movf	??___fladd,w
  3146  0304  00B3               	movwf	___fladd@grs
  3147  0305  0824               	movf	___fladd@a,w
  3148  0306  00A8               	movwf	??___fladd
  3149  0307  0828               	movf	??___fladd,w
  3150  0308  00A0               	movwf	___fladd@b
  3151  0309  0833               	movf	___fladd@grs,w
  3152  030A  00A8               	movwf	??___fladd
  3153  030B  0828               	movf	??___fladd,w
  3154  030C  00A4               	movwf	___fladd@a
  3155  030D  0821               	movf	___fladd@b+1,w
  3156  030E  00A8               	movwf	??___fladd
  3157  030F  0828               	movf	??___fladd,w
  3158  0310  00B3               	movwf	___fladd@grs
  3159  0311  0825               	movf	___fladd@a+1,w
  3160  0312  00A8               	movwf	??___fladd
  3161  0313  0828               	movf	??___fladd,w
  3162  0314  00A1               	movwf	___fladd@b+1
  3163  0315  0833               	movf	___fladd@grs,w
  3164  0316  00A8               	movwf	??___fladd
  3165  0317  0828               	movf	??___fladd,w
  3166  0318  00A5               	movwf	___fladd@a+1
  3167  0319  0822               	movf	___fladd@b+2,w
  3168  031A  00A8               	movwf	??___fladd
  3169  031B  0828               	movf	??___fladd,w
  3170  031C  00B3               	movwf	___fladd@grs
  3171  031D  0826               	movf	___fladd@a+2,w
  3172  031E  00A8               	movwf	??___fladd
  3173  031F  0828               	movf	??___fladd,w
  3174  0320  00A2               	movwf	___fladd@b+2
  3175  0321  0833               	movf	___fladd@grs,w
  3176  0322  00A8               	movwf	??___fladd
  3177  0323  0828               	movf	??___fladd,w
  3178  0324  00A6               	movwf	___fladd@a+2
  3179  0325  0823               	movf	___fladd@b+3,w
  3180  0326  00A8               	movwf	??___fladd
  3181  0327  0828               	movf	??___fladd,w
  3182  0328  00B3               	movwf	___fladd@grs
  3183  0329  0827               	movf	___fladd@a+3,w
  3184  032A  00A8               	movwf	??___fladd
  3185  032B  0828               	movf	??___fladd,w
  3186  032C  00A3               	movwf	___fladd@b+3
  3187  032D  0833               	movf	___fladd@grs,w
  3188  032E  00A8               	movwf	??___fladd
  3189  032F  0828               	movf	??___fladd,w
  3190  0330  00A7               	movwf	___fladd@a+3
  3191  0331                     l2549:	
  3192  0331  01B3               	clrf	___fladd@grs
  3193  0332  0831               	movf	___fladd@aexp,w
  3194  0333  00A8               	movwf	??___fladd
  3195  0334  01A9               	clrf	??___fladd+1
  3196  0335  0829               	movf	??___fladd+1,w
  3197  0336  00AB               	movwf	??___fladd+3
  3198  0337  0832               	movf	___fladd@bexp,w
  3199  0338  0228               	subwf	??___fladd,w
  3200  0339  00AA               	movwf	??___fladd+2
  3201  033A  1C03               	skipc
  3202  033B  03AB               	decf	??___fladd+3,f
  3203  033C  082B               	movf	??___fladd+3,w
  3204  033D  3A80               	xorlw	128
  3205  033E  00FF               	movwf	127
  3206  033F  3080               	movlw	128
  3207  0340  027F               	subwf	127,w
  3208  0341  1D03               	skipz
  3209  0342  2B45               	goto	u3285
  3210  0343  301A               	movlw	26
  3211  0344  022A               	subwf	??___fladd+2,w
  3212  0345                     u3285:	
  3213  0345  1C03               	skipc
  3214  0346  2B7E               	goto	l2567
  3215  0347  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0348  1303               	bcf	3,6	;RP1=0, select bank0
  3217  0349  0823               	movf	___fladd@b+3,w
  3218  034A  0422               	iorwf	___fladd@b+2,w
  3219  034B  0421               	iorwf	___fladd@b+1,w
  3220  034C  0420               	iorwf	___fladd@b,w
  3221  034D  1903               	btfsc	3,2
  3222  034E  2B51               	goto	u3290
  3223  034F  3001               	movlw	1
  3224  0350  2B52               	goto	u3300
  3225  0351                     u3290:	
  3226  0351  3000               	movlw	0
  3227  0352                     u3300:	
  3228  0352  00A8               	movwf	??___fladd
  3229  0353  0828               	movf	??___fladd,w
  3230  0354  00B3               	movwf	___fladd@grs
  3231  0355  3000               	movlw	0
  3232  0356  00A3               	movwf	___fladd@b+3
  3233  0357  3000               	movlw	0
  3234  0358  00A2               	movwf	___fladd@b+2
  3235  0359  3000               	movlw	0
  3236  035A  00A1               	movwf	___fladd@b+1
  3237  035B  3000               	movlw	0
  3238  035C  00A0               	movwf	___fladd@b
  3239  035D  0831               	movf	___fladd@aexp,w
  3240  035E  00A8               	movwf	??___fladd
  3241  035F  0828               	movf	??___fladd,w
  3242  0360  00B2               	movwf	___fladd@bexp
  3243  0361  2B84               	goto	l658
  3244  0362                     l660:	
  3245  0362  1C33               	btfss	___fladd@grs,0
  3246  0363  2B6D               	goto	l2557
  3247  0364  0833               	movf	___fladd@grs,w
  3248  0365  00A8               	movwf	??___fladd
  3249  0366  1003               	clrc
  3250  0367  0C28               	rrf	??___fladd,w
  3251  0368  3801               	iorlw	1
  3252  0369  00A9               	movwf	??___fladd+1
  3253  036A  0829               	movf	??___fladd+1,w
  3254  036B  00B3               	movwf	___fladd@grs
  3255  036C  2B6F               	goto	l2559
  3256  036D                     l2557:	
  3257  036D  1003               	clrc
  3258  036E  0CB3               	rrf	___fladd@grs,f
  3259  036F                     l2559:	
  3260  036F  1820               	btfsc	___fladd@b,0
  3261  0370  17B3               	bsf	___fladd@grs,7
  3262  0371  3001               	movlw	1
  3263  0372  00A8               	movwf	??___fladd
  3264  0373                     u3335:	
  3265  0373  0D23               	rlf	___fladd@b+3,w
  3266  0374  0CA3               	rrf	___fladd@b+3,f
  3267  0375  0CA2               	rrf	___fladd@b+2,f
  3268  0376  0CA1               	rrf	___fladd@b+1,f
  3269  0377  0CA0               	rrf	___fladd@b,f
  3270  0378  0BA8               	decfsz	??___fladd& (0+127),f
  3271  0379  2B73               	goto	u3335
  3272  037A  3001               	movlw	1
  3273  037B  00A8               	movwf	??___fladd
  3274  037C  0828               	movf	??___fladd,w
  3275  037D  07B2               	addwf	___fladd@bexp,f
  3276  037E                     l2567:	
  3277  037E  1283               	bcf	3,5	;RP0=0, select bank0
  3278  037F  1303               	bcf	3,6	;RP1=0, select bank0
  3279  0380  0831               	movf	___fladd@aexp,w
  3280  0381  0232               	subwf	___fladd@bexp,w
  3281  0382  1C03               	skipc
  3282  0383  2B62               	goto	l660
  3283  0384                     l658:	
  3284  0384  1B30               	btfsc	___fladd@signs,6
  3285  0385  2BC5               	goto	l2593
  3286  0386  0832               	movf	___fladd@bexp,w
  3287  0387  1D03               	btfss	3,2
  3288  0388  2B92               	goto	l2575
  3289  0389  3000               	movlw	0
  3290  038A  00A3               	movwf	?___fladd+3
  3291  038B  3000               	movlw	0
  3292  038C  00A2               	movwf	?___fladd+2
  3293  038D  3000               	movlw	0
  3294  038E  00A1               	movwf	?___fladd+1
  3295  038F  3000               	movlw	0
  3296  0390  00A0               	movwf	?___fladd
  3297  0391  0008               	return
  3298  0392                     l2575:	
  3299  0392  0824               	movf	___fladd@a,w
  3300  0393  07A0               	addwf	___fladd@b,f
  3301  0394  0825               	movf	___fladd@a+1,w
  3302  0395  1103               	clrz
  3303  0396  1803               	skipnc
  3304  0397  3E01               	addlw	1
  3305  0398  1D03               	btfss	3,2
  3306  0399  07A1               	addwf	___fladd@b+1,f
  3307  039A  0826               	movf	___fladd@a+2,w
  3308  039B  1103               	clrz
  3309  039C  1803               	skipnc
  3310  039D  3E01               	addlw	1
  3311  039E  1D03               	btfss	3,2
  3312  039F  07A2               	addwf	___fladd@b+2,f
  3313  03A0  0827               	movf	___fladd@a+3,w
  3314  03A1  1103               	clrz
  3315  03A2  1803               	skipnc
  3316  03A3  3E01               	addlw	1
  3317  03A4  1D03               	btfss	3,2
  3318  03A5  07A3               	addwf	___fladd@b+3,f
  3319  03A6  1C23               	btfss	___fladd@b+3,0
  3320  03A7  2C67               	goto	l2627
  3321  03A8  1C33               	btfss	___fladd@grs,0
  3322  03A9  2BB3               	goto	l2583
  3323  03AA  0833               	movf	___fladd@grs,w
  3324  03AB  00A8               	movwf	??___fladd
  3325  03AC  1003               	clrc
  3326  03AD  0C28               	rrf	??___fladd,w
  3327  03AE  3801               	iorlw	1
  3328  03AF  00A9               	movwf	??___fladd+1
  3329  03B0  0829               	movf	??___fladd+1,w
  3330  03B1  00B3               	movwf	___fladd@grs
  3331  03B2  2BB5               	goto	l2585
  3332  03B3                     l2583:	
  3333  03B3  1003               	clrc
  3334  03B4  0CB3               	rrf	___fladd@grs,f
  3335  03B5                     l2585:	
  3336  03B5  1820               	btfsc	___fladd@b,0
  3337  03B6  17B3               	bsf	___fladd@grs,7
  3338  03B7  3001               	movlw	1
  3339  03B8  00A8               	movwf	??___fladd
  3340  03B9                     u3415:	
  3341  03B9  0D23               	rlf	___fladd@b+3,w
  3342  03BA  0CA3               	rrf	___fladd@b+3,f
  3343  03BB  0CA2               	rrf	___fladd@b+2,f
  3344  03BC  0CA1               	rrf	___fladd@b+1,f
  3345  03BD  0CA0               	rrf	___fladd@b,f
  3346  03BE  0BA8               	decfsz	??___fladd& (0+127),f
  3347  03BF  2BB9               	goto	u3415
  3348  03C0  3001               	movlw	1
  3349  03C1  00A8               	movwf	??___fladd
  3350  03C2  0828               	movf	??___fladd,w
  3351  03C3  07B2               	addwf	___fladd@bexp,f
  3352  03C4  2C67               	goto	l2627
  3353  03C5                     l2593:	
  3354  03C5  0823               	movf	___fladd@b+3,w
  3355  03C6  3A80               	xorlw	128
  3356  03C7  00FF               	movwf	127
  3357  03C8  0827               	movf	___fladd@a+3,w
  3358  03C9  3A80               	xorlw	128
  3359  03CA  027F               	subwf	127,w
  3360  03CB  1D03               	skipz
  3361  03CC  2BD7               	goto	u3423
  3362  03CD  0826               	movf	___fladd@a+2,w
  3363  03CE  0222               	subwf	___fladd@b+2,w
  3364  03CF  1D03               	skipz
  3365  03D0  2BD7               	goto	u3423
  3366  03D1  0825               	movf	___fladd@a+1,w
  3367  03D2  0221               	subwf	___fladd@b+1,w
  3368  03D3  1D03               	skipz
  3369  03D4  2BD7               	goto	u3423
  3370  03D5  0824               	movf	___fladd@a,w
  3371  03D6  0220               	subwf	___fladd@b,w
  3372  03D7                     u3423:	
  3373  03D7  1803               	skipnc
  3374  03D8  2C2F               	goto	l2603
  3375  03D9  30FF               	movlw	255
  3376  03DA  00A8               	movwf	??___fladd
  3377  03DB  30FF               	movlw	255
  3378  03DC  00A9               	movwf	??___fladd+1
  3379  03DD  30FF               	movlw	255
  3380  03DE  00AA               	movwf	??___fladd+2
  3381  03DF  30FF               	movlw	255
  3382  03E0  00AB               	movwf	??___fladd+3
  3383  03E1  0824               	movf	___fladd@a,w
  3384  03E2  00AC               	movwf	??___fladd+4
  3385  03E3  0825               	movf	___fladd@a+1,w
  3386  03E4  00AD               	movwf	??___fladd+5
  3387  03E5  0826               	movf	___fladd@a+2,w
  3388  03E6  00AE               	movwf	??___fladd+6
  3389  03E7  0827               	movf	___fladd@a+3,w
  3390  03E8  00AF               	movwf	??___fladd+7
  3391  03E9  0820               	movf	___fladd@b,w
  3392  03EA  02AC               	subwf	??___fladd+4,f
  3393  03EB  0821               	movf	___fladd@b+1,w
  3394  03EC  1C03               	skipc
  3395  03ED  0F21               	incfsz	___fladd@b+1,w
  3396  03EE  2BF0               	goto	u3431
  3397  03EF  2BF1               	goto	u3432
  3398  03F0                     u3431:	
  3399  03F0  02AD               	subwf	??___fladd+5,f
  3400  03F1                     u3432:	
  3401  03F1  0822               	movf	___fladd@b+2,w
  3402  03F2  1C03               	skipc
  3403  03F3  0F22               	incfsz	___fladd@b+2,w
  3404  03F4  2BF6               	goto	u3433
  3405  03F5  2BF7               	goto	u3434
  3406  03F6                     u3433:	
  3407  03F6  02AE               	subwf	??___fladd+6,f
  3408  03F7                     u3434:	
  3409  03F7  0823               	movf	___fladd@b+3,w
  3410  03F8  1C03               	skipc
  3411  03F9  0F23               	incfsz	___fladd@b+3,w
  3412  03FA  2BFC               	goto	u3435
  3413  03FB  2BFD               	goto	u3436
  3414  03FC                     u3435:	
  3415  03FC  02AF               	subwf	??___fladd+7,f
  3416  03FD                     u3436:	
  3417  03FD  082C               	movf	??___fladd+4,w
  3418  03FE  07A8               	addwf	??___fladd,f
  3419  03FF  082D               	movf	??___fladd+5,w
  3420  0400  1803               	skipnc
  3421  0401  0F2D               	incfsz	??___fladd+5,w
  3422  0402  2C04               	goto	u3440
  3423  0403  2C05               	goto	u3441
  3424  0404                     u3440:	
  3425  0404  07A9               	addwf	??___fladd+1,f
  3426  0405                     u3441:	
  3427  0405  082E               	movf	??___fladd+6,w
  3428  0406  1803               	skipnc
  3429  0407  0F2E               	incfsz	??___fladd+6,w
  3430  0408  2C0A               	goto	u3442
  3431  0409  2C0B               	goto	u3443
  3432  040A                     u3442:	
  3433  040A  07AA               	addwf	??___fladd+2,f
  3434  040B                     u3443:	
  3435  040B  082F               	movf	??___fladd+7,w
  3436  040C  1803               	skipnc
  3437  040D  0A2F               	incf	??___fladd+7,w
  3438  040E  07AB               	addwf	??___fladd+3,f
  3439  040F  082B               	movf	??___fladd+3,w
  3440  0410  00A3               	movwf	___fladd@b+3
  3441  0411  082A               	movf	??___fladd+2,w
  3442  0412  00A2               	movwf	___fladd@b+2
  3443  0413  0829               	movf	??___fladd+1,w
  3444  0414  00A1               	movwf	___fladd@b+1
  3445  0415  0828               	movf	??___fladd,w
  3446  0416  00A0               	movwf	___fladd@b
  3447  0417  3080               	movlw	128
  3448  0418  00A8               	movwf	??___fladd
  3449  0419  0828               	movf	??___fladd,w
  3450  041A  06B0               	xorwf	___fladd@signs,f
  3451  041B  09B3               	comf	___fladd@grs,f
  3452  041C  0AB3               	incf	___fladd@grs,f
  3453  041D  0833               	movf	___fladd@grs,w
  3454  041E  1D03               	btfss	3,2
  3455  041F  2C3D               	goto	l675
  3456  0420  3001               	movlw	1
  3457  0421  07A0               	addwf	___fladd@b,f
  3458  0422  3000               	movlw	0
  3459  0423  1803               	skipnc
  3460  0424  3001               	movlw	1
  3461  0425  07A1               	addwf	___fladd@b+1,f
  3462  0426  3000               	movlw	0
  3463  0427  1803               	skipnc
  3464  0428  3001               	movlw	1
  3465  0429  07A2               	addwf	___fladd@b+2,f
  3466  042A  3000               	movlw	0
  3467  042B  1803               	skipnc
  3468  042C  3001               	movlw	1
  3469  042D  07A3               	addwf	___fladd@b+3,f
  3470  042E  2C3D               	goto	l675
  3471  042F                     l2603:	
  3472  042F  0824               	movf	___fladd@a,w
  3473  0430  02A0               	subwf	___fladd@b,f
  3474  0431  0825               	movf	___fladd@a+1,w
  3475  0432  1C03               	skipc
  3476  0433  0F25               	incfsz	___fladd@a+1,w
  3477  0434  02A1               	subwf	___fladd@b+1,f
  3478  0435  0826               	movf	___fladd@a+2,w
  3479  0436  1C03               	skipc
  3480  0437  0F26               	incfsz	___fladd@a+2,w
  3481  0438  02A2               	subwf	___fladd@b+2,f
  3482  0439  0827               	movf	___fladd@a+3,w
  3483  043A  1C03               	skipc
  3484  043B  0F27               	incfsz	___fladd@a+3,w
  3485  043C  02A3               	subwf	___fladd@b+3,f
  3486  043D                     l675:	
  3487  043D  0823               	movf	___fladd@b+3,w
  3488  043E  0422               	iorwf	___fladd@b+2,w
  3489  043F  0421               	iorwf	___fladd@b+1,w
  3490  0440  0420               	iorwf	___fladd@b,w
  3491  0441  1D03               	skipz
  3492  0442  2C65               	goto	l2625
  3493  0443  0833               	movf	___fladd@grs,w
  3494  0444  1D03               	btfss	3,2
  3495  0445  2C65               	goto	l2625
  3496  0446  3000               	movlw	0
  3497  0447  00A3               	movwf	?___fladd+3
  3498  0448  3000               	movlw	0
  3499  0449  00A2               	movwf	?___fladd+2
  3500  044A  3000               	movlw	0
  3501  044B  00A1               	movwf	?___fladd+1
  3502  044C  3000               	movlw	0
  3503  044D  00A0               	movwf	?___fladd
  3504  044E  0008               	return
  3505  044F                     l2611:	
  3506  044F  3001               	movlw	1
  3507  0450  00A8               	movwf	??___fladd
  3508  0451                     u3485:	
  3509  0451  1003               	clrc
  3510  0452  0DA0               	rlf	___fladd@b,f
  3511  0453  0DA1               	rlf	___fladd@b+1,f
  3512  0454  0DA2               	rlf	___fladd@b+2,f
  3513  0455  0DA3               	rlf	___fladd@b+3,f
  3514  0456  0BA8               	decfsz	??___fladd,f
  3515  0457  2C51               	goto	u3485
  3516  0458  1BB3               	btfsc	___fladd@grs,7
  3517  0459  1420               	bsf	___fladd@b,0
  3518  045A  1C33               	btfss	___fladd@grs,0
  3519  045B  2C5E               	goto	l2619
  3520  045C  1403               	setc
  3521  045D  2C5F               	goto	L4
  3522  045E                     l2619:	
  3523  045E  1003               	clrc
  3524  045F                     L4:	
  3525  045F  0DB3               	rlf	___fladd@grs,f
  3526  0460  0832               	movf	___fladd@bexp,w
  3527  0461  1903               	btfsc	3,2
  3528  0462  2C65               	goto	l2625
  3529  0463  3001               	movlw	1
  3530  0464  02B2               	subwf	___fladd@bexp,f
  3531  0465                     l2625:	
  3532  0465  1FA2               	btfss	___fladd@b+2,7
  3533  0466  2C4F               	goto	l2611
  3534  0467                     l2627:	
  3535  0467  01B1               	clrf	___fladd@aexp
  3536  0468  1FB3               	btfss	___fladd@grs,7
  3537  0469  2C72               	goto	l2637
  3538  046A  0833               	movf	___fladd@grs,w
  3539  046B  397F               	andlw	127
  3540  046C  1903               	btfsc	3,2
  3541  046D  1820               	btfsc	___fladd@b,0
  3542  046E  2C70               	goto	l2633
  3543  046F  2C72               	goto	l2637
  3544  0470                     l2633:	
  3545  0470  01B1               	clrf	___fladd@aexp
  3546  0471  0AB1               	incf	___fladd@aexp,f
  3547  0472                     l2637:	
  3548  0472  0831               	movf	___fladd@aexp,w
  3549  0473  1903               	btfsc	3,2
  3550  0474  2CA5               	goto	l688
  3551  0475  3001               	movlw	1
  3552  0476  07A0               	addwf	___fladd@b,f
  3553  0477  3000               	movlw	0
  3554  0478  1803               	skipnc
  3555  0479  3001               	movlw	1
  3556  047A  07A1               	addwf	___fladd@b+1,f
  3557  047B  3000               	movlw	0
  3558  047C  1803               	skipnc
  3559  047D  3001               	movlw	1
  3560  047E  07A2               	addwf	___fladd@b+2,f
  3561  047F  3000               	movlw	0
  3562  0480  1803               	skipnc
  3563  0481  3001               	movlw	1
  3564  0482  07A3               	addwf	___fladd@b+3,f
  3565  0483  1C23               	btfss	___fladd@b+3,0
  3566  0484  2CA5               	goto	l688
  3567  0485  0820               	movf	___fladd@b,w
  3568  0486  00A8               	movwf	??___fladd
  3569  0487  0821               	movf	___fladd@b+1,w
  3570  0488  00A9               	movwf	??___fladd+1
  3571  0489  0822               	movf	___fladd@b+2,w
  3572  048A  00AA               	movwf	??___fladd+2
  3573  048B  0823               	movf	___fladd@b+3,w
  3574  048C  00AB               	movwf	??___fladd+3
  3575  048D  3001               	movlw	1
  3576  048E  00AC               	movwf	??___fladd+4
  3577  048F                     u3585:	
  3578  048F  0D2B               	rlf	??___fladd+3,w
  3579  0490  0CAB               	rrf	??___fladd+3,f
  3580  0491  0CAA               	rrf	??___fladd+2,f
  3581  0492  0CA9               	rrf	??___fladd+1,f
  3582  0493  0CA8               	rrf	??___fladd,f
  3583  0494  0BAC               	decfsz	??___fladd+4,f
  3584  0495  2C8F               	goto	u3585
  3585  0496  082B               	movf	??___fladd+3,w
  3586  0497  00A3               	movwf	___fladd@b+3
  3587  0498  082A               	movf	??___fladd+2,w
  3588  0499  00A2               	movwf	___fladd@b+2
  3589  049A  0829               	movf	??___fladd+1,w
  3590  049B  00A1               	movwf	___fladd@b+1
  3591  049C  0828               	movf	??___fladd,w
  3592  049D  00A0               	movwf	___fladd@b
  3593  049E  0A32               	incf	___fladd@bexp,w
  3594  049F  1903               	btfsc	3,2
  3595  04A0  2CA5               	goto	l688
  3596  04A1  3001               	movlw	1
  3597  04A2  00A8               	movwf	??___fladd
  3598  04A3  0828               	movf	??___fladd,w
  3599  04A4  07B2               	addwf	___fladd@bexp,f
  3600  04A5                     l688:	
  3601  04A5  0A32               	incf	___fladd@bexp,w
  3602  04A6  1D03               	btfss	3,2
  3603  04A7  0832               	movf	___fladd@bexp,w
  3604  04A8  1D03               	btfss	3,2
  3605  04A9  2CB5               	goto	l2655
  3606  04AA  3000               	movlw	0
  3607  04AB  00A3               	movwf	___fladd@b+3
  3608  04AC  3000               	movlw	0
  3609  04AD  00A2               	movwf	___fladd@b+2
  3610  04AE  3000               	movlw	0
  3611  04AF  00A1               	movwf	___fladd@b+1
  3612  04B0  3000               	movlw	0
  3613  04B1  00A0               	movwf	___fladd@b
  3614  04B2  0832               	movf	___fladd@bexp,w
  3615  04B3  1903               	btfsc	3,2
  3616  04B4  01B0               	clrf	___fladd@signs
  3617  04B5                     l2655:	
  3618  04B5  1C32               	btfss	___fladd@bexp,0
  3619  04B6  2CB9               	goto	l2659
  3620  04B7  17A2               	bsf	___fladd@b+2,7
  3621  04B8  2CBD               	goto	l696
  3622  04B9                     l2659:	
  3623  04B9  307F               	movlw	127
  3624  04BA  00A8               	movwf	??___fladd
  3625  04BB  0828               	movf	??___fladd,w
  3626  04BC  05A2               	andwf	___fladd@b+2,f
  3627  04BD                     l696:	
  3628  04BD  0832               	movf	___fladd@bexp,w
  3629  04BE  00A8               	movwf	??___fladd
  3630  04BF  1003               	clrc
  3631  04C0  0C28               	rrf	??___fladd,w
  3632  04C1  00A9               	movwf	??___fladd+1
  3633  04C2  0829               	movf	??___fladd+1,w
  3634  04C3  00A3               	movwf	___fladd@b+3
  3635  04C4  1FB0               	btfss	___fladd@signs,7
  3636  04C5  0008               	return
  3637  04C6  17A3               	bsf	___fladd@b+3,7
  3638  04C7  0008               	return
  3639  04C8                     __end_of___fladd:	
  3640                           
  3641                           	psect	text11
  3642  0E31                     __ptext11:	
  3643 ;; *************** function _VerificarInversionGiro *****************
  3644 ;; Defined at:
  3645 ;;		line 183 in file "Controls.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;		None
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  2  237[None  ] int 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3659 ;;      Params:         0       0       0       0       0
  3660 ;;      Locals:         0       0       0       0       0
  3661 ;;      Temps:          0       3       0       0       0
  3662 ;;      Totals:         0       3       0       0       0
  3663 ;;Total ram usage:        3 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    2
  3666 ;; This function calls:
  3667 ;;		___flge
  3668 ;;		___flmul
  3669 ;;		___xxtofl
  3670 ;; This function is called by:
  3671 ;;		_Encoder
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           
  3676                           ;psect for function _VerificarInversionGiro
  3677  0E31                     _VerificarInversionGiro:	
  3678                           
  3679                           ;Controls.c: 184:     if (RC0 && (Grados * 0.97 >= CmHorario)) {
  3680                           
  3681                           ;incstack = 0
  3682                           ; Regs used in _VerificarInversionGiro: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3683  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  3684  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  3685  0E33  1C07               	btfss	7,0	;volatile
  3686  0E34  2EA0               	goto	l238
  3687  0E35  303F               	movlw	63
  3688  0E36  00A3               	movwf	___flmul@b+3
  3689  0E37  3078               	movlw	120
  3690  0E38  00A2               	movwf	___flmul@b+2
  3691  0E39  3051               	movlw	81
  3692  0E3A  00A1               	movwf	___flmul@b+1
  3693  0E3B  30EC               	movlw	236
  3694  0E3C  00A0               	movwf	___flmul@b
  3695  0E3D  0860               	movf	_Grados,w
  3696  0E3E  00F0               	movwf	___xxtofl@val
  3697  0E3F  0861               	movf	_Grados+1,w
  3698  0E40  00F1               	movwf	___xxtofl@val+1
  3699  0E41  3000               	movlw	0
  3700  0E42  1BF1               	btfsc	___xxtofl@val+1,7
  3701  0E43  30FF               	movlw	255
  3702  0E44  00F2               	movwf	___xxtofl@val+2
  3703  0E45  00F3               	movwf	___xxtofl@val+3
  3704  0E46  3001               	movlw	1
  3705  0E47  120A  158A  24B6  120A  158A  	fcall	___xxtofl
  3706  0E4C  0873               	movf	?___xxtofl+3,w
  3707  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  3708  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  3709  0E4F  00A7               	movwf	___flmul@a+3
  3710  0E50  0872               	movf	?___xxtofl+2,w
  3711  0E51  00A6               	movwf	___flmul@a+2
  3712  0E52  0871               	movf	?___xxtofl+1,w
  3713  0E53  00A5               	movwf	___flmul@a+1
  3714  0E54  0870               	movf	?___xxtofl,w
  3715  0E55  00A4               	movwf	___flmul@a
  3716  0E56  120A  118A  24C8  120A  158A  	fcall	___flmul
  3717  0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  3718  0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  3719  0E5D  0823               	movf	?___flmul+3,w
  3720  0E5E  00BD               	movwf	___flge@ff1+3
  3721  0E5F  0822               	movf	?___flmul+2,w
  3722  0E60  00BC               	movwf	___flge@ff1+2
  3723  0E61  0821               	movf	?___flmul+1,w
  3724  0E62  00BB               	movwf	___flge@ff1+1
  3725  0E63  0820               	movf	?___flmul,w
  3726  0E64  00BA               	movwf	___flge@ff1
  3727  0E65  085E               	movf	_CmHorario,w
  3728  0E66  00F0               	movwf	___xxtofl@val
  3729  0E67  085F               	movf	_CmHorario+1,w
  3730  0E68  00F1               	movwf	___xxtofl@val+1
  3731  0E69  3000               	movlw	0
  3732  0E6A  1BF1               	btfsc	___xxtofl@val+1,7
  3733  0E6B  30FF               	movlw	255
  3734  0E6C  00F2               	movwf	___xxtofl@val+2
  3735  0E6D  00F3               	movwf	___xxtofl@val+3
  3736  0E6E  3001               	movlw	1
  3737  0E6F  120A  158A  24B6  120A  158A  	fcall	___xxtofl
  3738  0E74  0873               	movf	?___xxtofl+3,w
  3739  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  3740  0E76  1303               	bcf	3,6	;RP1=0, select bank0
  3741  0E77  00C1               	movwf	___flge@ff2+3
  3742  0E78  0872               	movf	?___xxtofl+2,w
  3743  0E79  00C0               	movwf	___flge@ff2+2
  3744  0E7A  0871               	movf	?___xxtofl+1,w
  3745  0E7B  00BF               	movwf	___flge@ff2+1
  3746  0E7C  0870               	movf	?___xxtofl,w
  3747  0E7D  00BE               	movwf	___flge@ff2
  3748  0E7E  120A  158A  2421  120A  158A  	fcall	___flge
  3749  0E83  1C03               	btfss	3,0
  3750  0E84  2EA0               	goto	l238
  3751                           
  3752                           ;Controls.c: 185:         Grados = 0;
  3753  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  3754  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  3755  0E87  01E0               	clrf	_Grados
  3756  0E88  01E1               	clrf	_Grados+1
  3757                           
  3758                           ;Controls.c: 186:         RC0 = !RC0;
  3759  0E89  3001               	movlw	1
  3760  0E8A  0687               	xorwf	7,f
  3761                           
  3762                           ;Controls.c: 187:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  3763  0E8B  300B               	movlw	11
  3764  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  3765  0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  3766  0E8E  00C8               	movwf	??_VerificarInversionGiro+2
  3767  0E8F  3026               	movlw	38
  3768  0E90  00C7               	movwf	??_VerificarInversionGiro+1
  3769  0E91  305D               	movlw	93
  3770  0E92  00C6               	movwf	??_VerificarInversionGiro
  3771  0E93                     u3827:	
  3772  0E93  0BC6               	decfsz	??_VerificarInversionGiro,f
  3773  0E94  2E93               	goto	u3827
  3774  0E95  0BC7               	decfsz	??_VerificarInversionGiro+1,f
  3775  0E96  2E93               	goto	u3827
  3776  0E97  0BC8               	decfsz	??_VerificarInversionGiro+2,f
  3777  0E98  2E93               	goto	u3827
  3778                           
  3779                           ;Controls.c: 188:         RC1 = !RC1;
  3780  0E99  3002               	movlw	2
  3781  0E9A                     L5:	
  3782  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  3783  0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  3784  0E9C  0687               	xorwf	7,f
  3785                           
  3786                           ;Controls.c: 189:         lastCm = 0;
  3787  0E9D  01D8               	clrf	_lastCm
  3788  0E9E  01D9               	clrf	_lastCm+1
  3789                           
  3790                           ;Controls.c: 190:     } else if (RC1 && Grados * 0.97 >= CmAntiHorario) {
  3791  0E9F  0008               	return
  3792  0EA0                     l238:	
  3793  0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  3794  0EA1  1303               	bcf	3,6	;RP1=0, select bank0
  3795  0EA2  1C87               	btfss	7,1	;volatile
  3796  0EA3  0008               	return
  3797  0EA4  303F               	movlw	63
  3798  0EA5  00A3               	movwf	___flmul@b+3
  3799  0EA6  3078               	movlw	120
  3800  0EA7  00A2               	movwf	___flmul@b+2
  3801  0EA8  3051               	movlw	81
  3802  0EA9  00A1               	movwf	___flmul@b+1
  3803  0EAA  30EC               	movlw	236
  3804  0EAB  00A0               	movwf	___flmul@b
  3805  0EAC  0860               	movf	_Grados,w
  3806  0EAD  00F0               	movwf	___xxtofl@val
  3807  0EAE  0861               	movf	_Grados+1,w
  3808  0EAF  00F1               	movwf	___xxtofl@val+1
  3809  0EB0  3000               	movlw	0
  3810  0EB1  1BF1               	btfsc	___xxtofl@val+1,7
  3811  0EB2  30FF               	movlw	255
  3812  0EB3  00F2               	movwf	___xxtofl@val+2
  3813  0EB4  00F3               	movwf	___xxtofl@val+3
  3814  0EB5  3001               	movlw	1
  3815  0EB6  120A  158A  24B6  120A  158A  	fcall	___xxtofl
  3816  0EBB  0873               	movf	?___xxtofl+3,w
  3817  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  3818  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  3819  0EBE  00A7               	movwf	___flmul@a+3
  3820  0EBF  0872               	movf	?___xxtofl+2,w
  3821  0EC0  00A6               	movwf	___flmul@a+2
  3822  0EC1  0871               	movf	?___xxtofl+1,w
  3823  0EC2  00A5               	movwf	___flmul@a+1
  3824  0EC3  0870               	movf	?___xxtofl,w
  3825  0EC4  00A4               	movwf	___flmul@a
  3826  0EC5  120A  118A  24C8  120A  158A  	fcall	___flmul
  3827  0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  3828  0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  3829  0ECC  0823               	movf	?___flmul+3,w
  3830  0ECD  00BD               	movwf	___flge@ff1+3
  3831  0ECE  0822               	movf	?___flmul+2,w
  3832  0ECF  00BC               	movwf	___flge@ff1+2
  3833  0ED0  0821               	movf	?___flmul+1,w
  3834  0ED1  00BB               	movwf	___flge@ff1+1
  3835  0ED2  0820               	movf	?___flmul,w
  3836  0ED3  00BA               	movwf	___flge@ff1
  3837  0ED4  085C               	movf	_CmAntiHorario,w
  3838  0ED5  00F0               	movwf	___xxtofl@val
  3839  0ED6  085D               	movf	_CmAntiHorario+1,w
  3840  0ED7  00F1               	movwf	___xxtofl@val+1
  3841  0ED8  3000               	movlw	0
  3842  0ED9  1BF1               	btfsc	___xxtofl@val+1,7
  3843  0EDA  30FF               	movlw	255
  3844  0EDB  00F2               	movwf	___xxtofl@val+2
  3845  0EDC  00F3               	movwf	___xxtofl@val+3
  3846  0EDD  3001               	movlw	1
  3847  0EDE  120A  158A  24B6  120A  158A  	fcall	___xxtofl
  3848  0EE3  0873               	movf	?___xxtofl+3,w
  3849  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  3850  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  3851  0EE6  00C1               	movwf	___flge@ff2+3
  3852  0EE7  0872               	movf	?___xxtofl+2,w
  3853  0EE8  00C0               	movwf	___flge@ff2+2
  3854  0EE9  0871               	movf	?___xxtofl+1,w
  3855  0EEA  00BF               	movwf	___flge@ff2+1
  3856  0EEB  0870               	movf	?___xxtofl,w
  3857  0EEC  00BE               	movwf	___flge@ff2
  3858  0EED  120A  158A  2421  120A  158A  	fcall	___flge
  3859  0EF2  1C03               	btfss	3,0
  3860  0EF3  0008               	return
  3861                           
  3862                           ;Controls.c: 191:         Grados = 0;
  3863  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3864  0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  3865  0EF6  01E0               	clrf	_Grados
  3866  0EF7  01E1               	clrf	_Grados+1
  3867                           
  3868                           ;Controls.c: 192:         RC1 = !RC1;
  3869  0EF8  3002               	movlw	2
  3870  0EF9  0687               	xorwf	7,f
  3871                           
  3872                           ;Controls.c: 193:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  3873  0EFA  300B               	movlw	11
  3874  0EFB  1283               	bcf	3,5	;RP0=0, select bank0
  3875  0EFC  1303               	bcf	3,6	;RP1=0, select bank0
  3876  0EFD  00C8               	movwf	??_VerificarInversionGiro+2
  3877  0EFE  3026               	movlw	38
  3878  0EFF  00C7               	movwf	??_VerificarInversionGiro+1
  3879  0F00  305D               	movlw	93
  3880  0F01  00C6               	movwf	??_VerificarInversionGiro
  3881  0F02                     u3837:	
  3882  0F02  0BC6               	decfsz	??_VerificarInversionGiro,f
  3883  0F03  2F02               	goto	u3837
  3884  0F04  0BC7               	decfsz	??_VerificarInversionGiro+1,f
  3885  0F05  2F02               	goto	u3837
  3886  0F06  0BC8               	decfsz	??_VerificarInversionGiro+2,f
  3887  0F07  2F02               	goto	u3837
  3888                           
  3889                           ;Controls.c: 194:         RC0 = !RC0;
  3890  0F08  3001               	movlw	1
  3891  0F09  2E9A               	goto	L5
  3892  0F0A                     __end_of_VerificarInversionGiro:	
  3893                           
  3894                           	psect	text12
  3895  0CB6                     __ptext12:	
  3896 ;; *************** function ___xxtofl *****************
  3897 ;; Defined at:
  3898 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  sign            1    wreg     unsigned char 
  3901 ;;  val             4    0[COMMON] long 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  sign            1    8[COMMON] unsigned char 
  3904 ;;  arg             4   10[COMMON] unsigned long 
  3905 ;;  exp             1    9[COMMON] unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  4    0[COMMON] unsigned char 
  3908 ;; Registers used:
  3909 ;;		wreg, status,2, status,0
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3915 ;;      Params:         4       0       0       0       0
  3916 ;;      Locals:         6       0       0       0       0
  3917 ;;      Temps:          4       0       0       0       0
  3918 ;;      Totals:        14       0       0       0       0
  3919 ;;Total ram usage:       14 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_VerificarInversionGiro
  3925 ;;		_Encoder
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           
  3930                           ;psect for function ___xxtofl
  3931  0CB6                     ___xxtofl:	
  3932                           
  3933                           ;incstack = 0
  3934                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3935                           ;___xxtofl@sign stored from wreg
  3936  0CB6  00F8               	movwf	___xxtofl@sign
  3937  0CB7  0878               	movf	___xxtofl@sign,w
  3938  0CB8  1D03               	btfss	3,2
  3939  0CB9  1FF3               	btfss	___xxtofl@val+3,7
  3940  0CBA  2CCB               	goto	l2269
  3941  0CBB  0970               	comf	___xxtofl@val,w
  3942  0CBC  00FA               	movwf	___xxtofl@arg
  3943  0CBD  0971               	comf	___xxtofl@val+1,w
  3944  0CBE  00FB               	movwf	___xxtofl@arg+1
  3945  0CBF  0972               	comf	___xxtofl@val+2,w
  3946  0CC0  00FC               	movwf	___xxtofl@arg+2
  3947  0CC1  0973               	comf	___xxtofl@val+3,w
  3948  0CC2  00FD               	movwf	___xxtofl@arg+3
  3949  0CC3  0AFA               	incf	___xxtofl@arg,f
  3950  0CC4  1903               	skipnz
  3951  0CC5  0AFB               	incf	___xxtofl@arg+1,f
  3952  0CC6  1903               	skipnz
  3953  0CC7  0AFC               	incf	___xxtofl@arg+2,f
  3954  0CC8  1903               	skipnz
  3955  0CC9  0AFD               	incf	___xxtofl@arg+3,f
  3956  0CCA  2CD3               	goto	l788
  3957  0CCB                     l2269:	
  3958  0CCB  0873               	movf	___xxtofl@val+3,w
  3959  0CCC  00FD               	movwf	___xxtofl@arg+3
  3960  0CCD  0872               	movf	___xxtofl@val+2,w
  3961  0CCE  00FC               	movwf	___xxtofl@arg+2
  3962  0CCF  0871               	movf	___xxtofl@val+1,w
  3963  0CD0  00FB               	movwf	___xxtofl@arg+1
  3964  0CD1  0870               	movf	___xxtofl@val,w
  3965  0CD2  00FA               	movwf	___xxtofl@arg
  3966  0CD3                     l788:	
  3967  0CD3  0873               	movf	___xxtofl@val+3,w
  3968  0CD4  0472               	iorwf	___xxtofl@val+2,w
  3969  0CD5  0471               	iorwf	___xxtofl@val+1,w
  3970  0CD6  0470               	iorwf	___xxtofl@val,w
  3971  0CD7  1D03               	skipz
  3972  0CD8  2CE2               	goto	l2275
  3973  0CD9  3000               	movlw	0
  3974  0CDA  00F3               	movwf	?___xxtofl+3
  3975  0CDB  3000               	movlw	0
  3976  0CDC  00F2               	movwf	?___xxtofl+2
  3977  0CDD  3000               	movlw	0
  3978  0CDE  00F1               	movwf	?___xxtofl+1
  3979  0CDF  3000               	movlw	0
  3980  0CE0  00F0               	movwf	?___xxtofl
  3981  0CE1  0008               	return
  3982  0CE2                     l2275:	
  3983  0CE2  3096               	movlw	150
  3984  0CE3  00F4               	movwf	??___xxtofl
  3985  0CE4  0874               	movf	??___xxtofl,w
  3986  0CE5  00F9               	movwf	___xxtofl@exp
  3987  0CE6                     l2279:	
  3988  0CE6  30FE               	movlw	254
  3989  0CE7  057D               	andwf	___xxtofl@arg+3,w
  3990  0CE8  1903               	btfsc	3,2
  3991  0CE9  2D13               	goto	l794
  3992  0CEA  3001               	movlw	1
  3993  0CEB  00F4               	movwf	??___xxtofl
  3994  0CEC  0874               	movf	??___xxtofl,w
  3995  0CED  07F9               	addwf	___xxtofl@exp,f
  3996  0CEE  3001               	movlw	1
  3997  0CEF                     u2675:	
  3998  0CEF  1003               	clrc
  3999  0CF0  0CFD               	rrf	___xxtofl@arg+3,f
  4000  0CF1  0CFC               	rrf	___xxtofl@arg+2,f
  4001  0CF2  0CFB               	rrf	___xxtofl@arg+1,f
  4002  0CF3  0CFA               	rrf	___xxtofl@arg,f
  4003  0CF4  3EFF               	addlw	-1
  4004  0CF5  1D03               	skipz
  4005  0CF6  2CEF               	goto	u2675
  4006  0CF7  2CE6               	goto	l2279
  4007  0CF8                     l2281:	
  4008  0CF8  3001               	movlw	1
  4009  0CF9  00F4               	movwf	??___xxtofl
  4010  0CFA  0874               	movf	??___xxtofl,w
  4011  0CFB  07F9               	addwf	___xxtofl@exp,f
  4012  0CFC  3001               	movlw	1
  4013  0CFD  07FA               	addwf	___xxtofl@arg,f
  4014  0CFE  3000               	movlw	0
  4015  0CFF  1803               	skipnc
  4016  0D00  3001               	movlw	1
  4017  0D01  07FB               	addwf	___xxtofl@arg+1,f
  4018  0D02  3000               	movlw	0
  4019  0D03  1803               	skipnc
  4020  0D04  3001               	movlw	1
  4021  0D05  07FC               	addwf	___xxtofl@arg+2,f
  4022  0D06  3000               	movlw	0
  4023  0D07  1803               	skipnc
  4024  0D08  3001               	movlw	1
  4025  0D09  07FD               	addwf	___xxtofl@arg+3,f
  4026  0D0A  3001               	movlw	1
  4027  0D0B                     u2695:	
  4028  0D0B  1003               	clrc
  4029  0D0C  0CFD               	rrf	___xxtofl@arg+3,f
  4030  0D0D  0CFC               	rrf	___xxtofl@arg+2,f
  4031  0D0E  0CFB               	rrf	___xxtofl@arg+1,f
  4032  0D0F  0CFA               	rrf	___xxtofl@arg,f
  4033  0D10  3EFF               	addlw	-1
  4034  0D11  1D03               	skipz
  4035  0D12  2D0B               	goto	u2695
  4036  0D13                     l794:	
  4037  0D13  30FF               	movlw	255
  4038  0D14  057D               	andwf	___xxtofl@arg+3,w
  4039  0D15  1903               	btfsc	3,2
  4040  0D16  2D27               	goto	l2289
  4041  0D17  2CF8               	goto	l2281
  4042  0D18                     l2291:	
  4043  0D18  3002               	movlw	2
  4044  0D19  0279               	subwf	___xxtofl@exp,w
  4045  0D1A  1C03               	btfss	3,0
  4046  0D1B  2D29               	goto	l801
  4047  0D1C  3001               	movlw	1
  4048  0D1D  02F9               	subwf	___xxtofl@exp,f
  4049  0D1E  3001               	movlw	1
  4050  0D1F  00F4               	movwf	??___xxtofl
  4051  0D20                     u2715:	
  4052  0D20  1003               	clrc
  4053  0D21  0DFA               	rlf	___xxtofl@arg,f
  4054  0D22  0DFB               	rlf	___xxtofl@arg+1,f
  4055  0D23  0DFC               	rlf	___xxtofl@arg+2,f
  4056  0D24  0DFD               	rlf	___xxtofl@arg+3,f
  4057  0D25  0BF4               	decfsz	??___xxtofl,f
  4058  0D26  2D20               	goto	u2715
  4059  0D27                     l2289:	
  4060  0D27  1FFC               	btfss	___xxtofl@arg+2,7
  4061  0D28  2D18               	goto	l2291
  4062  0D29                     l801:	
  4063  0D29  1879               	btfsc	___xxtofl@exp,0
  4064  0D2A  2D33               	goto	l802
  4065  0D2B  30FF               	movlw	255
  4066  0D2C  05FA               	andwf	___xxtofl@arg,f
  4067  0D2D  30FF               	movlw	255
  4068  0D2E  05FB               	andwf	___xxtofl@arg+1,f
  4069  0D2F  307F               	movlw	127
  4070  0D30  05FC               	andwf	___xxtofl@arg+2,f
  4071  0D31  30FF               	movlw	255
  4072  0D32  05FD               	andwf	___xxtofl@arg+3,f
  4073  0D33                     l802:	
  4074  0D33  1003               	clrc
  4075  0D34  0CF9               	rrf	___xxtofl@exp,f
  4076  0D35  0879               	movf	___xxtofl@exp,w
  4077  0D36  00F4               	movwf	??___xxtofl
  4078  0D37  01F5               	clrf	??___xxtofl+1
  4079  0D38  01F6               	clrf	??___xxtofl+2
  4080  0D39  01F7               	clrf	??___xxtofl+3
  4081  0D3A  3018               	movlw	24
  4082  0D3B                     u2755:	
  4083  0D3B  1003               	clrc
  4084  0D3C  0DF4               	rlf	??___xxtofl,f
  4085  0D3D  0DF5               	rlf	??___xxtofl+1,f
  4086  0D3E  0DF6               	rlf	??___xxtofl+2,f
  4087  0D3F  0DF7               	rlf	??___xxtofl+3,f
  4088  0D40  3EFF               	addlw	-1
  4089  0D41  1D03               	skipz
  4090  0D42  2D3B               	goto	u2755
  4091  0D43  0874               	movf	??___xxtofl,w
  4092  0D44  04FA               	iorwf	___xxtofl@arg,f
  4093  0D45  0875               	movf	??___xxtofl+1,w
  4094  0D46  04FB               	iorwf	___xxtofl@arg+1,f
  4095  0D47  0876               	movf	??___xxtofl+2,w
  4096  0D48  04FC               	iorwf	___xxtofl@arg+2,f
  4097  0D49  0877               	movf	??___xxtofl+3,w
  4098  0D4A  04FD               	iorwf	___xxtofl@arg+3,f
  4099  0D4B  0878               	movf	___xxtofl@sign,w
  4100  0D4C  1D03               	btfss	3,2
  4101  0D4D  1FF3               	btfss	___xxtofl@val+3,7
  4102  0D4E  2D50               	goto	l2303
  4103  0D4F  17FD               	bsf	___xxtofl@arg+3,7
  4104  0D50                     l2303:	
  4105  0D50  087D               	movf	___xxtofl@arg+3,w
  4106  0D51  00F3               	movwf	?___xxtofl+3
  4107  0D52  087C               	movf	___xxtofl@arg+2,w
  4108  0D53  00F2               	movwf	?___xxtofl+2
  4109  0D54  087B               	movf	___xxtofl@arg+1,w
  4110  0D55  00F1               	movwf	?___xxtofl+1
  4111  0D56  087A               	movf	___xxtofl@arg,w
  4112  0D57  00F0               	movwf	?___xxtofl
  4113  0D58  0008               	return
  4114  0D59                     __end_of___xxtofl:	
  4115                           
  4116                           	psect	text13
  4117  04C8                     __ptext13:	
  4118 ;; *************** function ___flmul *****************
  4119 ;; Defined at:
  4120 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  b               4    0[BANK0 ] unsigned char 
  4123 ;;  a               4    4[BANK0 ] unsigned char 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  prod            4   20[BANK0 ] struct .
  4126 ;;  grs             4   14[BANK0 ] unsigned long 
  4127 ;;  temp            2   24[BANK0 ] struct .
  4128 ;;  bexp            1   19[BANK0 ] unsigned char 
  4129 ;;  aexp            1   18[BANK0 ] unsigned char 
  4130 ;;  sign            1   13[BANK0 ] unsigned char 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  4    0[BANK0 ] unsigned char 
  4133 ;; Registers used:
  4134 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4140 ;;      Params:         0       8       0       0       0
  4141 ;;      Locals:         0      13       0       0       0
  4142 ;;      Temps:          0       5       0       0       0
  4143 ;;      Totals:         0      26       0       0       0
  4144 ;;Total ram usage:       26 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:    1
  4147 ;; This function calls:
  4148 ;;		__Umul8_16
  4149 ;; This function is called by:
  4150 ;;		_VerificarInversionGiro
  4151 ;;		_Encoder
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           
  4156                           ;psect for function ___flmul
  4157  04C8                     ___flmul:	
  4158                           
  4159                           ;incstack = 0
  4160                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4161  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  4162  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  4163  04CA  0823               	movf	___flmul@b+3,w
  4164  04CB  3980               	andlw	128
  4165  04CC  00A8               	movwf	??___flmul
  4166  04CD  0828               	movf	??___flmul,w
  4167  04CE  00AD               	movwf	___flmul@sign
  4168  04CF  0823               	movf	___flmul@b+3,w
  4169  04D0  00A8               	movwf	??___flmul
  4170  04D1  0728               	addwf	??___flmul,w
  4171  04D2  00A9               	movwf	??___flmul+1
  4172  04D3  0829               	movf	??___flmul+1,w
  4173  04D4  00B3               	movwf	___flmul@bexp
  4174  04D5  1BA2               	btfsc	___flmul@b+2,7
  4175  04D6  1433               	bsf	___flmul@bexp,0
  4176  04D7  0833               	movf	___flmul@bexp,w
  4177  04D8  1903               	btfsc	3,2
  4178  04D9  2CE7               	goto	l2139
  4179  04DA  0A33               	incf	___flmul@bexp,w
  4180  04DB  1D03               	btfss	3,2
  4181  04DC  2CE5               	goto	l2137
  4182  04DD  3000               	movlw	0
  4183  04DE  00A3               	movwf	___flmul@b+3
  4184  04DF  3000               	movlw	0
  4185  04E0  00A2               	movwf	___flmul@b+2
  4186  04E1  3000               	movlw	0
  4187  04E2  00A1               	movwf	___flmul@b+1
  4188  04E3  3000               	movlw	0
  4189  04E4  00A0               	movwf	___flmul@b
  4190  04E5                     l2137:	
  4191  04E5  17A2               	bsf	___flmul@b+2,7
  4192  04E6  2CEF               	goto	l2141
  4193  04E7                     l2139:	
  4194  04E7  3000               	movlw	0
  4195  04E8  00A3               	movwf	___flmul@b+3
  4196  04E9  3000               	movlw	0
  4197  04EA  00A2               	movwf	___flmul@b+2
  4198  04EB  3000               	movlw	0
  4199  04EC  00A1               	movwf	___flmul@b+1
  4200  04ED  3000               	movlw	0
  4201  04EE  00A0               	movwf	___flmul@b
  4202  04EF                     l2141:	
  4203  04EF  0827               	movf	___flmul@a+3,w
  4204  04F0  3980               	andlw	128
  4205  04F1  00A8               	movwf	??___flmul
  4206  04F2  0828               	movf	??___flmul,w
  4207  04F3  06AD               	xorwf	___flmul@sign,f
  4208  04F4  0827               	movf	___flmul@a+3,w
  4209  04F5  00A8               	movwf	??___flmul
  4210  04F6  0728               	addwf	??___flmul,w
  4211  04F7  00A9               	movwf	??___flmul+1
  4212  04F8  0829               	movf	??___flmul+1,w
  4213  04F9  00B2               	movwf	___flmul@aexp
  4214  04FA  1BA6               	btfsc	___flmul@a+2,7
  4215  04FB  1432               	bsf	___flmul@aexp,0
  4216  04FC  0832               	movf	___flmul@aexp,w
  4217  04FD  1903               	btfsc	3,2
  4218  04FE  2D0C               	goto	l2157
  4219  04FF  0A32               	incf	___flmul@aexp,w
  4220  0500  1D03               	btfss	3,2
  4221  0501  2D0A               	goto	l2155
  4222  0502  3000               	movlw	0
  4223  0503  00A7               	movwf	___flmul@a+3
  4224  0504  3000               	movlw	0
  4225  0505  00A6               	movwf	___flmul@a+2
  4226  0506  3000               	movlw	0
  4227  0507  00A5               	movwf	___flmul@a+1
  4228  0508  3000               	movlw	0
  4229  0509  00A4               	movwf	___flmul@a
  4230  050A                     l2155:	
  4231  050A  17A6               	bsf	___flmul@a+2,7
  4232  050B  2D14               	goto	l2159
  4233  050C                     l2157:	
  4234  050C  3000               	movlw	0
  4235  050D  00A7               	movwf	___flmul@a+3
  4236  050E  3000               	movlw	0
  4237  050F  00A6               	movwf	___flmul@a+2
  4238  0510  3000               	movlw	0
  4239  0511  00A5               	movwf	___flmul@a+1
  4240  0512  3000               	movlw	0
  4241  0513  00A4               	movwf	___flmul@a
  4242  0514                     l2159:	
  4243  0514  0832               	movf	___flmul@aexp,w
  4244  0515  1D03               	btfss	3,2
  4245  0516  0833               	movf	___flmul@bexp,w
  4246  0517  1D03               	btfss	3,2
  4247  0518  2D22               	goto	l2167
  4248  0519  3000               	movlw	0
  4249  051A  00A3               	movwf	?___flmul+3
  4250  051B  3000               	movlw	0
  4251  051C  00A2               	movwf	?___flmul+2
  4252  051D  3000               	movlw	0
  4253  051E  00A1               	movwf	?___flmul+1
  4254  051F  3000               	movlw	0
  4255  0520  00A0               	movwf	?___flmul
  4256  0521  0008               	return
  4257  0522                     l2167:	
  4258  0522  0820               	movf	___flmul@b,w
  4259  0523  00A8               	movwf	??___flmul
  4260  0524  0828               	movf	??___flmul,w
  4261  0525  00F0               	movwf	__Umul8_16@multiplicand
  4262  0526  0826               	movf	___flmul@a+2,w
  4263  0527  120A  158A  2110  120A  118A  	fcall	__Umul8_16
  4264  052C  0871               	movf	?__Umul8_16+1,w
  4265  052D  1283               	bcf	3,5	;RP0=0, select bank0
  4266  052E  1303               	bcf	3,6	;RP1=0, select bank0
  4267  052F  00B9               	movwf	___flmul@temp+1
  4268  0530  0870               	movf	?__Umul8_16,w
  4269  0531  00B8               	movwf	___flmul@temp
  4270  0532  0838               	movf	___flmul@temp,w
  4271  0533  00A8               	movwf	??___flmul
  4272  0534  01A9               	clrf	??___flmul+1
  4273  0535  01AA               	clrf	??___flmul+2
  4274  0536  01AB               	clrf	??___flmul+3
  4275  0537  082B               	movf	??___flmul+3,w
  4276  0538  00B1               	movwf	___flmul@grs+3
  4277  0539  082A               	movf	??___flmul+2,w
  4278  053A  00B0               	movwf	___flmul@grs+2
  4279  053B  0829               	movf	??___flmul+1,w
  4280  053C  00AF               	movwf	___flmul@grs+1
  4281  053D  0828               	movf	??___flmul,w
  4282  053E  00AE               	movwf	___flmul@grs
  4283  053F  0839               	movf	___flmul@temp+1,w
  4284  0540  00A8               	movwf	??___flmul
  4285  0541  01A9               	clrf	??___flmul+1
  4286  0542  01AA               	clrf	??___flmul+2
  4287  0543  01AB               	clrf	??___flmul+3
  4288  0544  082B               	movf	??___flmul+3,w
  4289  0545  00B7               	movwf	___flmul@prod+3
  4290  0546  082A               	movf	??___flmul+2,w
  4291  0547  00B6               	movwf	___flmul@prod+2
  4292  0548  0829               	movf	??___flmul+1,w
  4293  0549  00B5               	movwf	___flmul@prod+1
  4294  054A  0828               	movf	??___flmul,w
  4295  054B  00B4               	movwf	___flmul@prod
  4296  054C  0821               	movf	___flmul@b+1,w
  4297  054D  00A8               	movwf	??___flmul
  4298  054E  0828               	movf	??___flmul,w
  4299  054F  00F0               	movwf	__Umul8_16@multiplicand
  4300  0550  0825               	movf	___flmul@a+1,w
  4301  0551  120A  158A  2110  120A  118A  	fcall	__Umul8_16
  4302  0556  0871               	movf	?__Umul8_16+1,w
  4303  0557  1283               	bcf	3,5	;RP0=0, select bank0
  4304  0558  1303               	bcf	3,6	;RP1=0, select bank0
  4305  0559  00B9               	movwf	___flmul@temp+1
  4306  055A  0870               	movf	?__Umul8_16,w
  4307  055B  00B8               	movwf	___flmul@temp
  4308  055C  0838               	movf	___flmul@temp,w
  4309  055D  00A8               	movwf	??___flmul
  4310  055E  01A9               	clrf	??___flmul+1
  4311  055F  01AA               	clrf	??___flmul+2
  4312  0560  01AB               	clrf	??___flmul+3
  4313  0561  0828               	movf	??___flmul,w
  4314  0562  07AE               	addwf	___flmul@grs,f
  4315  0563  0829               	movf	??___flmul+1,w
  4316  0564  1103               	clrz
  4317  0565  1803               	skipnc
  4318  0566  3E01               	addlw	1
  4319  0567  1D03               	btfss	3,2
  4320  0568  07AF               	addwf	___flmul@grs+1,f
  4321  0569  082A               	movf	??___flmul+2,w
  4322  056A  1103               	clrz
  4323  056B  1803               	skipnc
  4324  056C  3E01               	addlw	1
  4325  056D  1D03               	btfss	3,2
  4326  056E  07B0               	addwf	___flmul@grs+2,f
  4327  056F  082B               	movf	??___flmul+3,w
  4328  0570  1103               	clrz
  4329  0571  1803               	skipnc
  4330  0572  3E01               	addlw	1
  4331  0573  1D03               	btfss	3,2
  4332  0574  07B1               	addwf	___flmul@grs+3,f
  4333  0575  0839               	movf	___flmul@temp+1,w
  4334  0576  00A8               	movwf	??___flmul
  4335  0577  01A9               	clrf	??___flmul+1
  4336  0578  01AA               	clrf	??___flmul+2
  4337  0579  01AB               	clrf	??___flmul+3
  4338  057A  0828               	movf	??___flmul,w
  4339  057B  07B4               	addwf	___flmul@prod,f
  4340  057C  0829               	movf	??___flmul+1,w
  4341  057D  1103               	clrz
  4342  057E  1803               	skipnc
  4343  057F  3E01               	addlw	1
  4344  0580  1D03               	btfss	3,2
  4345  0581  07B5               	addwf	___flmul@prod+1,f
  4346  0582  082A               	movf	??___flmul+2,w
  4347  0583  1103               	clrz
  4348  0584  1803               	skipnc
  4349  0585  3E01               	addlw	1
  4350  0586  1D03               	btfss	3,2
  4351  0587  07B6               	addwf	___flmul@prod+2,f
  4352  0588  082B               	movf	??___flmul+3,w
  4353  0589  1103               	clrz
  4354  058A  1803               	skipnc
  4355  058B  3E01               	addlw	1
  4356  058C  1D03               	btfss	3,2
  4357  058D  07B7               	addwf	___flmul@prod+3,f
  4358  058E  0822               	movf	___flmul@b+2,w
  4359  058F  00A8               	movwf	??___flmul
  4360  0590  0828               	movf	??___flmul,w
  4361  0591  00F0               	movwf	__Umul8_16@multiplicand
  4362  0592  0824               	movf	___flmul@a,w
  4363  0593  120A  158A  2110  120A  118A  	fcall	__Umul8_16
  4364  0598  0871               	movf	?__Umul8_16+1,w
  4365  0599  1283               	bcf	3,5	;RP0=0, select bank0
  4366  059A  1303               	bcf	3,6	;RP1=0, select bank0
  4367  059B  00B9               	movwf	___flmul@temp+1
  4368  059C  0870               	movf	?__Umul8_16,w
  4369  059D  00B8               	movwf	___flmul@temp
  4370  059E  0838               	movf	___flmul@temp,w
  4371  059F  00A8               	movwf	??___flmul
  4372  05A0  01A9               	clrf	??___flmul+1
  4373  05A1  01AA               	clrf	??___flmul+2
  4374  05A2  01AB               	clrf	??___flmul+3
  4375  05A3  0828               	movf	??___flmul,w
  4376  05A4  07AE               	addwf	___flmul@grs,f
  4377  05A5  0829               	movf	??___flmul+1,w
  4378  05A6  1103               	clrz
  4379  05A7  1803               	skipnc
  4380  05A8  3E01               	addlw	1
  4381  05A9  1D03               	btfss	3,2
  4382  05AA  07AF               	addwf	___flmul@grs+1,f
  4383  05AB  082A               	movf	??___flmul+2,w
  4384  05AC  1103               	clrz
  4385  05AD  1803               	skipnc
  4386  05AE  3E01               	addlw	1
  4387  05AF  1D03               	btfss	3,2
  4388  05B0  07B0               	addwf	___flmul@grs+2,f
  4389  05B1  082B               	movf	??___flmul+3,w
  4390  05B2  1103               	clrz
  4391  05B3  1803               	skipnc
  4392  05B4  3E01               	addlw	1
  4393  05B5  1D03               	btfss	3,2
  4394  05B6  07B1               	addwf	___flmul@grs+3,f
  4395  05B7  0839               	movf	___flmul@temp+1,w
  4396  05B8  00A8               	movwf	??___flmul
  4397  05B9  01A9               	clrf	??___flmul+1
  4398  05BA  01AA               	clrf	??___flmul+2
  4399  05BB  01AB               	clrf	??___flmul+3
  4400  05BC  0828               	movf	??___flmul,w
  4401  05BD  07B4               	addwf	___flmul@prod,f
  4402  05BE  0829               	movf	??___flmul+1,w
  4403  05BF  1103               	clrz
  4404  05C0  1803               	skipnc
  4405  05C1  3E01               	addlw	1
  4406  05C2  1D03               	btfss	3,2
  4407  05C3  07B5               	addwf	___flmul@prod+1,f
  4408  05C4  082A               	movf	??___flmul+2,w
  4409  05C5  1103               	clrz
  4410  05C6  1803               	skipnc
  4411  05C7  3E01               	addlw	1
  4412  05C8  1D03               	btfss	3,2
  4413  05C9  07B6               	addwf	___flmul@prod+2,f
  4414  05CA  082B               	movf	??___flmul+3,w
  4415  05CB  1103               	clrz
  4416  05CC  1803               	skipnc
  4417  05CD  3E01               	addlw	1
  4418  05CE  1D03               	btfss	3,2
  4419  05CF  07B7               	addwf	___flmul@prod+3,f
  4420  05D0  3008               	movlw	8
  4421  05D1  00A8               	movwf	??___flmul
  4422  05D2                     u2395:	
  4423  05D2  1003               	clrc
  4424  05D3  0DAE               	rlf	___flmul@grs,f
  4425  05D4  0DAF               	rlf	___flmul@grs+1,f
  4426  05D5  0DB0               	rlf	___flmul@grs+2,f
  4427  05D6  0DB1               	rlf	___flmul@grs+3,f
  4428  05D7  0BA8               	decfsz	??___flmul,f
  4429  05D8  2DD2               	goto	u2395
  4430  05D9  0821               	movf	___flmul@b+1,w
  4431  05DA  00A8               	movwf	??___flmul
  4432  05DB  0828               	movf	??___flmul,w
  4433  05DC  00F0               	movwf	__Umul8_16@multiplicand
  4434  05DD  0824               	movf	___flmul@a,w
  4435  05DE  120A  158A  2110  120A  118A  	fcall	__Umul8_16
  4436  05E3  0871               	movf	?__Umul8_16+1,w
  4437  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  4438  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  4439  05E6  00B9               	movwf	___flmul@temp+1
  4440  05E7  0870               	movf	?__Umul8_16,w
  4441  05E8  00B8               	movwf	___flmul@temp
  4442  05E9  0838               	movf	___flmul@temp,w
  4443  05EA  00A8               	movwf	??___flmul
  4444  05EB  0839               	movf	___flmul@temp+1,w
  4445  05EC  00A9               	movwf	??___flmul+1
  4446  05ED  01AA               	clrf	??___flmul+2
  4447  05EE  01AB               	clrf	??___flmul+3
  4448  05EF  0828               	movf	??___flmul,w
  4449  05F0  07AE               	addwf	___flmul@grs,f
  4450  05F1  0829               	movf	??___flmul+1,w
  4451  05F2  1103               	clrz
  4452  05F3  1803               	skipnc
  4453  05F4  3E01               	addlw	1
  4454  05F5  1D03               	btfss	3,2
  4455  05F6  07AF               	addwf	___flmul@grs+1,f
  4456  05F7  082A               	movf	??___flmul+2,w
  4457  05F8  1103               	clrz
  4458  05F9  1803               	skipnc
  4459  05FA  3E01               	addlw	1
  4460  05FB  1D03               	btfss	3,2
  4461  05FC  07B0               	addwf	___flmul@grs+2,f
  4462  05FD  082B               	movf	??___flmul+3,w
  4463  05FE  1103               	clrz
  4464  05FF  1803               	skipnc
  4465  0600  3E01               	addlw	1
  4466  0601  1D03               	btfss	3,2
  4467  0602  07B1               	addwf	___flmul@grs+3,f
  4468  0603  0820               	movf	___flmul@b,w
  4469  0604  00A8               	movwf	??___flmul
  4470  0605  0828               	movf	??___flmul,w
  4471  0606  00F0               	movwf	__Umul8_16@multiplicand
  4472  0607  0825               	movf	___flmul@a+1,w
  4473  0608  120A  158A  2110  120A  118A  	fcall	__Umul8_16
  4474  060D  0871               	movf	?__Umul8_16+1,w
  4475  060E  1283               	bcf	3,5	;RP0=0, select bank0
  4476  060F  1303               	bcf	3,6	;RP1=0, select bank0
  4477  0610  00B9               	movwf	___flmul@temp+1
  4478  0611  0870               	movf	?__Umul8_16,w
  4479  0612  00B8               	movwf	___flmul@temp
  4480  0613  0838               	movf	___flmul@temp,w
  4481  0614  00A8               	movwf	??___flmul
  4482  0615  0839               	movf	___flmul@temp+1,w
  4483  0616  00A9               	movwf	??___flmul+1
  4484  0617  01AA               	clrf	??___flmul+2
  4485  0618  01AB               	clrf	??___flmul+3
  4486  0619  0828               	movf	??___flmul,w
  4487  061A  07AE               	addwf	___flmul@grs,f
  4488  061B  0829               	movf	??___flmul+1,w
  4489  061C  1103               	clrz
  4490  061D  1803               	skipnc
  4491  061E  3E01               	addlw	1
  4492  061F  1D03               	btfss	3,2
  4493  0620  07AF               	addwf	___flmul@grs+1,f
  4494  0621  082A               	movf	??___flmul+2,w
  4495  0622  1103               	clrz
  4496  0623  1803               	skipnc
  4497  0624  3E01               	addlw	1
  4498  0625  1D03               	btfss	3,2
  4499  0626  07B0               	addwf	___flmul@grs+2,f
  4500  0627  082B               	movf	??___flmul+3,w
  4501  0628  1103               	clrz
  4502  0629  1803               	skipnc
  4503  062A  3E01               	addlw	1
  4504  062B  1D03               	btfss	3,2
  4505  062C  07B1               	addwf	___flmul@grs+3,f
  4506  062D  3008               	movlw	8
  4507  062E  00A8               	movwf	??___flmul
  4508  062F                     u2425:	
  4509  062F  1003               	clrc
  4510  0630  0DAE               	rlf	___flmul@grs,f
  4511  0631  0DAF               	rlf	___flmul@grs+1,f
  4512  0632  0DB0               	rlf	___flmul@grs+2,f
  4513  0633  0DB1               	rlf	___flmul@grs+3,f
  4514  0634  0BA8               	decfsz	??___flmul,f
  4515  0635  2E2F               	goto	u2425
  4516  0636  0820               	movf	___flmul@b,w
  4517  0637  00A8               	movwf	??___flmul
  4518  0638  0828               	movf	??___flmul,w
  4519  0639  00F0               	movwf	__Umul8_16@multiplicand
  4520  063A  0824               	movf	___flmul@a,w
  4521  063B  120A  158A  2110  120A  118A  	fcall	__Umul8_16
  4522  0640  0871               	movf	?__Umul8_16+1,w
  4523  0641  1283               	bcf	3,5	;RP0=0, select bank0
  4524  0642  1303               	bcf	3,6	;RP1=0, select bank0
  4525  0643  00B9               	movwf	___flmul@temp+1
  4526  0644  0870               	movf	?__Umul8_16,w
  4527  0645  00B8               	movwf	___flmul@temp
  4528  0646  0838               	movf	___flmul@temp,w
  4529  0647  00A8               	movwf	??___flmul
  4530  0648  0839               	movf	___flmul@temp+1,w
  4531  0649  00A9               	movwf	??___flmul+1
  4532  064A  01AA               	clrf	??___flmul+2
  4533  064B  01AB               	clrf	??___flmul+3
  4534  064C  0828               	movf	??___flmul,w
  4535  064D  07AE               	addwf	___flmul@grs,f
  4536  064E  0829               	movf	??___flmul+1,w
  4537  064F  1103               	clrz
  4538  0650  1803               	skipnc
  4539  0651  3E01               	addlw	1
  4540  0652  1D03               	btfss	3,2
  4541  0653  07AF               	addwf	___flmul@grs+1,f
  4542  0654  082A               	movf	??___flmul+2,w
  4543  0655  1103               	clrz
  4544  0656  1803               	skipnc
  4545  0657  3E01               	addlw	1
  4546  0658  1D03               	btfss	3,2
  4547  0659  07B0               	addwf	___flmul@grs+2,f
  4548  065A  082B               	movf	??___flmul+3,w
  4549  065B  1103               	clrz
  4550  065C  1803               	skipnc
  4551  065D  3E01               	addlw	1
  4552  065E  1D03               	btfss	3,2
  4553  065F  07B1               	addwf	___flmul@grs+3,f
  4554  0660  0821               	movf	___flmul@b+1,w
  4555  0661  00A8               	movwf	??___flmul
  4556  0662  0828               	movf	??___flmul,w
  4557  0663  00F0               	movwf	__Umul8_16@multiplicand
  4558  0664  0826               	movf	___flmul@a+2,w
  4559  0665  120A  158A  2110  120A  118A  	fcall	__Umul8_16
  4560  066A  0871               	movf	?__Umul8_16+1,w
  4561  066B  1283               	bcf	3,5	;RP0=0, select bank0
  4562  066C  1303               	bcf	3,6	;RP1=0, select bank0
  4563  066D  00B9               	movwf	___flmul@temp+1
  4564  066E  0870               	movf	?__Umul8_16,w
  4565  066F  00B8               	movwf	___flmul@temp
  4566  0670  0838               	movf	___flmul@temp,w
  4567  0671  00A8               	movwf	??___flmul
  4568  0672  0839               	movf	___flmul@temp+1,w
  4569  0673  00A9               	movwf	??___flmul+1
  4570  0674  01AA               	clrf	??___flmul+2
  4571  0675  01AB               	clrf	??___flmul+3
  4572  0676  0828               	movf	??___flmul,w
  4573  0677  07B4               	addwf	___flmul@prod,f
  4574  0678  0829               	movf	??___flmul+1,w
  4575  0679  1103               	clrz
  4576  067A  1803               	skipnc
  4577  067B  3E01               	addlw	1
  4578  067C  1D03               	btfss	3,2
  4579  067D  07B5               	addwf	___flmul@prod+1,f
  4580  067E  082A               	movf	??___flmul+2,w
  4581  067F  1103               	clrz
  4582  0680  1803               	skipnc
  4583  0681  3E01               	addlw	1
  4584  0682  1D03               	btfss	3,2
  4585  0683  07B6               	addwf	___flmul@prod+2,f
  4586  0684  082B               	movf	??___flmul+3,w
  4587  0685  1103               	clrz
  4588  0686  1803               	skipnc
  4589  0687  3E01               	addlw	1
  4590  0688  1D03               	btfss	3,2
  4591  0689  07B7               	addwf	___flmul@prod+3,f
  4592  068A  0822               	movf	___flmul@b+2,w
  4593  068B  00A8               	movwf	??___flmul
  4594  068C  0828               	movf	??___flmul,w
  4595  068D  00F0               	movwf	__Umul8_16@multiplicand
  4596  068E  0825               	movf	___flmul@a+1,w
  4597  068F  120A  158A  2110  120A  118A  	fcall	__Umul8_16
  4598  0694  0871               	movf	?__Umul8_16+1,w
  4599  0695  1283               	bcf	3,5	;RP0=0, select bank0
  4600  0696  1303               	bcf	3,6	;RP1=0, select bank0
  4601  0697  00B9               	movwf	___flmul@temp+1
  4602  0698  0870               	movf	?__Umul8_16,w
  4603  0699  00B8               	movwf	___flmul@temp
  4604  069A  0838               	movf	___flmul@temp,w
  4605  069B  00A8               	movwf	??___flmul
  4606  069C  0839               	movf	___flmul@temp+1,w
  4607  069D  00A9               	movwf	??___flmul+1
  4608  069E  01AA               	clrf	??___flmul+2
  4609  069F  01AB               	clrf	??___flmul+3
  4610  06A0  0828               	movf	??___flmul,w
  4611  06A1  07B4               	addwf	___flmul@prod,f
  4612  06A2  0829               	movf	??___flmul+1,w
  4613  06A3  1103               	clrz
  4614  06A4  1803               	skipnc
  4615  06A5  3E01               	addlw	1
  4616  06A6  1D03               	btfss	3,2
  4617  06A7  07B5               	addwf	___flmul@prod+1,f
  4618  06A8  082A               	movf	??___flmul+2,w
  4619  06A9  1103               	clrz
  4620  06AA  1803               	skipnc
  4621  06AB  3E01               	addlw	1
  4622  06AC  1D03               	btfss	3,2
  4623  06AD  07B6               	addwf	___flmul@prod+2,f
  4624  06AE  082B               	movf	??___flmul+3,w
  4625  06AF  1103               	clrz
  4626  06B0  1803               	skipnc
  4627  06B1  3E01               	addlw	1
  4628  06B2  1D03               	btfss	3,2
  4629  06B3  07B7               	addwf	___flmul@prod+3,f
  4630  06B4  0822               	movf	___flmul@b+2,w
  4631  06B5  00A8               	movwf	??___flmul
  4632  06B6  0828               	movf	??___flmul,w
  4633  06B7  00F0               	movwf	__Umul8_16@multiplicand
  4634  06B8  0826               	movf	___flmul@a+2,w
  4635  06B9  120A  158A  2110  120A  118A  	fcall	__Umul8_16
  4636  06BE  0871               	movf	?__Umul8_16+1,w
  4637  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  4638  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  4639  06C1  00B9               	movwf	___flmul@temp+1
  4640  06C2  0870               	movf	?__Umul8_16,w
  4641  06C3  00B8               	movwf	___flmul@temp
  4642  06C4  0838               	movf	___flmul@temp,w
  4643  06C5  00A8               	movwf	??___flmul
  4644  06C6  0839               	movf	___flmul@temp+1,w
  4645  06C7  00A9               	movwf	??___flmul+1
  4646  06C8  01AA               	clrf	??___flmul+2
  4647  06C9  01AB               	clrf	??___flmul+3
  4648  06CA  3008               	movlw	8
  4649  06CB                     u2465:	
  4650  06CB  1003               	clrc
  4651  06CC  0DA8               	rlf	??___flmul,f
  4652  06CD  0DA9               	rlf	??___flmul+1,f
  4653  06CE  0DAA               	rlf	??___flmul+2,f
  4654  06CF  0DAB               	rlf	??___flmul+3,f
  4655  06D0  3EFF               	addlw	-1
  4656  06D1  1D03               	skipz
  4657  06D2  2ECB               	goto	u2465
  4658  06D3  0828               	movf	??___flmul,w
  4659  06D4  07B4               	addwf	___flmul@prod,f
  4660  06D5  0829               	movf	??___flmul+1,w
  4661  06D6  1103               	clrz
  4662  06D7  1803               	skipnc
  4663  06D8  3E01               	addlw	1
  4664  06D9  1D03               	btfss	3,2
  4665  06DA  07B5               	addwf	___flmul@prod+1,f
  4666  06DB  082A               	movf	??___flmul+2,w
  4667  06DC  1103               	clrz
  4668  06DD  1803               	skipnc
  4669  06DE  3E01               	addlw	1
  4670  06DF  1D03               	btfss	3,2
  4671  06E0  07B6               	addwf	___flmul@prod+2,f
  4672  06E1  082B               	movf	??___flmul+3,w
  4673  06E2  1103               	clrz
  4674  06E3  1803               	skipnc
  4675  06E4  3E01               	addlw	1
  4676  06E5  1D03               	btfss	3,2
  4677  06E6  07B7               	addwf	___flmul@prod+3,f
  4678  06E7  082E               	movf	___flmul@grs,w
  4679  06E8  00A8               	movwf	??___flmul
  4680  06E9  082F               	movf	___flmul@grs+1,w
  4681  06EA  00A9               	movwf	??___flmul+1
  4682  06EB  0830               	movf	___flmul@grs+2,w
  4683  06EC  00AA               	movwf	??___flmul+2
  4684  06ED  0831               	movf	___flmul@grs+3,w
  4685  06EE  00AB               	movwf	??___flmul+3
  4686  06EF  3018               	movlw	24
  4687  06F0                     u2485:	
  4688  06F0  1003               	clrc
  4689  06F1  0CAB               	rrf	??___flmul+3,f
  4690  06F2  0CAA               	rrf	??___flmul+2,f
  4691  06F3  0CA9               	rrf	??___flmul+1,f
  4692  06F4  0CA8               	rrf	??___flmul,f
  4693  06F5  3EFF               	addlw	-1
  4694  06F6  1D03               	skipz
  4695  06F7  2EF0               	goto	u2485
  4696  06F8  0828               	movf	??___flmul,w
  4697  06F9  07B4               	addwf	___flmul@prod,f
  4698  06FA  0829               	movf	??___flmul+1,w
  4699  06FB  1103               	clrz
  4700  06FC  1803               	skipnc
  4701  06FD  3E01               	addlw	1
  4702  06FE  1D03               	btfss	3,2
  4703  06FF  07B5               	addwf	___flmul@prod+1,f
  4704  0700  082A               	movf	??___flmul+2,w
  4705  0701  1103               	clrz
  4706  0702  1803               	skipnc
  4707  0703  3E01               	addlw	1
  4708  0704  1D03               	btfss	3,2
  4709  0705  07B6               	addwf	___flmul@prod+2,f
  4710  0706  082B               	movf	??___flmul+3,w
  4711  0707  1103               	clrz
  4712  0708  1803               	skipnc
  4713  0709  3E01               	addlw	1
  4714  070A  1D03               	btfss	3,2
  4715  070B  07B7               	addwf	___flmul@prod+3,f
  4716  070C  3008               	movlw	8
  4717  070D  00A8               	movwf	??___flmul
  4718  070E                     u2505:	
  4719  070E  1003               	clrc
  4720  070F  0DAE               	rlf	___flmul@grs,f
  4721  0710  0DAF               	rlf	___flmul@grs+1,f
  4722  0711  0DB0               	rlf	___flmul@grs+2,f
  4723  0712  0DB1               	rlf	___flmul@grs+3,f
  4724  0713  0BA8               	decfsz	??___flmul,f
  4725  0714  2F0E               	goto	u2505
  4726  0715  0833               	movf	___flmul@bexp,w
  4727  0716  0732               	addwf	___flmul@aexp,w
  4728  0717  00A8               	movwf	??___flmul
  4729  0718  01A9               	clrf	??___flmul+1
  4730  0719  0DA9               	rlf	??___flmul+1,f
  4731  071A  0828               	movf	??___flmul,w
  4732  071B  3E82               	addlw	130
  4733  071C  00B8               	movwf	___flmul@temp
  4734  071D  0829               	movf	??___flmul+1,w
  4735  071E  1803               	skipnc
  4736  071F  3E01               	addlw	1
  4737  0720  3EFF               	addlw	255
  4738  0721  00B9               	movwf	___flmul@temp+1
  4739  0722                     l2219:	
  4740  0722  1BB6               	btfsc	___flmul@prod+2,7
  4741  0723  2F3F               	goto	l2221
  4742  0724  3001               	movlw	1
  4743  0725  00A8               	movwf	??___flmul
  4744  0726                     u2515:	
  4745  0726  1003               	clrc
  4746  0727  0DB4               	rlf	___flmul@prod,f
  4747  0728  0DB5               	rlf	___flmul@prod+1,f
  4748  0729  0DB6               	rlf	___flmul@prod+2,f
  4749  072A  0DB7               	rlf	___flmul@prod+3,f
  4750  072B  0BA8               	decfsz	??___flmul,f
  4751  072C  2F26               	goto	u2515
  4752  072D  1BB1               	btfsc	___flmul@grs+3,7
  4753  072E  1434               	bsf	___flmul@prod,0
  4754  072F  3001               	movlw	1
  4755  0730  00A8               	movwf	??___flmul
  4756  0731                     u2535:	
  4757  0731  1003               	clrc
  4758  0732  0DAE               	rlf	___flmul@grs,f
  4759  0733  0DAF               	rlf	___flmul@grs+1,f
  4760  0734  0DB0               	rlf	___flmul@grs+2,f
  4761  0735  0DB1               	rlf	___flmul@grs+3,f
  4762  0736  0BA8               	decfsz	??___flmul,f
  4763  0737  2F31               	goto	u2535
  4764  0738  30FF               	movlw	255
  4765  0739  07B8               	addwf	___flmul@temp,f
  4766  073A  1803               	skipnc
  4767  073B  0AB9               	incf	___flmul@temp+1,f
  4768  073C  30FF               	movlw	255
  4769  073D  07B9               	addwf	___flmul@temp+1,f
  4770  073E  2F22               	goto	l2219
  4771  073F                     l2221:	
  4772  073F  01B2               	clrf	___flmul@aexp
  4773  0740  1FB1               	btfss	___flmul@grs+3,7
  4774  0741  2F58               	goto	l2231
  4775  0742  30FF               	movlw	255
  4776  0743  052E               	andwf	___flmul@grs,w
  4777  0744  00A8               	movwf	??___flmul
  4778  0745  30FF               	movlw	255
  4779  0746  052F               	andwf	___flmul@grs+1,w
  4780  0747  00A9               	movwf	??___flmul+1
  4781  0748  30FF               	movlw	255
  4782  0749  0530               	andwf	___flmul@grs+2,w
  4783  074A  00AA               	movwf	??___flmul+2
  4784  074B  307F               	movlw	127
  4785  074C  0531               	andwf	___flmul@grs+3,w
  4786  074D  00AB               	movwf	??___flmul+3
  4787  074E  082B               	movf	??___flmul+3,w
  4788  074F  042A               	iorwf	??___flmul+2,w
  4789  0750  0429               	iorwf	??___flmul+1,w
  4790  0751  0428               	iorwf	??___flmul,w
  4791  0752  1903               	skipnz
  4792  0753  1834               	btfsc	___flmul@prod,0
  4793  0754  2F56               	goto	l2227
  4794  0755  2F58               	goto	l2231
  4795  0756                     l2227:	
  4796  0756  01B2               	clrf	___flmul@aexp
  4797  0757  0AB2               	incf	___flmul@aexp,f
  4798  0758                     l2231:	
  4799  0758  0832               	movf	___flmul@aexp,w
  4800  0759  1903               	btfsc	3,2
  4801  075A  2F8A               	goto	l2241
  4802  075B  3001               	movlw	1
  4803  075C  07B4               	addwf	___flmul@prod,f
  4804  075D  3000               	movlw	0
  4805  075E  1803               	skipnc
  4806  075F  3001               	movlw	1
  4807  0760  07B5               	addwf	___flmul@prod+1,f
  4808  0761  3000               	movlw	0
  4809  0762  1803               	skipnc
  4810  0763  3001               	movlw	1
  4811  0764  07B6               	addwf	___flmul@prod+2,f
  4812  0765  3000               	movlw	0
  4813  0766  1803               	skipnc
  4814  0767  3001               	movlw	1
  4815  0768  07B7               	addwf	___flmul@prod+3,f
  4816  0769  1C37               	btfss	___flmul@prod+3,0
  4817  076A  2F8A               	goto	l2241
  4818  076B  0834               	movf	___flmul@prod,w
  4819  076C  00A8               	movwf	??___flmul
  4820  076D  0835               	movf	___flmul@prod+1,w
  4821  076E  00A9               	movwf	??___flmul+1
  4822  076F  0836               	movf	___flmul@prod+2,w
  4823  0770  00AA               	movwf	??___flmul+2
  4824  0771  0837               	movf	___flmul@prod+3,w
  4825  0772  00AB               	movwf	??___flmul+3
  4826  0773  3001               	movlw	1
  4827  0774  00AC               	movwf	??___flmul+4
  4828  0775                     u2605:	
  4829  0775  0D2B               	rlf	??___flmul+3,w
  4830  0776  0CAB               	rrf	??___flmul+3,f
  4831  0777  0CAA               	rrf	??___flmul+2,f
  4832  0778  0CA9               	rrf	??___flmul+1,f
  4833  0779  0CA8               	rrf	??___flmul,f
  4834  077A  0BAC               	decfsz	??___flmul+4,f
  4835  077B  2F75               	goto	u2605
  4836  077C  082B               	movf	??___flmul+3,w
  4837  077D  00B7               	movwf	___flmul@prod+3
  4838  077E  082A               	movf	??___flmul+2,w
  4839  077F  00B6               	movwf	___flmul@prod+2
  4840  0780  0829               	movf	??___flmul+1,w
  4841  0781  00B5               	movwf	___flmul@prod+1
  4842  0782  0828               	movf	??___flmul,w
  4843  0783  00B4               	movwf	___flmul@prod
  4844  0784  3001               	movlw	1
  4845  0785  07B8               	addwf	___flmul@temp,f
  4846  0786  1803               	skipnc
  4847  0787  0AB9               	incf	___flmul@temp+1,f
  4848  0788  3000               	movlw	0
  4849  0789  07B9               	addwf	___flmul@temp+1,f
  4850  078A                     l2241:	
  4851  078A  0839               	movf	___flmul@temp+1,w
  4852  078B  3A80               	xorlw	128
  4853  078C  00FF               	movwf	127
  4854  078D  3080               	movlw	128
  4855  078E  027F               	subwf	127,w
  4856  078F  1D03               	skipz
  4857  0790  2F93               	goto	u2615
  4858  0791  30FF               	movlw	255
  4859  0792  0238               	subwf	___flmul@temp,w
  4860  0793                     u2615:	
  4861  0793  1C03               	skipc
  4862  0794  2FA0               	goto	l2245
  4863  0795  307F               	movlw	127
  4864  0796  1283               	bcf	3,5	;RP0=0, select bank0
  4865  0797  1303               	bcf	3,6	;RP1=0, select bank0
  4866  0798  00B7               	movwf	___flmul@prod+3
  4867  0799  3080               	movlw	128
  4868  079A  00B6               	movwf	___flmul@prod+2
  4869  079B  3000               	movlw	0
  4870  079C  00B5               	movwf	___flmul@prod+1
  4871  079D  3000               	movlw	0
  4872  079E  00B4               	movwf	___flmul@prod
  4873  079F  2FD0               	goto	l762
  4874  07A0                     l2245:	
  4875  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  4876  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  4877  07A2  0839               	movf	___flmul@temp+1,w
  4878  07A3  3A80               	xorlw	128
  4879  07A4  00FF               	movwf	127
  4880  07A5  3080               	movlw	128
  4881  07A6  027F               	subwf	127,w
  4882  07A7  1D03               	skipz
  4883  07A8  2FAB               	goto	u2625
  4884  07A9  3001               	movlw	1
  4885  07AA  0238               	subwf	___flmul@temp,w
  4886  07AB                     u2625:	
  4887  07AB  1803               	skipnc
  4888  07AC  2FB9               	goto	l2251
  4889  07AD  3000               	movlw	0
  4890  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  4891  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  4892  07B0  00B7               	movwf	___flmul@prod+3
  4893  07B1  3000               	movlw	0
  4894  07B2  00B6               	movwf	___flmul@prod+2
  4895  07B3  3000               	movlw	0
  4896  07B4  00B5               	movwf	___flmul@prod+1
  4897  07B5  3000               	movlw	0
  4898  07B6  00B4               	movwf	___flmul@prod
  4899  07B7  01AD               	clrf	___flmul@sign
  4900  07B8  2FD0               	goto	l762
  4901  07B9                     l2251:	
  4902  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  4903  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  4904  07BB  0838               	movf	___flmul@temp,w
  4905  07BC  00A8               	movwf	??___flmul
  4906  07BD  0828               	movf	??___flmul,w
  4907  07BE  00B3               	movwf	___flmul@bexp
  4908  07BF  30FF               	movlw	255
  4909  07C0  05B4               	andwf	___flmul@prod,f
  4910  07C1  30FF               	movlw	255
  4911  07C2  05B5               	andwf	___flmul@prod+1,f
  4912  07C3  307F               	movlw	127
  4913  07C4  05B6               	andwf	___flmul@prod+2,f
  4914  07C5  3000               	movlw	0
  4915  07C6  05B7               	andwf	___flmul@prod+3,f
  4916  07C7  1833               	btfsc	___flmul@bexp,0
  4917  07C8  17B6               	bsf	___flmul@prod+2,7
  4918  07C9  0833               	movf	___flmul@bexp,w
  4919  07CA  00A8               	movwf	??___flmul
  4920  07CB  1003               	clrc
  4921  07CC  0C28               	rrf	??___flmul,w
  4922  07CD  00A9               	movwf	??___flmul+1
  4923  07CE  0829               	movf	??___flmul+1,w
  4924  07CF  00B7               	movwf	___flmul@prod+3
  4925  07D0                     l762:	
  4926  07D0  082D               	movf	___flmul@sign,w
  4927  07D1  00A8               	movwf	??___flmul
  4928  07D2  0828               	movf	??___flmul,w
  4929  07D3  04B7               	iorwf	___flmul@prod+3,f
  4930  07D4  0837               	movf	___flmul@prod+3,w
  4931  07D5  00A3               	movwf	?___flmul+3
  4932  07D6  0836               	movf	___flmul@prod+2,w
  4933  07D7  00A2               	movwf	?___flmul+2
  4934  07D8  0835               	movf	___flmul@prod+1,w
  4935  07D9  00A1               	movwf	?___flmul+1
  4936  07DA  0834               	movf	___flmul@prod,w
  4937  07DB  00A0               	movwf	?___flmul
  4938  07DC  0008               	return
  4939  07DD                     __end_of___flmul:	
  4940                           
  4941                           	psect	text14
  4942  0910                     __ptext14:	
  4943 ;; *************** function __Umul8_16 *****************
  4944 ;; Defined at:
  4945 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  multiplier      1    wreg     unsigned char 
  4948 ;;  multiplicand    1    0[COMMON] unsigned char 
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;  multiplier      1    8[COMMON] unsigned char 
  4951 ;;  word_mpld       2    6[COMMON] unsigned int 
  4952 ;;  product         2    4[COMMON] unsigned int 
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  2    0[COMMON] unsigned int 
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4962 ;;      Params:         2       0       0       0       0
  4963 ;;      Locals:         5       0       0       0       0
  4964 ;;      Temps:          2       0       0       0       0
  4965 ;;      Totals:         9       0       0       0       0
  4966 ;;Total ram usage:        9 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; This function calls:
  4969 ;;		Nothing
  4970 ;; This function is called by:
  4971 ;;		___flmul
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           
  4976                           ;psect for function __Umul8_16
  4977  0910                     __Umul8_16:	
  4978                           
  4979                           ;incstack = 0
  4980                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4981                           ;__Umul8_16@multiplier stored from wreg
  4982  0910  00F8               	movwf	__Umul8_16@multiplier
  4983  0911  01F4               	clrf	__Umul8_16@product
  4984  0912  01F5               	clrf	__Umul8_16@product+1
  4985  0913  0870               	movf	__Umul8_16@multiplicand,w
  4986  0914  00F2               	movwf	??__Umul8_16
  4987  0915  01F3               	clrf	??__Umul8_16+1
  4988  0916  0872               	movf	??__Umul8_16,w
  4989  0917  00F6               	movwf	__Umul8_16@word_mpld
  4990  0918  0873               	movf	??__Umul8_16+1,w
  4991  0919  00F7               	movwf	__Umul8_16@word_mpld+1
  4992  091A                     l2013:	
  4993  091A  1C78               	btfss	__Umul8_16@multiplier,0
  4994  091B  2922               	goto	l807
  4995  091C  0876               	movf	__Umul8_16@word_mpld,w
  4996  091D  07F4               	addwf	__Umul8_16@product,f
  4997  091E  1803               	skipnc
  4998  091F  0AF5               	incf	__Umul8_16@product+1,f
  4999  0920  0877               	movf	__Umul8_16@word_mpld+1,w
  5000  0921  07F5               	addwf	__Umul8_16@product+1,f
  5001  0922                     l807:	
  5002  0922  3001               	movlw	1
  5003  0923                     u2085:	
  5004  0923  1003               	clrc
  5005  0924  0DF6               	rlf	__Umul8_16@word_mpld,f
  5006  0925  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5007  0926  3EFF               	addlw	-1
  5008  0927  1D03               	skipz
  5009  0928  2923               	goto	u2085
  5010  0929  1003               	clrc
  5011  092A  0CF8               	rrf	__Umul8_16@multiplier,f
  5012  092B  0878               	movf	__Umul8_16@multiplier,w
  5013  092C  1D03               	btfss	3,2
  5014  092D  291A               	goto	l2013
  5015  092E  0875               	movf	__Umul8_16@product+1,w
  5016  092F  00F1               	movwf	?__Umul8_16+1
  5017  0930  0874               	movf	__Umul8_16@product,w
  5018  0931  00F0               	movwf	?__Umul8_16
  5019  0932  0008               	return
  5020  0933                     __end_of__Umul8_16:	
  5021                           
  5022                           	psect	text15
  5023  0C21                     __ptext15:	
  5024 ;; *************** function ___flge *****************
  5025 ;; Defined at:
  5026 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  ff1             4   26[BANK0 ] unsigned int 
  5029 ;;  ff2             4   30[BANK0 ] unsigned int 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;		None               void
  5034 ;; Registers used:
  5035 ;;		wreg, status,2, status,0
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5041 ;;      Params:         0       8       0       0       0
  5042 ;;      Locals:         0       0       0       0       0
  5043 ;;      Temps:          0       4       0       0       0
  5044 ;;      Totals:         0      12       0       0       0
  5045 ;;Total ram usage:       12 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; This function calls:
  5048 ;;		Nothing
  5049 ;; This function is called by:
  5050 ;;		_VerificarInversionGiro
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           
  5055                           ;psect for function ___flge
  5056  0C21                     ___flge:	
  5057                           
  5058                           ;incstack = 0
  5059                           ; Regs used in ___flge: [wreg+status,2+status,0]
  5060  0C21  3000               	movlw	0
  5061  0C22  1283               	bcf	3,5	;RP0=0, select bank0
  5062  0C23  1303               	bcf	3,6	;RP1=0, select bank0
  5063  0C24  053A               	andwf	___flge@ff1,w
  5064  0C25  00C2               	movwf	??___flge
  5065  0C26  3000               	movlw	0
  5066  0C27  053B               	andwf	___flge@ff1+1,w
  5067  0C28  00C3               	movwf	??___flge+1
  5068  0C29  3080               	movlw	128
  5069  0C2A  053C               	andwf	___flge@ff1+2,w
  5070  0C2B  00C4               	movwf	??___flge+2
  5071  0C2C  307F               	movlw	127
  5072  0C2D  053D               	andwf	___flge@ff1+3,w
  5073  0C2E  00C5               	movwf	??___flge+3
  5074  0C2F  0845               	movf	??___flge+3,w
  5075  0C30  0444               	iorwf	??___flge+2,w
  5076  0C31  0443               	iorwf	??___flge+1,w
  5077  0C32  0442               	iorwf	??___flge,w
  5078  0C33  1D03               	skipz
  5079  0C34  2C3D               	goto	l535
  5080  0C35  3000               	movlw	0
  5081  0C36  00BD               	movwf	___flge@ff1+3
  5082  0C37  3000               	movlw	0
  5083  0C38  00BC               	movwf	___flge@ff1+2
  5084  0C39  3000               	movlw	0
  5085  0C3A  00BB               	movwf	___flge@ff1+1
  5086  0C3B  3000               	movlw	0
  5087  0C3C  00BA               	movwf	___flge@ff1
  5088  0C3D                     l535:	
  5089  0C3D  3000               	movlw	0
  5090  0C3E  053E               	andwf	___flge@ff2,w
  5091  0C3F  00C2               	movwf	??___flge
  5092  0C40  3000               	movlw	0
  5093  0C41  053F               	andwf	___flge@ff2+1,w
  5094  0C42  00C3               	movwf	??___flge+1
  5095  0C43  3080               	movlw	128
  5096  0C44  0540               	andwf	___flge@ff2+2,w
  5097  0C45  00C4               	movwf	??___flge+2
  5098  0C46  307F               	movlw	127
  5099  0C47  0541               	andwf	___flge@ff2+3,w
  5100  0C48  00C5               	movwf	??___flge+3
  5101  0C49  0845               	movf	??___flge+3,w
  5102  0C4A  0444               	iorwf	??___flge+2,w
  5103  0C4B  0443               	iorwf	??___flge+1,w
  5104  0C4C  0442               	iorwf	??___flge,w
  5105  0C4D  1D03               	skipz
  5106  0C4E  2C57               	goto	l2109
  5107  0C4F  3000               	movlw	0
  5108  0C50  00C1               	movwf	___flge@ff2+3
  5109  0C51  3000               	movlw	0
  5110  0C52  00C0               	movwf	___flge@ff2+2
  5111  0C53  3000               	movlw	0
  5112  0C54  00BF               	movwf	___flge@ff2+1
  5113  0C55  3000               	movlw	0
  5114  0C56  00BE               	movwf	___flge@ff2
  5115  0C57                     l2109:	
  5116  0C57  1FBD               	btfss	___flge@ff1+3,7
  5117  0C58  2C7D               	goto	l2113
  5118  0C59  3000               	movlw	0
  5119  0C5A  00C2               	movwf	??___flge
  5120  0C5B  3000               	movlw	0
  5121  0C5C  00C3               	movwf	??___flge+1
  5122  0C5D  3000               	movlw	0
  5123  0C5E  00C4               	movwf	??___flge+2
  5124  0C5F  3080               	movlw	128
  5125  0C60  00C5               	movwf	??___flge+3
  5126  0C61  083A               	movf	___flge@ff1,w
  5127  0C62  02C2               	subwf	??___flge,f
  5128  0C63  083B               	movf	___flge@ff1+1,w
  5129  0C64  1C03               	skipc
  5130  0C65  0F3B               	incfsz	___flge@ff1+1,w
  5131  0C66  2C68               	goto	u2231
  5132  0C67  2C69               	goto	u2232
  5133  0C68                     u2231:	
  5134  0C68  02C3               	subwf	??___flge+1,f
  5135  0C69                     u2232:	
  5136  0C69  083C               	movf	___flge@ff1+2,w
  5137  0C6A  1C03               	skipc
  5138  0C6B  0F3C               	incfsz	___flge@ff1+2,w
  5139  0C6C  2C6E               	goto	u2233
  5140  0C6D  2C6F               	goto	u2234
  5141  0C6E                     u2233:	
  5142  0C6E  02C4               	subwf	??___flge+2,f
  5143  0C6F                     u2234:	
  5144  0C6F  083D               	movf	___flge@ff1+3,w
  5145  0C70  1C03               	skipc
  5146  0C71  0F3D               	incfsz	___flge@ff1+3,w
  5147  0C72  2C74               	goto	u2235
  5148  0C73  2C75               	goto	u2236
  5149  0C74                     u2235:	
  5150  0C74  02C5               	subwf	??___flge+3,f
  5151  0C75                     u2236:	
  5152  0C75  0845               	movf	??___flge+3,w
  5153  0C76  00BD               	movwf	___flge@ff1+3
  5154  0C77  0844               	movf	??___flge+2,w
  5155  0C78  00BC               	movwf	___flge@ff1+2
  5156  0C79  0843               	movf	??___flge+1,w
  5157  0C7A  00BB               	movwf	___flge@ff1+1
  5158  0C7B  0842               	movf	??___flge,w
  5159  0C7C  00BA               	movwf	___flge@ff1
  5160  0C7D                     l2113:	
  5161  0C7D  1FC1               	btfss	___flge@ff2+3,7
  5162  0C7E  2CA3               	goto	l538
  5163  0C7F  3000               	movlw	0
  5164  0C80  00C2               	movwf	??___flge
  5165  0C81  3000               	movlw	0
  5166  0C82  00C3               	movwf	??___flge+1
  5167  0C83  3000               	movlw	0
  5168  0C84  00C4               	movwf	??___flge+2
  5169  0C85  3080               	movlw	128
  5170  0C86  00C5               	movwf	??___flge+3
  5171  0C87  083E               	movf	___flge@ff2,w
  5172  0C88  02C2               	subwf	??___flge,f
  5173  0C89  083F               	movf	___flge@ff2+1,w
  5174  0C8A  1C03               	skipc
  5175  0C8B  0F3F               	incfsz	___flge@ff2+1,w
  5176  0C8C  2C8E               	goto	u2251
  5177  0C8D  2C8F               	goto	u2252
  5178  0C8E                     u2251:	
  5179  0C8E  02C3               	subwf	??___flge+1,f
  5180  0C8F                     u2252:	
  5181  0C8F  0840               	movf	___flge@ff2+2,w
  5182  0C90  1C03               	skipc
  5183  0C91  0F40               	incfsz	___flge@ff2+2,w
  5184  0C92  2C94               	goto	u2253
  5185  0C93  2C95               	goto	u2254
  5186  0C94                     u2253:	
  5187  0C94  02C4               	subwf	??___flge+2,f
  5188  0C95                     u2254:	
  5189  0C95  0841               	movf	___flge@ff2+3,w
  5190  0C96  1C03               	skipc
  5191  0C97  0F41               	incfsz	___flge@ff2+3,w
  5192  0C98  2C9A               	goto	u2255
  5193  0C99  2C9B               	goto	u2256
  5194  0C9A                     u2255:	
  5195  0C9A  02C5               	subwf	??___flge+3,f
  5196  0C9B                     u2256:	
  5197  0C9B  0845               	movf	??___flge+3,w
  5198  0C9C  00C1               	movwf	___flge@ff2+3
  5199  0C9D  0844               	movf	??___flge+2,w
  5200  0C9E  00C0               	movwf	___flge@ff2+2
  5201  0C9F  0843               	movf	??___flge+1,w
  5202  0CA0  00BF               	movwf	___flge@ff2+1
  5203  0CA1  0842               	movf	??___flge,w
  5204  0CA2  00BE               	movwf	___flge@ff2
  5205  0CA3                     l538:	
  5206  0CA3  3080               	movlw	128
  5207  0CA4  06BD               	xorwf	___flge@ff1+3,f
  5208  0CA5  3080               	movlw	128
  5209  0CA6  06C1               	xorwf	___flge@ff2+3,f
  5210  0CA7  0841               	movf	___flge@ff2+3,w
  5211  0CA8  023D               	subwf	___flge@ff1+3,w
  5212  0CA9  1D03               	skipz
  5213  0CAA  0008               	return
  5214  0CAB  0840               	movf	___flge@ff2+2,w
  5215  0CAC  023C               	subwf	___flge@ff1+2,w
  5216  0CAD  1D03               	skipz
  5217  0CAE  0008               	return
  5218  0CAF  083F               	movf	___flge@ff2+1,w
  5219  0CB0  023B               	subwf	___flge@ff1+1,w
  5220  0CB1  1D03               	skipz
  5221  0CB2  0008               	return
  5222  0CB3  083E               	movf	___flge@ff2,w
  5223  0CB4  023A               	subwf	___flge@ff1,w
  5224  0CB5  0008               	return
  5225  0CB6                     __end_of___flge:	
  5226                           
  5227                           	psect	text16
  5228  0889                     __ptext16:	
  5229 ;; *************** function _Lcd_Write_Integer *****************
  5230 ;; Defined at:
  5231 ;;		line 98 in file "Lcd.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  a               2   37[BANK0 ] int 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  Data           10   40[BANK0 ] unsigned char [10]
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  1    wreg      void 
  5238 ;; Registers used:
  5239 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5245 ;;      Params:         0       2       0       0       0
  5246 ;;      Locals:         0      10       0       0       0
  5247 ;;      Temps:          0       1       0       0       0
  5248 ;;      Totals:         0      13       0       0       0
  5249 ;;Total ram usage:       13 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; Hardware stack levels required when called:    3
  5252 ;; This function calls:
  5253 ;;		_Lcd_Write_String
  5254 ;;		_sprintf
  5255 ;; This function is called by:
  5256 ;;		_configurarAntiHorario
  5257 ;;		_configurarHorario
  5258 ;;		_Encoder
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           
  5263                           ;psect for function _Lcd_Write_Integer
  5264  0889                     _Lcd_Write_Integer:	
  5265                           
  5266                           ;Lcd.c: 99:     char Data[10];;Lcd.c: 100:     sprintf(Data, "%d", a);
  5267                           
  5268                           ;incstack = 0
  5269                           ; Regs used in _Lcd_Write_Integer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5270  0889  3067               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  5271  088A  1283               	bcf	3,5	;RP0=0, select bank0
  5272  088B  1303               	bcf	3,6	;RP1=0, select bank0
  5273  088C  00C7               	movwf	??_Lcd_Write_Integer
  5274  088D  0847               	movf	??_Lcd_Write_Integer,w
  5275  088E  00A0               	movwf	sprintf@f
  5276  088F  0846               	movf	Lcd_Write_Integer@a+1,w
  5277  0890  00A2               	movwf	?_sprintf+2
  5278  0891  0845               	movf	Lcd_Write_Integer@a,w
  5279  0892  00A1               	movwf	?_sprintf+1
  5280  0893  3048               	movlw	(low (Lcd_Write_Integer@Data| 0))& (0+255)
  5281  0894  120A  158A  2559  120A  158A  	fcall	_sprintf
  5282                           
  5283                           ;Lcd.c: 101:     Lcd_Write_String(Data);
  5284  0899  3048               	movlw	(low (Lcd_Write_Integer@Data| 0))& (0+255)
  5285  089A  00F5               	movwf	Lcd_Write_String@a
  5286  089B  3000               	movlw	0
  5287  089C  00F6               	movwf	Lcd_Write_String@a+1
  5288  089D  120A  158A  21DA   	fcall	_Lcd_Write_String
  5289  08A0  0008               	return
  5290  08A1                     __end_of_Lcd_Write_Integer:	
  5291                           
  5292                           	psect	text17
  5293  0D59                     __ptext17:	
  5294 ;; *************** function _sprintf *****************
  5295 ;; Defined at:
  5296 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  sp              1    wreg     PTR unsigned char 
  5299 ;;		 -> Lcd_Write_Integer@Data(10), 
  5300 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  5301 ;;		 -> STR_1(3), 
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  5304 ;;		 -> Lcd_Write_Integer@Data(10), 
  5305 ;;  tmpval          4    0        struct .
  5306 ;;  val             2    9[BANK0 ] unsigned int 
  5307 ;;  cp              2    0        PTR const unsigned char 
  5308 ;;  len             2    0        unsigned int 
  5309 ;;  c               1   12[BANK0 ] unsigned char 
  5310 ;;  prec            1    8[BANK0 ] char 
  5311 ;;  flag            1    7[BANK0 ] unsigned char 
  5312 ;;  ap              1    6[BANK0 ] PTR void [1]
  5313 ;;		 -> ?_sprintf(2), 
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  2    0[BANK0 ] int 
  5316 ;; Registers used:
  5317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5323 ;;      Params:         0       3       0       0       0
  5324 ;;      Locals:         0       7       0       0       0
  5325 ;;      Temps:          0       3       0       0       0
  5326 ;;      Totals:         0      13       0       0       0
  5327 ;;Total ram usage:       13 bytes
  5328 ;; Hardware stack levels used:    1
  5329 ;; Hardware stack levels required when called:    1
  5330 ;; This function calls:
  5331 ;;		___lwdiv
  5332 ;;		___lwmod
  5333 ;; This function is called by:
  5334 ;;		_Lcd_Write_Integer
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           
  5339                           ;psect for function _sprintf
  5340  0D59                     _sprintf:	
  5341                           
  5342                           ;incstack = 0
  5343                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5344                           ;sprintf@sp stored from wreg
  5345  0D59  1283               	bcf	3,5	;RP0=0, select bank0
  5346  0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  5347  0D5B  00AB               	movwf	sprintf@sp
  5348                           
  5349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  5350  0D5C  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  5351  0D5D  00A3               	movwf	??_sprintf
  5352  0D5E  0823               	movf	??_sprintf,w
  5353  0D5F  00A6               	movwf	sprintf@ap
  5354  0D60                     l2093:	
  5355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  5356                           
  5357                           
  5358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  5359  0D60  3001               	movlw	1
  5360  0D61  07A0               	addwf	sprintf@f,f
  5361  0D62  30FF               	movlw	-1
  5362  0D63  0720               	addwf	sprintf@f,w
  5363  0D64  0084               	movwf	4
  5364  0D65  120A  158A  200A  120A  158A  	fcall	stringdir
  5365  0D6A  00A3               	movwf	??_sprintf
  5366  0D6B  0823               	movf	??_sprintf,w
  5367  0D6C  00AC               	movwf	sprintf@c
  5368  0D6D  082C               	movf	sprintf@c,w
  5369  0D6E  1903               	btfsc	3,2
  5370  0D6F  2E2C               	goto	l2095
  5371                           
  5372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  5373  0D70  3025               	movlw	37
  5374  0D71  062C               	xorwf	sprintf@c,w
  5375  0D72  1903               	btfsc	3,2
  5376  0D73  2D80               	goto	l2049
  5377                           
  5378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  5379  0D74  082C               	movf	sprintf@c,w
  5380  0D75  00A3               	movwf	??_sprintf
  5381  0D76  082B               	movf	sprintf@sp,w
  5382  0D77  0084               	movwf	4
  5383  0D78  0823               	movf	??_sprintf,w
  5384  0D79  1383               	bcf	3,7	;select IRP bank0
  5385  0D7A  0080               	movwf	0
  5386  0D7B  3001               	movlw	1
  5387  0D7C  00A3               	movwf	??_sprintf
  5388  0D7D  0823               	movf	??_sprintf,w
  5389  0D7E  07AB               	addwf	sprintf@sp,f
  5390                           
  5391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  5392  0D7F  2D60               	goto	l2093
  5393  0D80                     l2049:	
  5394                           
  5395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  5396  0D80  01A7               	clrf	sprintf@flag
  5397                           
  5398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  5399  0D81  3001               	movlw	1
  5400  0D82  07A0               	addwf	sprintf@f,f
  5401  0D83  30FF               	movlw	-1
  5402  0D84  0720               	addwf	sprintf@f,w
  5403  0D85  0084               	movwf	4
  5404  0D86  120A  158A  200A  120A  158A  	fcall	stringdir
  5405  0D8B  00AC               	movwf	sprintf@c
  5406  0D8C  00A3               	movwf	??_sprintf
  5407  0D8D  01A4               	clrf	??_sprintf+1
  5408                           
  5409                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5410                           ; Switch size 1, requested type "simple"
  5411                           ; Number of cases is 1, Range of values is 0 to 0
  5412                           ; switch strategies available:
  5413                           ; Name         Instructions Cycles
  5414                           ; simple_byte            4     3 (average)
  5415                           ; direct_byte           11     8 (fixed)
  5416                           ; jumptable            260     6 (fixed)
  5417                           ;	Chosen strategy is simple_byte
  5418  0D8E  0824               	movf	??_sprintf+1,w
  5419  0D8F  3A00               	xorlw	0	; case 0
  5420  0D90  1903               	skipnz
  5421  0D91  2D93               	goto	l2985
  5422  0D92  2D60               	goto	l2093
  5423  0D93                     l2985:	
  5424                           
  5425                           ; Switch size 1, requested type "simple"
  5426                           ; Number of cases is 3, Range of values is 0 to 105
  5427                           ; switch strategies available:
  5428                           ; Name         Instructions Cycles
  5429                           ; simple_byte           10     6 (average)
  5430                           ; jumptable            260     6 (fixed)
  5431                           ;	Chosen strategy is simple_byte
  5432  0D93  0823               	movf	??_sprintf,w
  5433  0D94  3A00               	xorlw	0	; case 0
  5434  0D95  1903               	skipnz
  5435  0D96  2E2C               	goto	l2095
  5436  0D97  3A64               	xorlw	100	; case 100
  5437  0D98  1903               	skipnz
  5438  0D99  2D9E               	goto	l2055
  5439  0D9A  3A0D               	xorlw	13	; case 105
  5440  0D9B  1903               	skipnz
  5441  0D9C  2D9E               	goto	l2055
  5442  0D9D  2D60               	goto	l2093
  5443  0D9E                     l2055:	
  5444                           
  5445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5446  0D9E  0826               	movf	sprintf@ap,w
  5447  0D9F  0084               	movwf	4
  5448  0DA0  1383               	bcf	3,7	;select IRP bank0
  5449  0DA1  0800               	movf	0,w
  5450  0DA2  00A9               	movwf	sprintf@val
  5451  0DA3  0A84               	incf	4,f
  5452  0DA4  0800               	movf	0,w
  5453  0DA5  00AA               	movwf	sprintf@val+1
  5454  0DA6  3002               	movlw	2
  5455  0DA7  00A3               	movwf	??_sprintf
  5456  0DA8  0823               	movf	??_sprintf,w
  5457  0DA9  07A6               	addwf	sprintf@ap,f
  5458                           
  5459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  5460  0DAA  1FAA               	btfss	sprintf@val+1,7
  5461  0DAB  2DB5               	goto	l2065
  5462                           
  5463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  5464  0DAC  3003               	movlw	3
  5465  0DAD  00A3               	movwf	??_sprintf
  5466  0DAE  0823               	movf	??_sprintf,w
  5467  0DAF  04A7               	iorwf	sprintf@flag,f
  5468                           
  5469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  5470  0DB0  09A9               	comf	sprintf@val,f
  5471  0DB1  09AA               	comf	sprintf@val+1,f
  5472  0DB2  0AA9               	incf	sprintf@val,f
  5473  0DB3  1903               	skipnz
  5474  0DB4  0AAA               	incf	sprintf@val+1,f
  5475  0DB5                     l2065:	
  5476                           
  5477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5478  0DB5  01AC               	clrf	sprintf@c
  5479  0DB6  0AAC               	incf	sprintf@c,f
  5480  0DB7                     l2071:	
  5481                           
  5482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  5483  0DB7  082C               	movf	sprintf@c,w
  5484  0DB8  00A3               	movwf	??_sprintf
  5485  0DB9  0723               	addwf	??_sprintf,w
  5486  0DBA  3E23               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5487  0DBB  0084               	movwf	4
  5488  0DBC  120A  158A  200A  120A  158A  	fcall	stringdir
  5489  0DC1  00A4               	movwf	??_sprintf+1
  5490  0DC2  120A  158A  200A  120A  158A  	fcall	stringdir
  5491  0DC7  00A5               	movwf	??_sprintf+2
  5492  0DC8  0825               	movf	??_sprintf+2,w
  5493  0DC9  022A               	subwf	sprintf@val+1,w
  5494  0DCA  1D03               	skipz
  5495  0DCB  2DCE               	goto	u2155
  5496  0DCC  0824               	movf	??_sprintf+1,w
  5497  0DCD  0229               	subwf	sprintf@val,w
  5498  0DCE                     u2155:	
  5499  0DCE  1C03               	btfss	3,0
  5500  0DCF  2DD8               	goto	l2077
  5501  0DD0  3001               	movlw	1
  5502  0DD1  00A3               	movwf	??_sprintf
  5503  0DD2  0823               	movf	??_sprintf,w
  5504  0DD3  07AC               	addwf	sprintf@c,f
  5505  0DD4  3005               	movlw	5
  5506  0DD5  062C               	xorwf	sprintf@c,w
  5507  0DD6  1D03               	btfss	3,2
  5508  0DD7  2DB7               	goto	l2071
  5509  0DD8                     l2077:	
  5510                           
  5511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  5512  0DD8  0827               	movf	sprintf@flag,w
  5513  0DD9  3903               	andlw	3
  5514  0DDA  1903               	btfsc	3,2
  5515  0DDB  2DE7               	goto	l2083
  5516                           
  5517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  5518  0DDC  302D               	movlw	45
  5519  0DDD  00A3               	movwf	??_sprintf
  5520  0DDE  082B               	movf	sprintf@sp,w
  5521  0DDF  0084               	movwf	4
  5522  0DE0  0823               	movf	??_sprintf,w
  5523  0DE1  1383               	bcf	3,7	;select IRP bank0
  5524  0DE2  0080               	movwf	0
  5525  0DE3  3001               	movlw	1
  5526  0DE4  00A3               	movwf	??_sprintf
  5527  0DE5  0823               	movf	??_sprintf,w
  5528  0DE6  07AB               	addwf	sprintf@sp,f
  5529  0DE7                     l2083:	
  5530                           
  5531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  5532  0DE7  082C               	movf	sprintf@c,w
  5533  0DE8  00A3               	movwf	??_sprintf
  5534  0DE9  0823               	movf	??_sprintf,w
  5535  0DEA  00A8               	movwf	sprintf@prec
  5536  0DEB                     l2091:	
  5537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  5538                           
  5539                           
  5540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  5541  0DEB  30FF               	movlw	255
  5542  0DEC  00A3               	movwf	??_sprintf
  5543  0DED  0823               	movf	??_sprintf,w
  5544  0DEE  07A8               	addwf	sprintf@prec,f
  5545  0DEF  0A28               	incf	sprintf@prec,w
  5546  0DF0  1903               	btfsc	3,2
  5547  0DF1  2D60               	goto	l2093
  5548                           
  5549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  5550  0DF2  300A               	movlw	10
  5551  0DF3  00F8               	movwf	___lwmod@divisor
  5552  0DF4  3000               	movlw	0
  5553  0DF5  00F9               	movwf	___lwmod@divisor+1
  5554  0DF6  0828               	movf	sprintf@prec,w
  5555  0DF7  00A3               	movwf	??_sprintf
  5556  0DF8  0723               	addwf	??_sprintf,w
  5557  0DF9  3E23               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5558  0DFA  0084               	movwf	4
  5559  0DFB  120A  158A  200A  120A  158A  	fcall	stringdir
  5560  0E00  00F0               	movwf	___lwdiv@divisor
  5561  0E01  120A  158A  200A  120A  158A  	fcall	stringdir
  5562  0E06  00F1               	movwf	___lwdiv@divisor+1
  5563  0E07  082A               	movf	sprintf@val+1,w
  5564  0E08  00F3               	movwf	___lwdiv@dividend+1
  5565  0E09  0829               	movf	sprintf@val,w
  5566  0E0A  00F2               	movwf	___lwdiv@dividend
  5567  0E0B  120A  158A  219E  120A  158A  	fcall	___lwdiv
  5568  0E10  0871               	movf	?___lwdiv+1,w
  5569  0E11  00FB               	movwf	___lwmod@dividend+1
  5570  0E12  0870               	movf	?___lwdiv,w
  5571  0E13  00FA               	movwf	___lwmod@dividend
  5572  0E14  120A  158A  2133  120A  158A  	fcall	___lwmod
  5573  0E19  0878               	movf	?___lwmod,w
  5574  0E1A  3E30               	addlw	48
  5575  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  5576  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  5577  0E1D  00A4               	movwf	??_sprintf+1
  5578  0E1E  0824               	movf	??_sprintf+1,w
  5579  0E1F  00AC               	movwf	sprintf@c
  5580                           
  5581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  5582  0E20  082C               	movf	sprintf@c,w
  5583  0E21  00A3               	movwf	??_sprintf
  5584  0E22  082B               	movf	sprintf@sp,w
  5585  0E23  0084               	movwf	4
  5586  0E24  0823               	movf	??_sprintf,w
  5587  0E25  1383               	bcf	3,7	;select IRP bank0
  5588  0E26  0080               	movwf	0
  5589  0E27  3001               	movlw	1
  5590  0E28  00A3               	movwf	??_sprintf
  5591  0E29  0823               	movf	??_sprintf,w
  5592  0E2A  07AB               	addwf	sprintf@sp,f
  5593  0E2B  2DEB               	goto	l2091
  5594  0E2C                     l2095:	
  5595                           
  5596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  5597  0E2C  082B               	movf	sprintf@sp,w
  5598  0E2D  0084               	movwf	4
  5599  0E2E  1383               	bcf	3,7	;select IRP bank0
  5600  0E2F  0180               	clrf	0
  5601  0E30  0008               	return
  5602  0E31                     __end_of_sprintf:	
  5603                           
  5604                           	psect	text18
  5605  0933                     __ptext18:	
  5606 ;; *************** function ___lwmod *****************
  5607 ;; Defined at:
  5608 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  divisor         2    8[COMMON] unsigned int 
  5611 ;;  dividend        2   10[COMMON] unsigned int 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  counter         1   13[COMMON] unsigned char 
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  2    8[COMMON] unsigned int 
  5616 ;; Registers used:
  5617 ;;		wreg, status,2, status,0
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5623 ;;      Params:         4       0       0       0       0
  5624 ;;      Locals:         1       0       0       0       0
  5625 ;;      Temps:          1       0       0       0       0
  5626 ;;      Totals:         6       0       0       0       0
  5627 ;;Total ram usage:        6 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; This function calls:
  5630 ;;		Nothing
  5631 ;; This function is called by:
  5632 ;;		_sprintf
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           
  5637                           ;psect for function ___lwmod
  5638  0933                     ___lwmod:	
  5639                           
  5640                           ;incstack = 0
  5641                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5642  0933  0878               	movf	___lwmod@divisor,w
  5643  0934  0479               	iorwf	___lwmod@divisor+1,w
  5644  0935  1903               	btfsc	3,2
  5645  0936  2960               	goto	l2005
  5646  0937  01FD               	clrf	___lwmod@counter
  5647  0938  0AFD               	incf	___lwmod@counter,f
  5648  0939                     l1995:	
  5649  0939  1BF9               	btfsc	___lwmod@divisor+1,7
  5650  093A  2947               	goto	l1997
  5651  093B  3001               	movlw	1
  5652  093C                     u2025:	
  5653  093C  1003               	clrc
  5654  093D  0DF8               	rlf	___lwmod@divisor,f
  5655  093E  0DF9               	rlf	___lwmod@divisor+1,f
  5656  093F  3EFF               	addlw	-1
  5657  0940  1D03               	skipz
  5658  0941  293C               	goto	u2025
  5659  0942  3001               	movlw	1
  5660  0943  00FC               	movwf	??___lwmod
  5661  0944  087C               	movf	??___lwmod,w
  5662  0945  07FD               	addwf	___lwmod@counter,f
  5663  0946  2939               	goto	l1995
  5664  0947                     l1997:	
  5665  0947  0879               	movf	___lwmod@divisor+1,w
  5666  0948  027B               	subwf	___lwmod@dividend+1,w
  5667  0949  1D03               	skipz
  5668  094A  294D               	goto	u2045
  5669  094B  0878               	movf	___lwmod@divisor,w
  5670  094C  027A               	subwf	___lwmod@dividend,w
  5671  094D                     u2045:	
  5672  094D  1C03               	skipc
  5673  094E  2955               	goto	l2001
  5674  094F  0878               	movf	___lwmod@divisor,w
  5675  0950  02FA               	subwf	___lwmod@dividend,f
  5676  0951  0879               	movf	___lwmod@divisor+1,w
  5677  0952  1C03               	skipc
  5678  0953  03FB               	decf	___lwmod@dividend+1,f
  5679  0954  02FB               	subwf	___lwmod@dividend+1,f
  5680  0955                     l2001:	
  5681  0955  3001               	movlw	1
  5682  0956                     u2055:	
  5683  0956  1003               	clrc
  5684  0957  0CF9               	rrf	___lwmod@divisor+1,f
  5685  0958  0CF8               	rrf	___lwmod@divisor,f
  5686  0959  3EFF               	addlw	-1
  5687  095A  1D03               	skipz
  5688  095B  2956               	goto	u2055
  5689  095C  3001               	movlw	1
  5690  095D  02FD               	subwf	___lwmod@counter,f
  5691  095E  1D03               	btfss	3,2
  5692  095F  2947               	goto	l1997
  5693  0960                     l2005:	
  5694  0960  087B               	movf	___lwmod@dividend+1,w
  5695  0961  00F9               	movwf	?___lwmod+1
  5696  0962  087A               	movf	___lwmod@dividend,w
  5697  0963  00F8               	movwf	?___lwmod
  5698  0964  0008               	return
  5699  0965                     __end_of___lwmod:	
  5700                           
  5701                           	psect	text19
  5702  099E                     __ptext19:	
  5703 ;; *************** function ___lwdiv *****************
  5704 ;; Defined at:
  5705 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;  divisor         2    0[COMMON] unsigned int 
  5708 ;;  dividend        2    2[COMMON] unsigned int 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  quotient        2    5[COMMON] unsigned int 
  5711 ;;  counter         1    7[COMMON] unsigned char 
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  2    0[COMMON] unsigned int 
  5714 ;; Registers used:
  5715 ;;		wreg, status,2, status,0
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5721 ;;      Params:         4       0       0       0       0
  5722 ;;      Locals:         3       0       0       0       0
  5723 ;;      Temps:          1       0       0       0       0
  5724 ;;      Totals:         8       0       0       0       0
  5725 ;;Total ram usage:        8 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_sprintf
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           
  5735                           ;psect for function ___lwdiv
  5736  099E                     ___lwdiv:	
  5737                           
  5738                           ;incstack = 0
  5739                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5740  099E  01F5               	clrf	___lwdiv@quotient
  5741  099F  01F6               	clrf	___lwdiv@quotient+1
  5742  09A0  0870               	movf	___lwdiv@divisor,w
  5743  09A1  0471               	iorwf	___lwdiv@divisor+1,w
  5744  09A2  1903               	btfsc	3,2
  5745  09A3  29D5               	goto	l1983
  5746  09A4  01F7               	clrf	___lwdiv@counter
  5747  09A5  0AF7               	incf	___lwdiv@counter,f
  5748  09A6                     l1971:	
  5749  09A6  1BF1               	btfsc	___lwdiv@divisor+1,7
  5750  09A7  29B4               	goto	l1973
  5751  09A8  3001               	movlw	1
  5752  09A9                     u1955:	
  5753  09A9  1003               	clrc
  5754  09AA  0DF0               	rlf	___lwdiv@divisor,f
  5755  09AB  0DF1               	rlf	___lwdiv@divisor+1,f
  5756  09AC  3EFF               	addlw	-1
  5757  09AD  1D03               	skipz
  5758  09AE  29A9               	goto	u1955
  5759  09AF  3001               	movlw	1
  5760  09B0  00F4               	movwf	??___lwdiv
  5761  09B1  0874               	movf	??___lwdiv,w
  5762  09B2  07F7               	addwf	___lwdiv@counter,f
  5763  09B3  29A6               	goto	l1971
  5764  09B4                     l1973:	
  5765  09B4  3001               	movlw	1
  5766  09B5                     u1975:	
  5767  09B5  1003               	clrc
  5768  09B6  0DF5               	rlf	___lwdiv@quotient,f
  5769  09B7  0DF6               	rlf	___lwdiv@quotient+1,f
  5770  09B8  3EFF               	addlw	-1
  5771  09B9  1D03               	skipz
  5772  09BA  29B5               	goto	u1975
  5773  09BB  0871               	movf	___lwdiv@divisor+1,w
  5774  09BC  0273               	subwf	___lwdiv@dividend+1,w
  5775  09BD  1D03               	skipz
  5776  09BE  29C1               	goto	u1985
  5777  09BF  0870               	movf	___lwdiv@divisor,w
  5778  09C0  0272               	subwf	___lwdiv@dividend,w
  5779  09C1                     u1985:	
  5780  09C1  1C03               	skipc
  5781  09C2  29CA               	goto	l1979
  5782  09C3  0870               	movf	___lwdiv@divisor,w
  5783  09C4  02F2               	subwf	___lwdiv@dividend,f
  5784  09C5  0871               	movf	___lwdiv@divisor+1,w
  5785  09C6  1C03               	skipc
  5786  09C7  03F3               	decf	___lwdiv@dividend+1,f
  5787  09C8  02F3               	subwf	___lwdiv@dividend+1,f
  5788  09C9  1475               	bsf	___lwdiv@quotient,0
  5789  09CA                     l1979:	
  5790  09CA  3001               	movlw	1
  5791  09CB                     u1995:	
  5792  09CB  1003               	clrc
  5793  09CC  0CF1               	rrf	___lwdiv@divisor+1,f
  5794  09CD  0CF0               	rrf	___lwdiv@divisor,f
  5795  09CE  3EFF               	addlw	-1
  5796  09CF  1D03               	skipz
  5797  09D0  29CB               	goto	u1995
  5798  09D1  3001               	movlw	1
  5799  09D2  02F7               	subwf	___lwdiv@counter,f
  5800  09D3  1D03               	btfss	3,2
  5801  09D4  29B4               	goto	l1973
  5802  09D5                     l1983:	
  5803  09D5  0876               	movf	___lwdiv@quotient+1,w
  5804  09D6  00F1               	movwf	?___lwdiv+1
  5805  09D7  0875               	movf	___lwdiv@quotient,w
  5806  09D8  00F0               	movwf	?___lwdiv
  5807  09D9  0008               	return
  5808  09DA                     __end_of___lwdiv:	
  5809                           
  5810                           	psect	text20
  5811  09DA                     __ptext20:	
  5812 ;; *************** function _Lcd_Write_String *****************
  5813 ;; Defined at:
  5814 ;;		line 92 in file "Lcd.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;  a               2    5[COMMON] PTR unsigned char 
  5817 ;;		 -> STR_15(9), STR_14(11), STR_13(9), STR_12(14), 
  5818 ;;		 -> STR_11(4), STR_10(5), STR_9(11), STR_8(5), 
  5819 ;;		 -> STR_7(11), STR_6(4), STR_5(5), STR_4(8), 
  5820 ;;		 -> STR_3(5), STR_2(8), Lcd_Write_Integer@Data(10), 
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  i               2   10[COMMON] int 
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  1    wreg      void 
  5825 ;; Registers used:
  5826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5832 ;;      Params:         2       0       0       0       0
  5833 ;;      Locals:         2       0       0       0       0
  5834 ;;      Temps:          3       0       0       0       0
  5835 ;;      Totals:         7       0       0       0       0
  5836 ;;Total ram usage:        7 bytes
  5837 ;; Hardware stack levels used:    1
  5838 ;; Hardware stack levels required when called:    2
  5839 ;; This function calls:
  5840 ;;		_Lcd_Write_Char
  5841 ;; This function is called by:
  5842 ;;		_Lcd_Write_Integer
  5843 ;;		_configurarAntiHorario
  5844 ;;		_configurarHorario
  5845 ;;		_Encoder
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           
  5850                           ;psect for function _Lcd_Write_String
  5851  09DA                     _Lcd_Write_String:	
  5852                           
  5853                           ;Lcd.c: 93:     int i;;Lcd.c: 94:     for (i = 0; a[i] != '\0'; i++)
  5854                           
  5855                           ;incstack = 0
  5856                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5857  09DA  01FA               	clrf	Lcd_Write_String@i
  5858  09DB  01FB               	clrf	Lcd_Write_String@i+1
  5859  09DC                     l2039:	
  5860  09DC  087A               	movf	Lcd_Write_String@i,w
  5861  09DD  0775               	addwf	Lcd_Write_String@a,w
  5862  09DE  00F8               	movwf	??_Lcd_Write_String+1
  5863  09DF  0876               	movf	Lcd_Write_String@a+1,w
  5864  09E0  00F7               	movwf	??_Lcd_Write_String
  5865  09E1  1803               	skipnc
  5866  09E2  0AF7               	incf	??_Lcd_Write_String,f
  5867  09E3  1BFA               	btfsc	Lcd_Write_String@i,7
  5868  09E4  03F7               	decf	??_Lcd_Write_String,f
  5869  09E5  0877               	movf	??_Lcd_Write_String,w
  5870  09E6  00F9               	movwf	??_Lcd_Write_String+2
  5871  09E7  0879               	movf	??_Lcd_Write_String+2,w
  5872  09E8  1283               	bcf	3,5	;RP0=0, select bank0
  5873  09E9  1303               	bcf	3,6	;RP1=0, select bank0
  5874  09EA  00FF               	movwf	127
  5875  09EB  0878               	movf	??_Lcd_Write_String+1,w
  5876  09EC  0084               	movwf	4
  5877  09ED  120A  158A  2000  120A  158A  	fcall	stringtab
  5878  09F2  3A00               	xorlw	0
  5879  09F3  1903               	btfsc	3,2
  5880  09F4  0008               	return
  5881                           
  5882                           ;Lcd.c: 95:         Lcd_Write_Char(a[i]);
  5883  09F5  087A               	movf	Lcd_Write_String@i,w
  5884  09F6  0775               	addwf	Lcd_Write_String@a,w
  5885  09F7  00F8               	movwf	??_Lcd_Write_String+1
  5886  09F8  0876               	movf	Lcd_Write_String@a+1,w
  5887  09F9  00F7               	movwf	??_Lcd_Write_String
  5888  09FA  1803               	skipnc
  5889  09FB  0AF7               	incf	??_Lcd_Write_String,f
  5890  09FC  1BFA               	btfsc	Lcd_Write_String@i,7
  5891  09FD  03F7               	decf	??_Lcd_Write_String,f
  5892  09FE  0877               	movf	??_Lcd_Write_String,w
  5893  09FF  00F9               	movwf	??_Lcd_Write_String+2
  5894  0A00  0879               	movf	??_Lcd_Write_String+2,w
  5895  0A01  1283               	bcf	3,5	;RP0=0, select bank0
  5896  0A02  1303               	bcf	3,6	;RP1=0, select bank0
  5897  0A03  00FF               	movwf	127
  5898  0A04  0878               	movf	??_Lcd_Write_String+1,w
  5899  0A05  0084               	movwf	4
  5900  0A06  120A  158A  2000  120A  158A  	fcall	stringtab
  5901  0A0B  120A  158A  2165  120A  158A  	fcall	_Lcd_Write_Char
  5902  0A10  3001               	movlw	1
  5903  0A11  07FA               	addwf	Lcd_Write_String@i,f
  5904  0A12  1803               	skipnc
  5905  0A13  0AFB               	incf	Lcd_Write_String@i+1,f
  5906  0A14  3000               	movlw	0
  5907  0A15  07FB               	addwf	Lcd_Write_String@i+1,f
  5908  0A16  29DC               	goto	l2039
  5909  0A17                     __end_of_Lcd_Write_String:	
  5910                           
  5911                           	psect	text21
  5912  0965                     __ptext21:	
  5913 ;; *************** function _Lcd_Write_Char *****************
  5914 ;; Defined at:
  5915 ;;		line 77 in file "Lcd.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  a               1    wreg     unsigned char 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;  a               1    4[COMMON] unsigned char 
  5920 ;;  y               1    3[COMMON] unsigned char 
  5921 ;;  temp            1    2[COMMON] unsigned char 
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  1    wreg      void 
  5924 ;; Registers used:
  5925 ;;		wreg, status,2, status,0, pclath, cstack
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5931 ;;      Params:         0       0       0       0       0
  5932 ;;      Locals:         3       0       0       0       0
  5933 ;;      Temps:          1       0       0       0       0
  5934 ;;      Totals:         4       0       0       0       0
  5935 ;;Total ram usage:        4 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:    1
  5938 ;; This function calls:
  5939 ;;		_Lcd_Port
  5940 ;; This function is called by:
  5941 ;;		_Lcd_Write_String
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           
  5946                           ;psect for function _Lcd_Write_Char
  5947  0965                     _Lcd_Write_Char:	
  5948                           
  5949                           ;incstack = 0
  5950                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5951                           ;Lcd_Write_Char@a stored from wreg
  5952  0965  00F4               	movwf	Lcd_Write_Char@a
  5953                           
  5954                           ;Lcd.c: 78:     char temp, y;;Lcd.c: 79:     temp = a & 0x0F;
  5955  0966  0874               	movf	Lcd_Write_Char@a,w
  5956  0967  390F               	andlw	15
  5957  0968  00F1               	movwf	??_Lcd_Write_Char
  5958  0969  0871               	movf	??_Lcd_Write_Char,w
  5959  096A  00F2               	movwf	Lcd_Write_Char@temp
  5960                           
  5961                           ;Lcd.c: 80:     y = a & 0xF0;
  5962  096B  0874               	movf	Lcd_Write_Char@a,w
  5963  096C  39F0               	andlw	240
  5964  096D  00F1               	movwf	??_Lcd_Write_Char
  5965  096E  0871               	movf	??_Lcd_Write_Char,w
  5966  096F  00F3               	movwf	Lcd_Write_Char@y
  5967                           
  5968                           ;Lcd.c: 81:     RB2 = 1;
  5969  0970  1283               	bcf	3,5	;RP0=0, select bank0
  5970  0971  1303               	bcf	3,6	;RP1=0, select bank0
  5971  0972  1506               	bsf	6,2	;volatile
  5972                           
  5973                           ;Lcd.c: 82:     Lcd_Port(y >> 4);
  5974  0973  0873               	movf	Lcd_Write_Char@y,w
  5975  0974  00F1               	movwf	??_Lcd_Write_Char
  5976  0975  3004               	movlw	4
  5977  0976                     u1935:	
  5978  0976  1003               	clrc
  5979  0977  0CF1               	rrf	??_Lcd_Write_Char,f
  5980  0978  3EFF               	addlw	-1
  5981  0979  1D03               	skipz
  5982  097A  2976               	goto	u1935
  5983  097B  0871               	movf	??_Lcd_Write_Char,w
  5984  097C  120A  158A  20BB  120A  158A  	fcall	_Lcd_Port
  5985                           
  5986                           ;Lcd.c: 83:     RB3 = 1;
  5987  0981  1283               	bcf	3,5	;RP0=0, select bank0
  5988  0982  1303               	bcf	3,6	;RP1=0, select bank0
  5989  0983  1586               	bsf	6,3	;volatile
  5990                           
  5991                           ;Lcd.c: 84:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  5992  0984  301A               	movlw	26
  5993  0985  00F1               	movwf	??_Lcd_Write_Char
  5994  0986                     u3847:	
  5995  0986  0BF1               	decfsz	??_Lcd_Write_Char,f
  5996  0987  2986               	goto	u3847
  5997  0988  0000               	nop
  5998                           
  5999                           ;Lcd.c: 85:     RB3 = 0;
  6000  0989  1283               	bcf	3,5	;RP0=0, select bank0
  6001  098A  1303               	bcf	3,6	;RP1=0, select bank0
  6002  098B  1186               	bcf	6,3	;volatile
  6003                           
  6004                           ;Lcd.c: 86:     Lcd_Port(temp);
  6005  098C  0872               	movf	Lcd_Write_Char@temp,w
  6006  098D  120A  158A  20BB  120A  158A  	fcall	_Lcd_Port
  6007                           
  6008                           ;Lcd.c: 87:     RB3 = 1;
  6009  0992  1283               	bcf	3,5	;RP0=0, select bank0
  6010  0993  1303               	bcf	3,6	;RP1=0, select bank0
  6011  0994  1586               	bsf	6,3	;volatile
  6012                           
  6013                           ;Lcd.c: 88:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  6014  0995  301A               	movlw	26
  6015  0996  00F1               	movwf	??_Lcd_Write_Char
  6016  0997                     u3857:	
  6017  0997  0BF1               	decfsz	??_Lcd_Write_Char,f
  6018  0998  2997               	goto	u3857
  6019  0999  0000               	nop
  6020                           
  6021                           ;Lcd.c: 89:     RB3 = 0;
  6022  099A  1283               	bcf	3,5	;RP0=0, select bank0
  6023  099B  1303               	bcf	3,6	;RP1=0, select bank0
  6024  099C  1186               	bcf	6,3	;volatile
  6025  099D  0008               	return
  6026  099E                     __end_of_Lcd_Write_Char:	
  6027                           
  6028                           	psect	text22
  6029  0A17                     __ptext22:	
  6030 ;; *************** function _Lcd_Set_Cursor *****************
  6031 ;; Defined at:
  6032 ;;		line 43 in file "Lcd.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  a               1    wreg     unsigned char 
  6035 ;;  b               1    4[COMMON] unsigned char 
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;  a               1    7[COMMON] unsigned char 
  6038 ;;  temp            1   10[COMMON] unsigned char 
  6039 ;;  y               1    9[COMMON] unsigned char 
  6040 ;;  z               1    8[COMMON] unsigned char 
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  1    wreg      void 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0, pclath, cstack
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6050 ;;      Params:         1       0       0       0       0
  6051 ;;      Locals:         4       0       0       0       0
  6052 ;;      Temps:          2       0       0       0       0
  6053 ;;      Totals:         7       0       0       0       0
  6054 ;;Total ram usage:        7 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:    2
  6057 ;; This function calls:
  6058 ;;		_Lcd_Cmd
  6059 ;; This function is called by:
  6060 ;;		_configurarAntiHorario
  6061 ;;		_configurarHorario
  6062 ;;		_Encoder
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           
  6067                           ;psect for function _Lcd_Set_Cursor
  6068  0A17                     _Lcd_Set_Cursor:	
  6069                           
  6070                           ;incstack = 0
  6071                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  6072                           ;Lcd_Set_Cursor@a stored from wreg
  6073  0A17  00F7               	movwf	Lcd_Set_Cursor@a
  6074                           
  6075                           ;Lcd.c: 44:     char temp, z, y;;Lcd.c: 45:     if (a == 1) {
  6076  0A18  0377               	decf	Lcd_Set_Cursor@a,w
  6077  0A19  1D03               	btfss	3,2
  6078  0A1A  2A3C               	goto	l2381
  6079                           
  6080                           ;Lcd.c: 46:         temp = 0x80 + b - 1;
  6081  0A1B  0874               	movf	Lcd_Set_Cursor@b,w
  6082  0A1C  3E7F               	addlw	127
  6083  0A1D  00F5               	movwf	??_Lcd_Set_Cursor
  6084  0A1E  0875               	movf	??_Lcd_Set_Cursor,w
  6085  0A1F  00FA               	movwf	Lcd_Set_Cursor@temp
  6086                           
  6087                           ;Lcd.c: 47:         z = temp >> 4;
  6088  0A20  087A               	movf	Lcd_Set_Cursor@temp,w
  6089  0A21  00F5               	movwf	??_Lcd_Set_Cursor
  6090  0A22  3004               	movlw	4
  6091  0A23                     u2985:	
  6092  0A23  1003               	clrc
  6093  0A24  0CF5               	rrf	??_Lcd_Set_Cursor,f
  6094  0A25  3EFF               	addlw	-1
  6095  0A26  1D03               	skipz
  6096  0A27  2A23               	goto	u2985
  6097  0A28  0875               	movf	??_Lcd_Set_Cursor,w
  6098  0A29  00F6               	movwf	??_Lcd_Set_Cursor+1
  6099  0A2A  0876               	movf	??_Lcd_Set_Cursor+1,w
  6100  0A2B  00F8               	movwf	Lcd_Set_Cursor@z
  6101                           
  6102                           ;Lcd.c: 48:         y = temp & 0x0F;
  6103  0A2C  087A               	movf	Lcd_Set_Cursor@temp,w
  6104  0A2D  390F               	andlw	15
  6105  0A2E  00F5               	movwf	??_Lcd_Set_Cursor
  6106  0A2F  0875               	movf	??_Lcd_Set_Cursor,w
  6107  0A30  00F9               	movwf	Lcd_Set_Cursor@y
  6108                           
  6109                           ;Lcd.c: 49:         Lcd_Cmd(z);
  6110  0A31  0878               	movf	Lcd_Set_Cursor@z,w
  6111  0A32  120A  158A  20D5  120A  158A  	fcall	_Lcd_Cmd
  6112                           
  6113                           ;Lcd.c: 50:         Lcd_Cmd(y);
  6114  0A37  0879               	movf	Lcd_Set_Cursor@y,w
  6115  0A38  120A  158A  20D5   	fcall	_Lcd_Cmd
  6116                           
  6117                           ;Lcd.c: 51:     } else if (a == 2) {
  6118  0A3B  0008               	return
  6119  0A3C                     l2381:	
  6120  0A3C  3002               	movlw	2
  6121  0A3D  0677               	xorwf	Lcd_Set_Cursor@a,w
  6122  0A3E  1D03               	btfss	3,2
  6123  0A3F  0008               	return
  6124                           
  6125                           ;Lcd.c: 52:         temp = 0xC0 + b - 1;
  6126  0A40  0874               	movf	Lcd_Set_Cursor@b,w
  6127  0A41  3EBF               	addlw	191
  6128  0A42  00F5               	movwf	??_Lcd_Set_Cursor
  6129  0A43  0875               	movf	??_Lcd_Set_Cursor,w
  6130  0A44  00FA               	movwf	Lcd_Set_Cursor@temp
  6131                           
  6132                           ;Lcd.c: 53:         z = temp >> 4;
  6133  0A45  087A               	movf	Lcd_Set_Cursor@temp,w
  6134  0A46  00F5               	movwf	??_Lcd_Set_Cursor
  6135  0A47  3004               	movlw	4
  6136  0A48                     u3005:	
  6137  0A48  1003               	clrc
  6138  0A49  0CF5               	rrf	??_Lcd_Set_Cursor,f
  6139  0A4A  3EFF               	addlw	-1
  6140  0A4B  1D03               	skipz
  6141  0A4C  2A48               	goto	u3005
  6142  0A4D  0875               	movf	??_Lcd_Set_Cursor,w
  6143  0A4E  00F6               	movwf	??_Lcd_Set_Cursor+1
  6144  0A4F  0876               	movf	??_Lcd_Set_Cursor+1,w
  6145  0A50  00F8               	movwf	Lcd_Set_Cursor@z
  6146                           
  6147                           ;Lcd.c: 54:         y = temp & 0x0F;
  6148  0A51  087A               	movf	Lcd_Set_Cursor@temp,w
  6149  0A52  390F               	andlw	15
  6150  0A53  00F5               	movwf	??_Lcd_Set_Cursor
  6151  0A54  0875               	movf	??_Lcd_Set_Cursor,w
  6152  0A55  00F9               	movwf	Lcd_Set_Cursor@y
  6153                           
  6154                           ;Lcd.c: 55:         Lcd_Cmd(z);
  6155  0A56  0878               	movf	Lcd_Set_Cursor@z,w
  6156  0A57  120A  158A  20D5  120A  158A  	fcall	_Lcd_Cmd
  6157                           
  6158                           ;Lcd.c: 56:         Lcd_Cmd(y);
  6159  0A5C  0879               	movf	Lcd_Set_Cursor@y,w
  6160  0A5D  120A  158A  20D5   	fcall	_Lcd_Cmd
  6161  0A60  0008               	return
  6162  0A61                     __end_of_Lcd_Set_Cursor:	
  6163                           
  6164                           	psect	text23
  6165  17F5                     __ptext23:	
  6166 ;; *************** function _Lcd_Clear *****************
  6167 ;; Defined at:
  6168 ;;		line 38 in file "Lcd.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;		None
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;		None
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  1    wreg      void 
  6175 ;; Registers used:
  6176 ;;		wreg, status,2, status,0, pclath, cstack
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6182 ;;      Params:         0       0       0       0       0
  6183 ;;      Locals:         0       0       0       0       0
  6184 ;;      Temps:          0       0       0       0       0
  6185 ;;      Totals:         0       0       0       0       0
  6186 ;;Total ram usage:        0 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; Hardware stack levels required when called:    2
  6189 ;; This function calls:
  6190 ;;		_Lcd_Cmd
  6191 ;; This function is called by:
  6192 ;;		_configurarAntiHorario
  6193 ;;		_configurarHorario
  6194 ;;		_Encoder
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           
  6199                           ;psect for function _Lcd_Clear
  6200  17F5                     _Lcd_Clear:	
  6201                           
  6202                           ;Lcd.c: 39:     Lcd_Cmd(0);
  6203                           
  6204                           ;incstack = 0
  6205                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  6206  17F5  3000               	movlw	0
  6207  17F6  120A  158A  20D5  160A  118A  	fcall	_Lcd_Cmd
  6208                           
  6209                           ;Lcd.c: 40:     Lcd_Cmd(1);
  6210  17FB  3001               	movlw	1
  6211  17FC  120A  158A  20D5   	fcall	_Lcd_Cmd
  6212  17FF  0008               	return
  6213  1800                     __end_of_Lcd_Clear:	
  6214                           
  6215                           	psect	text24
  6216  08D5                     __ptext24:	
  6217 ;; *************** function _Lcd_Cmd *****************
  6218 ;; Defined at:
  6219 ;;		line 30 in file "Lcd.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  a               1    wreg     unsigned char 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  a               1    3[COMMON] unsigned char 
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      void 
  6226 ;; Registers used:
  6227 ;;		wreg, status,2, status,0, pclath, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6233 ;;      Params:         0       0       0       0       0
  6234 ;;      Locals:         1       0       0       0       0
  6235 ;;      Temps:          2       0       0       0       0
  6236 ;;      Totals:         3       0       0       0       0
  6237 ;;Total ram usage:        3 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    1
  6240 ;; This function calls:
  6241 ;;		_Lcd_Port
  6242 ;; This function is called by:
  6243 ;;		_Lcd_Clear
  6244 ;;		_Lcd_Set_Cursor
  6245 ;;		_Lcd_Init
  6246 ;;		_Lcd_Shift_Right
  6247 ;;		_Lcd_Shift_Left
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           
  6252                           ;psect for function _Lcd_Cmd
  6253  08D5                     _Lcd_Cmd:	
  6254                           
  6255                           ;incstack = 0
  6256                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6257                           ;Lcd_Cmd@a stored from wreg
  6258  08D5  00F3               	movwf	Lcd_Cmd@a
  6259                           
  6260                           ;Lcd.c: 31:     RB2 = 0;
  6261  08D6  1283               	bcf	3,5	;RP0=0, select bank0
  6262  08D7  1303               	bcf	3,6	;RP1=0, select bank0
  6263  08D8  1106               	bcf	6,2	;volatile
  6264                           
  6265                           ;Lcd.c: 32:     Lcd_Port(a);
  6266  08D9  0873               	movf	Lcd_Cmd@a,w
  6267  08DA  120A  158A  20BB  120A  158A  	fcall	_Lcd_Port
  6268                           
  6269                           ;Lcd.c: 33:     RB3 = 1;
  6270  08DF  1283               	bcf	3,5	;RP0=0, select bank0
  6271  08E0  1303               	bcf	3,6	;RP1=0, select bank0
  6272  08E1  1586               	bsf	6,3	;volatile
  6273                           
  6274                           ;Lcd.c: 34:     _delay((unsigned long)((4)*(8000000/4000.0)));
  6275  08E2  300B               	movlw	11
  6276  08E3  00F2               	movwf	??_Lcd_Cmd+1
  6277  08E4  3062               	movlw	98
  6278  08E5  00F1               	movwf	??_Lcd_Cmd
  6279  08E6                     u3867:	
  6280  08E6  0BF1               	decfsz	??_Lcd_Cmd,f
  6281  08E7  28E6               	goto	u3867
  6282  08E8  0BF2               	decfsz	??_Lcd_Cmd+1,f
  6283  08E9  28E6               	goto	u3867
  6284  08EA  0000               	nop
  6285                           
  6286                           ;Lcd.c: 35:     RB3 = 0;
  6287  08EB  1283               	bcf	3,5	;RP0=0, select bank0
  6288  08EC  1303               	bcf	3,6	;RP1=0, select bank0
  6289  08ED  1186               	bcf	6,3	;volatile
  6290  08EE  0008               	return
  6291  08EF                     __end_of_Lcd_Cmd:	
  6292                           
  6293                           	psect	text25
  6294  08BB                     __ptext25:	
  6295 ;; *************** function _Lcd_Port *****************
  6296 ;; Defined at:
  6297 ;;		line 8 in file "Lcd.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;  a               1    wreg     unsigned char 
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;  a               1    0[COMMON] unsigned char 
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  1    wreg      void 
  6304 ;; Registers used:
  6305 ;;		wreg
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6311 ;;      Params:         0       0       0       0       0
  6312 ;;      Locals:         1       0       0       0       0
  6313 ;;      Temps:          0       0       0       0       0
  6314 ;;      Totals:         1       0       0       0       0
  6315 ;;Total ram usage:        1 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; This function calls:
  6318 ;;		Nothing
  6319 ;; This function is called by:
  6320 ;;		_Lcd_Cmd
  6321 ;;		_Lcd_Init
  6322 ;;		_Lcd_Write_Char
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           
  6327                           ;psect for function _Lcd_Port
  6328  08BB                     _Lcd_Port:	
  6329                           
  6330                           ;incstack = 0
  6331                           ; Regs used in _Lcd_Port: [wreg]
  6332                           ;Lcd_Port@a stored from wreg
  6333  08BB  00F0               	movwf	Lcd_Port@a
  6334                           
  6335                           ;Lcd.c: 9:     if (a & 1)
  6336  08BC  1C70               	btfss	Lcd_Port@a,0
  6337  08BD  28C2               	goto	l59
  6338                           
  6339                           ;Lcd.c: 10:         RB7 = 1;
  6340  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  6341  08BF  1303               	bcf	3,6	;RP1=0, select bank0
  6342  08C0  1786               	bsf	6,7	;volatile
  6343  08C1  28C5               	goto	l60
  6344  08C2                     l59:	
  6345                           ;Lcd.c: 11:     else
  6346                           
  6347                           
  6348                           ;Lcd.c: 12:         RB7 = 0;
  6349  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  6350  08C3  1303               	bcf	3,6	;RP1=0, select bank0
  6351  08C4  1386               	bcf	6,7	;volatile
  6352  08C5                     l60:	
  6353                           
  6354                           ;Lcd.c: 14:     if (a & 2)
  6355  08C5  1CF0               	btfss	Lcd_Port@a,1
  6356  08C6  28C9               	goto	l61
  6357                           
  6358                           ;Lcd.c: 15:         RB4 = 1;
  6359  08C7  1606               	bsf	6,4	;volatile
  6360  08C8  28CA               	goto	l62
  6361  08C9                     l61:	
  6362                           ;Lcd.c: 16:     else
  6363                           
  6364                           
  6365                           ;Lcd.c: 17:         RB4 = 0;
  6366  08C9  1206               	bcf	6,4	;volatile
  6367  08CA                     l62:	
  6368                           
  6369                           ;Lcd.c: 19:     if (a & 4)
  6370  08CA  1D70               	btfss	Lcd_Port@a,2
  6371  08CB  28CE               	goto	l63
  6372                           
  6373                           ;Lcd.c: 20:         RB6 = 1;
  6374  08CC  1706               	bsf	6,6	;volatile
  6375  08CD  28CF               	goto	l64
  6376  08CE                     l63:	
  6377                           ;Lcd.c: 21:     else
  6378                           
  6379                           
  6380                           ;Lcd.c: 22:         RB6 = 0;
  6381  08CE  1306               	bcf	6,6	;volatile
  6382  08CF                     l64:	
  6383                           
  6384                           ;Lcd.c: 24:     if (a & 8)
  6385  08CF  1DF0               	btfss	Lcd_Port@a,3
  6386  08D0  28D3               	goto	l65
  6387                           
  6388                           ;Lcd.c: 25:         RB5 = 1;
  6389  08D1  1686               	bsf	6,5	;volatile
  6390  08D2  0008               	return
  6391  08D3                     l65:	
  6392                           ;Lcd.c: 26:     else
  6393                           
  6394                           
  6395                           ;Lcd.c: 27:         RB5 = 0;
  6396  08D3  1286               	bcf	6,5	;volatile
  6397  08D4  0008               	return
  6398  08D5                     __end_of_Lcd_Port:	
  6399                           
  6400                           	psect	text26
  6401  08A1                     __ptext26:	
  6402 ;; *************** function _ConfigInit *****************
  6403 ;; Defined at:
  6404 ;;		line 21 in file "Controls.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;		None
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;		None
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      void 
  6411 ;; Registers used:
  6412 ;;		wreg, status,2, status,0
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6418 ;;      Params:         0       0       0       0       0
  6419 ;;      Locals:         0       0       0       0       0
  6420 ;;      Temps:          0       0       0       0       0
  6421 ;;      Totals:         0       0       0       0       0
  6422 ;;Total ram usage:        0 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; This function calls:
  6425 ;;		Nothing
  6426 ;; This function is called by:
  6427 ;;		_main
  6428 ;; This function uses a non-reentrant model
  6429 ;;
  6430                           
  6431                           
  6432                           ;psect for function _ConfigInit
  6433  08A1                     _ConfigInit:	
  6434                           
  6435                           ;Controls.c: 24:     OSCCONbits.IRCF = 0x7;
  6436                           
  6437                           ;incstack = 0
  6438                           ; Regs used in _ConfigInit: [wreg+status,2+status,0]
  6439  08A1  3070               	movlw	112
  6440  08A2  1683               	bsf	3,5	;RP0=1, select bank1
  6441  08A3  1303               	bcf	3,6	;RP1=0, select bank1
  6442  08A4  048F               	iorwf	15,f	;volatile
  6443                           
  6444                           ;Controls.c: 25:     OSCCONbits.SCS = 0;
  6445  08A5  100F               	bcf	15,0	;volatile
  6446                           
  6447                           ;Controls.c: 26:     OSCTUNE = 0x00;
  6448  08A6  0190               	clrf	16	;volatile
  6449                           
  6450                           ;Controls.c: 29:     ANSELH = ANSEL = 0;
  6451  08A7  1683               	bsf	3,5	;RP0=1, select bank3
  6452  08A8  1703               	bsf	3,6	;RP1=1, select bank3
  6453  08A9  0188               	clrf	8	;volatile
  6454  08AA  0189               	clrf	9	;volatile
  6455                           
  6456                           ;Controls.c: 32:     TRISB = 0x01;
  6457  08AB  3001               	movlw	1
  6458  08AC  1683               	bsf	3,5	;RP0=1, select bank1
  6459  08AD  1303               	bcf	3,6	;RP1=0, select bank1
  6460  08AE  0086               	movwf	6	;volatile
  6461                           
  6462                           ;Controls.c: 35:     TRISC = 0x00;
  6463  08AF  0187               	clrf	7	;volatile
  6464                           
  6465                           ;Controls.c: 36:     PORTC = 0x00;
  6466  08B0  1283               	bcf	3,5	;RP0=0, select bank0
  6467  08B1  1303               	bcf	3,6	;RP1=0, select bank0
  6468  08B2  0187               	clrf	7	;volatile
  6469                           
  6470                           ;Controls.c: 39:     TRISA = 0xE8;
  6471  08B3  30E8               	movlw	232
  6472  08B4  1683               	bsf	3,5	;RP0=1, select bank1
  6473  08B5  1303               	bcf	3,6	;RP1=0, select bank1
  6474  08B6  0085               	movwf	5	;volatile
  6475                           
  6476                           ;Controls.c: 40:     PORTA = 0x00;
  6477  08B7  1283               	bcf	3,5	;RP0=0, select bank0
  6478  08B8  1303               	bcf	3,6	;RP1=0, select bank0
  6479  08B9  0185               	clrf	5	;volatile
  6480  08BA  0008               	return
  6481  08BB                     __end_of_ConfigInit:	
  6482  007E                     btemp	set	126	;btemp
  6483  007E                     wtemp0	set	126


Data Sizes:
    Strings     61
    Constant    44
    Data        3
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     56      74
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> Lcd_Write_Integer@Data(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 14
		 -> STR_15(CODE[9]), STR_14(CODE[11]), STR_13(CODE[9]), STR_12(CODE[14]), 
		 -> STR_11(CODE[4]), STR_10(CODE[5]), STR_9(CODE[11]), STR_8(CODE[5]), 
		 -> STR_7(CODE[11]), STR_6(CODE[4]), STR_5(CODE[5]), STR_4(CODE[8]), 
		 -> STR_3(CODE[5]), STR_2(CODE[8]), Lcd_Write_Integer@Data(BANK0[10]), 


Critical Paths under _main in COMMON

    _Lcd_Init->_Lcd_Cmd
    _Encoder->___xxtofl
    ___fltol->___xxtofl
    ___fladd->___xxtofl
    _VerificarInversionGiro->___xxtofl
    ___flmul->___xxtofl
    ___flge->___xxtofl
    _Lcd_Write_Integer->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_configurarAntiHorario
    _main->_configurarHorario
    _configurarHorario->_Lcd_Write_Integer
    _configurarAntiHorario->_Lcd_Write_Integer
    _Encoder->_Lcd_Write_Integer
    ___fltol->___flmul
    _VerificarInversionGiro->___flge
    ___flge->___flmul
    _Lcd_Write_Integer->___fltol

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   31515
                                             54 BANK0      2     2      0
                         _ConfigInit
                            _Encoder
                       _KeyPadGetKey
                           _Lcd_Init
                           _RunMotor
                          _StopMotor
              _configurarAntiHorario
                  _configurarHorario
 ---------------------------------------------------------------------------------
 (1) _configurarHorario                                    4     4      0    6714
                                             50 BANK0      4     4      0
                       _KeyPadGetKey
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                  _Lcd_Write_Integer
                   _Lcd_Write_String
                           _RunMotor
                          _StopMotor
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _configurarAntiHorario                                4     4      0    6714
                                             50 BANK0      4     4      0
                       _KeyPadGetKey
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                  _Lcd_Write_Integer
                   _Lcd_Write_String
                           _RunMotor
                          _StopMotor
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _StopMotor                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RunMotor                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _KeyPadGetKey                                         6     4      2     205
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Encoder                                              1     1      0   17684
                                             50 BANK0      1     1      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                  _Lcd_Write_Integer
                   _Lcd_Write_String
             _VerificarInversionGiro
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     609
                                             26 BANK0     11     7      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2414
                                              0 BANK0     20    12      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _VerificarInversionGiro                               3     3      0    4517
                                             38 BANK0      3     3      0
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1006
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3025
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Integer                                   13    11      2    3151
                                             37 BANK0     13    11      2
                   _Lcd_Write_String
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1408
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1    1444
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigInit
   _Encoder
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Integer
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _sprintf (ARG)
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _VerificarInversionGiro
       ___flge
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl
     ___fladd
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _KeyPadGetKey
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _RunMotor
   _StopMotor
   _configurarAntiHorario
     _KeyPadGetKey
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Integer
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _sprintf (ARG)
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _RunMotor
     _StopMotor
     ___wmul
   _configurarHorario
     _KeyPadGetKey
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Integer
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _sprintf (ARG)
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _RunMotor
     _StopMotor
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     38      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      58      12        0.0%
ABS                  0      0      58       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed May 22 10:50:38 2019

                              pc 0002                      __CFG_CP$OFF 0000                               l35 0B1F  
                             l60 08C5                               l28 0B12                               l61 08C9  
                             l62 08CA                               l63 08CE                               l64 08CF  
                             l65 08D3                               l59 08C2                               _cm 005A  
                             fsr 0004              ___wmul@multiplicand 0072              __Umul8_16@word_mpld 0076  
                            l222 00C8                              l127 0B93                              l128 0BF8  
                            l244 019E                              l238 0EA0                              l361 08F9  
                            l535 0C3D                              l801 0D29                              l538 0CA3  
                            l802 0D33                              l554 0B72                              l660 0362  
                            l654 02EB                              l807 0922                              l762 07D0  
                            l658 0384                              l675 043D                              l696 04BD  
                            l688 04A5                              l794 0D13                              l788 0CD3  
                            _RA0 0028                              _RA1 0029                              _RB0 0030  
                            _RA2 002A                              _RA3 002B                              _RB2 0032  
                            _RA4 002C                              _RC0 0038                              _RB3 0033  
                            _RA5 002D                              _RC1 0039                              _RB4 0034  
                            _RA6 002E                              _RC2 003A                              _RB5 0035  
                            _RA7 002F                              _RB6 0036                              _RB7 0037  
                   __CFG_CPD$OFF 0000                              _key 0063                              fsr0 0004  
                            indf 0000                    _CmAntiHorario 005C                     ___flmul@aexp 0032  
                   ___flmul@bexp 0033                     ___flmul@sign 002D                     ___flmul@temp 0038  
                   ___flmul@prod 0034                     __CFG_LVP$OFF 0000                   ??_KeyPadGetKey 0072  
                   ___fltol@exp1 0044                             l2001 0955                             l2005 0960  
                           l2013 091A                             l2113 0C7D                             l2109 0C57  
                           l2221 073F                             l2141 04EF                             l2039 09DC  
                           l2071 0DB7                             l2055 0D9E                             l2231 0758  
                           l2303 0D50                             l2065 0DB5                             l2049 0D80  
                           l2241 078A                             l2137 04E5                             l2091 0DEB  
                           l2083 0DE7                             l2251 07B9                             l2227 0756  
                           l2219 0722                             l2155 050A                             l2139 04E7  
                           l2077 0DD8                             l2093 0D60                             l2245 07A0  
                           l2157 050C                             l2317 0B9C                             l2095 0E2C  
                           l2167 0522                             l2159 0514                             l2319 0BCF  
                           l2423 08F1                             l2281 0CF8                             l2513 02E3  
                           l2441 0B37                             l2291 0D18                             l2275 0CE2  
                           l2611 044F                             l2603 042F                             l2381 0A3C  
                           l2269 0CCB                             l2509 02E0                             l2437 0B2E  
                           l2279 0CE6                             l2519 02F5                             l2359 0C14  
                           l2289 0D27                             l2633 0470                             l2625 0465  
                           l2457 0B5E                             l2713 0036                             l2619 045E  
                           l2627 0467                             l2491 02C1                             l2467 0B81  
                           l2459 0B6E                             l2803 0FDC                             l2707 0084  
                           l2637 0472                             l2557 036D                             l2549 0331  
                           l2485 02B6                             l2805 0FF5                             l2725 0039  
                           l2655 04B5                             l2583 03B3                             l2575 0392  
                           l2559 036F                             l2567 037E                             l2735 004B  
                           l2585 03B5                             l2593 03C5                             l2489 02B9  
                           l1971 09A6                             l2659 04B9                             l2771 0F66  
                           l1973 09B4                             l2765 0F3A                             l1983 09D5  
                           l2783 0F90                             l2793 0FA2                             l2873 0AE4  
                           l1979 09CA                             l1995 0939                             l2875 0AEA  
                           l2883 0AFC                             l2867 0AD5                             l1997 0947  
                           l2981 00B4                             l2877 0AF0                             l2983 0FE1  
                           l2879 0AF6                             l2985 0D93                             l2979 0B04  
                           STR_1 0876                             STR_2 0869                             STR_3 0871  
                           STR_4 0869                             STR_5 0871                             STR_6 0872  
                           STR_7 084A                             STR_8 0871                             STR_9 084A  
                           u2025 093C                             u3005 0A48                             u2045 094D  
                           u2055 0956                             u2231 0C68                             u2232 0C69  
                           u2233 0C6E                             u3105 0B40                             u2234 0C6F  
                           u2155 0DCE                             u2251 0C8E                             u2235 0C74  
                           u2252 0C8F                             u2236 0C75                             u3300 0352  
                           u2253 0C94                             u2085 0923                             u2254 0C95  
                           u2255 0C9A                             u3135 0B5F                             u2256 0C9B  
                           u2505 070E                             u2425 062F                             u3065 08FA  
                           u2515 0726                             u3075 0901                             u2605 0775  
                           u3165 0B77                             u2615 0793                             u2535 0731  
                           u3431 03F0                             u3423 03D7                             u3415 03B9  
                           u3335 0373                             u3440 0404                             u3432 03F1  
                           u2625 07AB                             u2465 06CB                             u3441 0405  
                           u3433 03F6                             u3442 040A                             u3434 03F7  
                           u3290 0351                             u2810 0BAA                             u2395 05D2  
                           u2715 0D20                             u3443 040B                             u3435 03FC  
                           u3436 03FD                             u2485 06F0                             u3285 0345  
                           u2805 0B9F                             u1935 0976                             u2840 0BBB  
                           u2824 0BAD                             u3705 0123                             u1955 09A9  
                           u2755 0D3B                             u2675 0CEF                             u2835 0BB0  
                           u2780 0B99                             u3485 0451                             u3725 01AC  
                           u2870 0BCC                             u2854 0BBE                             u1975 09B5  
                           u2695 0D0B                             u3807 0A7A                             u3655 00A6  
                           u1985 09C1                             u3585 048F                             u3817 0A89  
                           u2865 0BC1                             u1995 09CB                             u3827 0E93  
                           u3675 0F5C                             u3837 0F02                             u3847 0986  
                           u2985 0A23                             u3857 0997                             u3777 0FFB  
                           u3867 08E6                             u3787 0BD3                             u3797 0A6B  
                   __CFG_WRT$OFF 0000                ?_Lcd_Write_String 0075                             _key2 0067  
                           _main 0ABC                             btemp 007E                    __CFG_BOREN$ON 0000  
                           start 0000               ??_Lcd_Write_String 0077                    __CFG_IESO$OFF 0000  
                __end_of_Lcd_Cmd 08EF                  __end_of_Encoder 0299                _Lcd_Write_Integer 0889  
                  ___fltol@sign1 0043                  __end_of___fladd 04C8                            ?_main 0070  
                          STR_10 0871                            STR_11 0872                            STR_12 083C  
                          STR_13 0860                            STR_14 0855                            STR_15 0860  
                  __CFG_WDTE$OFF 0000                  __end_of___flmul 07DD                  __end_of___fltol 0B90  
                          _ANSEL 0188               ?_Lcd_Write_Integer 0045                  __end_of___lwdiv 09DA  
                __end_of___lwmod 0965                       _ConfigInit 08A1                            _PORTA 0005  
                          _PORTC 0007          __size_of_Lcd_Set_Cursor 004A                            _TRISA 0085  
                          _TRISB 0086                            _TRISC 0087                    __CFG_PWRTE$ON 0000  
                 __CFG_FCMEN$OFF 0000                  __end_of_dpowers 083C              ??_Lcd_Write_Integer 0047  
                          pclath 000A                            status 0003                            wtemp0 007E  
                __end_of_sprintf 0E31                 __end_of_Lcd_Init 0ABC                 __end_of_Lcd_Port 08D5  
                 __CFG_MCLRE$OFF 0000                  __initialization 07DD                     __end_of_main 0B23  
      __end_of_Lcd_Write_Integer 08A1                           ??_main 0056               __size_of_Lcd_Clear 000B  
               __end_of_RunMotor 0889                           _ANSELH 0189                        ??_Lcd_Cmd 0071  
        __size_of_Lcd_Write_Char 0039                        ??_Encoder 0052                 __end_of___xxtofl 0D59  
                         _Grados 0060                           ___flge 0C21                        ??___fladd 0028  
                         ___wmul 08EF                        ??___flmul 0028                        ??___fltol 003E  
                      ??___lwdiv 0074                        ??___lwmod 007C                           _buffer 0065  
              _configurarHorario 000D             __end_of_KeyPadGetKey 0C21                           _lastCm 0058  
             ?_configurarHorario 0070                  KeyPadGetKey@key 0074                  KeyPadGetKey@row 0075  
                    ?_ConfigInit 0070               __size_of__Umul8_16 0023            _configurarAntiHorario 0F0A  
            ??_configurarHorario 0052                        ??_sprintf 0023                  Lcd_Set_Cursor@a 0077  
                Lcd_Set_Cursor@b 0074                  Lcd_Set_Cursor@y 0079                  Lcd_Set_Cursor@z 0078  
             __size_of_StopMotor 0005                       ___flge@ff1 003A                       ___flge@ff2 003E  
                   ___xxtofl@arg 007A                     ___xxtofl@exp 0079                     ___xxtofl@val 0070  
        __end_of__initialization 07FC                __end_of_Lcd_Clear 1800                       ___fltol@f1 003A  
                 __pcstackCOMMON 0070        __end_of_configurarHorario 00C9                     __pidataBANK0 0005  
     __size_of_Lcd_Write_Integer 0018                   _Lcd_Set_Cursor 0A17             __end_of_keyPadMatrix 0832  
                      ?_Lcd_Init 0070                        ?_Lcd_Port 0070                       __pbssBANK0 0058  
            __size_of_ConfigInit 001A                __end_of__Umul8_16 0933                       __pmaintext 0ABC  
                        ?___flge 003A                          ?___wmul 0070                        ?_RunMotor 0070  
              __end_of_StopMotor 000D        __size_of_Lcd_Write_String 003D           __end_of_Lcd_Set_Cursor 0A61  
         ?_configurarAntiHorario 0070                        ?___xxtofl 0070                          _OSCTUNE 0090  
                     ??_Lcd_Init 0074         ??_VerificarInversionGiro 0046                       ??_Lcd_Port 0070  
                     __stringtab 0800                   _Lcd_Write_Char 0965                          _Lcd_Cmd 08D5  
                        _Encoder 00C9            __size_of_KeyPadGetKey 0091       __size_of_configurarHorario 00BC  
                __size_of___flge 0095                          ___fladd 0299                       ??_RunMotor 0070  
                        ___flmul 04C8                          ___fltol 0B23                  __size_of___wmul 0021  
                        ___lwdiv 099E                          ___lwmod 0933                  ?_Lcd_Set_Cursor 0074  
                        __ptext1 000D                          __ptext2 0F0A                          __ptext3 08EF  
                        __ptext4 0008                          __ptext5 087C                          __ptext6 0B90  
                        __ptext7 0A61                          __ptext8 00C9                          __ptext9 0B23  
                        _dpowers 0832                       ??___xxtofl 0074                          _old_key 0062  
                        _sprintf 0D59           __end_of_Lcd_Write_Char 099E             end_of_initialization 07FC  
                   _KeyPadGetKey 0B90                        Lcd_Port@a 0070                     ??_ConfigInit 0070  
                    ___fladd@grs 0033                    ___xxtofl@sign 0078  __size_of_VerificarInversionGiro 00D9  
                ?_Lcd_Write_Char 0070                        _CmHorario 005E                Lcd_Write_String@a 0075  
              Lcd_Write_String@i 007A                      ___flmul@grs 002E               __end_of_ConfigInit 08BB  
                   _keyPadMatrix 0810                        _Lcd_Clear 17F5                   __end_of___flge 0CB6  
                 __end_of___wmul 0910                 _Lcd_Write_String 09DA              start_initialization 07DD  
                      _LastState 0064                __size_of_Lcd_Init 005B                __size_of_Lcd_Port 001A  
       __CFG_FOSC$INTRC_NOCLKOUT 0000                       ?_Lcd_Clear 0070                         ??___flge 0042  
         _VerificarInversionGiro 0E31                         ??___wmul 0074                        __Umul8_16 0910  
                    __pdataBANK0 0067                  Lcd_Write_Char@a 0074                  Lcd_Write_Char@y 0073  
        ??_configurarAntiHorario 0052                __size_of_RunMotor 000D                        ___fladd@a 0024  
                      ___fladd@b 0020                        _StopMotor 0008                        ___flmul@a 0024  
                      ___flmul@b 0020                        ___latbits 0002                    __pcstackBANK0 0020  
              __size_of___xxtofl 00A3                         ?_Lcd_Cmd 0070                      sprintf@flag 0027  
                       ?_Encoder 0070                      sprintf@prec 0028                 ___lwdiv@dividend 0072  
               ??_Lcd_Set_Cursor 0075                         ?___fladd 0020                         ?___flmul 0020  
                       ?___fltol 003A                       ?__Umul8_16 0070                         ?___lwdiv 0070  
                       ?___lwmod 0078                        __pstrings 0800                       ?_StopMotor 0070  
               ___lwdiv@quotient 0075                         ?_sprintf 0020                   ___wmul@product 0074  
                       Lcd_Cmd@a 0073                      ??_Lcd_Clear 0074            Lcd_Write_Integer@Data 0048  
                    __stringbase 080F                ___wmul@multiplier 0070                 ??_Lcd_Write_Char 0071  
                       _Lcd_Init 0A61                         _Lcd_Port 08BB         __end_of_Lcd_Write_String 0A17  
               __size_of_Lcd_Cmd 001A                 __size_of_Encoder 01D0                         _RunMotor 087C  
                    ??__Umul8_16 0072                 __size_of___fladd 022F                 __size_of___flmul 0315  
               __size_of___fltol 006D                 __size_of___lwdiv 003C                 __size_of___lwmod 0032  
             __end_of__stringtab 0810                      ??_StopMotor 0070                       sprintf@val 0029  
                       ___xxtofl 0CB6                  ___lwdiv@divisor 0070                  ___lwdiv@counter 0077  
                       __ptext10 0299                         __ptext11 0E31                         __ptext20 09DA  
                       __ptext12 0CB6                         __ptext21 0965                         __ptext13 04C8  
                       __ptext22 0A17                         __ptext14 0910                         __ptext23 17F5  
                       __ptext15 0C21                         __ptext24 08D5                         __ptext16 0889  
                       __ptext25 08BB                         __ptext17 0D59                         __ptext26 08A1  
                       __ptext18 0933                         __ptext19 099E                __CFG_BOR4V$BOR40V 0000  
               __size_of_sprintf 00D8                    __size_of_main 0067                         _keypress 0069  
        ?_VerificarInversionGiro 0070   __size_of_configurarAntiHorario 00F6    __end_of_configurarAntiHorario 1000  
             Lcd_Write_Char@temp 0072                        sprintf@ap 0026                        sprintf@sp 002B  
               ___lwmod@dividend 007A   __end_of_VerificarInversionGiro 0F0A                        stringcode 080A  
                     _OSCCONbits 008F               Lcd_Set_Cursor@temp 007A           __Umul8_16@multiplicand 0070  
                       sprintf@c 002C                         sprintf@f 0020                  ___lwmod@divisor 0078  
                ___lwmod@counter 007D                         stringdir 080A                         stringtab 0800  
             Lcd_Write_Integer@a 0045                    ___fladd@signs 0030                    ?_KeyPadGetKey 0070  
                   ___fladd@aexp 0031                     ___fladd@bexp 0032             __Umul8_16@multiplier 0078  
              __Umul8_16@product 0074  
