Version 4.0 HI-TECH Software Intermediate Code
"3273 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3273: extern volatile unsigned char ANSELH __attribute__((address(0x189)));
[v _ANSELH `Vuc ~T0 @X0 0 e@393 ]
"3229
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3229: extern volatile unsigned char ANSEL __attribute__((address(0x188)));
[v _ANSEL `Vuc ~T0 @X0 0 e@392 ]
"1399
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1399: extern volatile unsigned char TRISB __attribute__((address(0x086)));
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1461
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1461: extern volatile unsigned char TRISC __attribute__((address(0x087)));
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"1337
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1337: extern volatile unsigned char TRISA __attribute__((address(0x085)));
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"166
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 166: extern volatile unsigned char PORTA __attribute__((address(0x005)));
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"3930
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3930: extern volatile __bit RB4 __attribute__((address(0x34)));
[v _RB4 `Vb ~T0 @X0 0 e@52 ]
"3933
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3933: extern volatile __bit RB5 __attribute__((address(0x35)));
[v _RB5 `Vb ~T0 @X0 0 e@53 ]
"3936
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3936: extern volatile __bit RB6 __attribute__((address(0x36)));
[v _RB6 `Vb ~T0 @X0 0 e@54 ]
"3939
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3939: extern volatile __bit RB7 __attribute__((address(0x37)));
[v _RB7 `Vb ~T0 @X0 0 e@55 ]
"3924
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3924: extern volatile __bit RB2 __attribute__((address(0x32)));
[v _RB2 `Vb ~T0 @X0 0 e@50 ]
"3927
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3927: extern volatile __bit RB3 __attribute__((address(0x33)));
[v _RB3 `Vb ~T0 @X0 0 e@51 ]
[v F1196 `(v ~T0 @X0 1 tf1`ul ]
"92 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic.h
[v __delay `JF1196 ~T0 @X0 0 e ]
[p i __delay ]
"194 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\c90\stdio.h
[v _sprintf `(i ~T0 @X0 0 e1v`*uc`*Cuc ]
"3894 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3894: extern volatile __bit RA0 __attribute__((address(0x28)));
[v _RA0 `Vb ~T0 @X0 0 e@40 ]
"3897
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3897: extern volatile __bit RA1 __attribute__((address(0x29)));
[v _RA1 `Vb ~T0 @X0 0 e@41 ]
"3900
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3900: extern volatile __bit RA2 __attribute__((address(0x2A)));
[v _RA2 `Vb ~T0 @X0 0 e@42 ]
"3903
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3903: extern volatile __bit RA3 __attribute__((address(0x2B)));
[v _RA3 `Vb ~T0 @X0 0 e@43 ]
"3906
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3906: extern volatile __bit RA4 __attribute__((address(0x2C)));
[v _RA4 `Vb ~T0 @X0 0 e@44 ]
"3909
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3909: extern volatile __bit RA5 __attribute__((address(0x2D)));
[v _RA5 `Vb ~T0 @X0 0 e@45 ]
"3912
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3912: extern volatile __bit RA6 __attribute__((address(0x2E)));
[v _RA6 `Vb ~T0 @X0 0 e@46 ]
"3915
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3915: extern volatile __bit RA7 __attribute__((address(0x2F)));
[v _RA7 `Vb ~T0 @X0 0 e@47 ]
[p mainexit ]
"28 main.c
[; ;main.c: 28:     StopMotor();
[v _StopMotor `(i ~T0 @X0 0 e? ]
"29
[; ;main.c: 29:     configurarHorario();
[v _configurarHorario `(i ~T0 @X0 0 e? ]
"30
[; ;main.c: 30:     configurarAntiHorario();
[v _configurarAntiHorario `(i ~T0 @X0 0 e? ]
"50
[; ;main.c: 50:                     RunMotor();
[v _RunMotor `(i ~T0 @X0 0 e? ]
"3918 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3918: extern volatile __bit RB0 __attribute__((address(0x30)));
[v _RB0 `Vb ~T0 @X0 0 e@48 ]
"57 main.c
[; ;main.c: 57:             Encoder();
[v _Encoder `(i ~T0 @X0 0 e? ]
"3948 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3948: extern volatile __bit RC0 __attribute__((address(0x38)));
[v _RC0 `Vb ~T0 @X0 0 e@56 ]
"3951
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3951: extern volatile __bit RC1 __attribute__((address(0x39)));
[v _RC1 `Vb ~T0 @X0 0 e@57 ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 292: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"354
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 354: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"375
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 375: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"382
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 382: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"460
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 460: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"516
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 516: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"573
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 573: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"580
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 580: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"587
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 587: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"594
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 594: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"688
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 688: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"695
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 695: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"766
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 766: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"773
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 773: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"843
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 843: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"850
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 850: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"857
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 857: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"864
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 864: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"961
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 961: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1056
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1056: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1063
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1063: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1070
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1070: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1077
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1077: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1084
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1084: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1091
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1091: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1161: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1168: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1269
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1269: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1339
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1339: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1401
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1401: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1463
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1463: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1525
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1525: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1546
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1546: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1602
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1602: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1659
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1659: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1706
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1706: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1771
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1771: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1823
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1823: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1885
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1885: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1892
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1892: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1899
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1899: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"1904
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 1904: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2021
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 2021: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2190
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 2190: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2260
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 2260: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2330
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 2330: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2400
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 2400: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2486
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 2486: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2548
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 2548: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2618
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 2618: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2688
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 2688: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2770
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 2770: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2814
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 2814: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2821
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 2821: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2855
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 2855: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"2908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 2908: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"2973
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 2973: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3038
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3038: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3089: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3094
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3094: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3101
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3101: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3108
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3108: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3115
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3115: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3122
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3122: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3179
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3179: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3231: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3275
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3275: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3325
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3325: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3370
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f886.h: 3370: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"36 ./Config.h
[p x FOSC = INTRC_NOCLKOUT ]
"37
[p x WDTE = OFF ]
"38
[p x PWRTE = OFF ]
"39
[p x MCLRE = ON ]
"40
[p x CP = OFF ]
"41
[p x CPD = OFF ]
"42
[p x BOREN = ON ]
"43
[p x IESO = ON ]
"44
[p x FCMEN = ON ]
"45
[p x LVP = OFF ]
"48
[p x BOR4V = BOR40V ]
"49
[p x WRT = OFF ]
"52
[v _PinsInit `(v ~T0 @X0 1 ef ]
{
[e :U _PinsInit ]
[f ]
"54
[e = _ANSELH = _ANSEL -> -> 0 `i `uc ]
"57
[e = _TRISB -> -> 1 `i `uc ]
"60
[e = _TRISC -> -> 0 `i `uc ]
"63
[e = _TRISA -> -> 240 `i `uc ]
"64
[e = _PORTA -> -> 0 `i `uc ]
"65
[e :UE 134 ]
}
"5 ./lcd.h
[; ;./lcd.h: 5: void Lcd_Port(char a) {
[v _Lcd_Port `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _Lcd_Port ]
[v _a `uc ~T0 @X0 1 r1 ]
[f ]
"6
[; ;./lcd.h: 6:     if (a & 1)
[e $ ! != & -> _a `i -> 1 `i -> 0 `i 141  ]
"7
[; ;./lcd.h: 7:         RB4 = 1;
[e = _RB4 -> -> 1 `i `b ]
[e $U 142  ]
"8
[; ;./lcd.h: 8:     else
[e :U 141 ]
"9
[; ;./lcd.h: 9:         RB4 = 0;
[e = _RB4 -> -> 0 `i `b ]
[e :U 142 ]
"11
[; ;./lcd.h: 11:     if (a & 2)
[e $ ! != & -> _a `i -> 2 `i -> 0 `i 143  ]
"12
[; ;./lcd.h: 12:         RB5 = 1;
[e = _RB5 -> -> 1 `i `b ]
[e $U 144  ]
"13
[; ;./lcd.h: 13:     else
[e :U 143 ]
"14
[; ;./lcd.h: 14:         RB5 = 0;
[e = _RB5 -> -> 0 `i `b ]
[e :U 144 ]
"16
[; ;./lcd.h: 16:     if (a & 4)
[e $ ! != & -> _a `i -> 4 `i -> 0 `i 145  ]
"17
[; ;./lcd.h: 17:         RB6 = 1;
[e = _RB6 -> -> 1 `i `b ]
[e $U 146  ]
"18
[; ;./lcd.h: 18:     else
[e :U 145 ]
"19
[; ;./lcd.h: 19:         RB6 = 0;
[e = _RB6 -> -> 0 `i `b ]
[e :U 146 ]
"21
[; ;./lcd.h: 21:     if (a & 8)
[e $ ! != & -> _a `i -> 8 `i -> 0 `i 147  ]
"22
[; ;./lcd.h: 22:         RB7 = 1;
[e = _RB7 -> -> 1 `i `b ]
[e $U 148  ]
"23
[; ;./lcd.h: 23:     else
[e :U 147 ]
"24
[; ;./lcd.h: 24:         RB7 = 0;
[e = _RB7 -> -> 0 `i `b ]
[e :U 148 ]
"25
[; ;./lcd.h: 25: }
[e :UE 140 ]
}
"27
[; ;./lcd.h: 27: void Lcd_Cmd(char a) {
[v _Lcd_Cmd `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _Lcd_Cmd ]
[v _a `uc ~T0 @X0 1 r1 ]
[f ]
"28
[; ;./lcd.h: 28:     RB2 = 0;
[e = _RB2 -> -> 0 `i `b ]
"29
[; ;./lcd.h: 29:     Lcd_Port(a);
[e ( _Lcd_Port (1 _a ]
"30
[; ;./lcd.h: 30:     RB3 = 1;
[e = _RB3 -> -> 1 `i `b ]
"31
[; ;./lcd.h: 31:     _delay((unsigned long)((4)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 4 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"32
[; ;./lcd.h: 32:     RB3 = 0;
[e = _RB3 -> -> 0 `i `b ]
"33
[; ;./lcd.h: 33: }
[e :UE 149 ]
}
"35
[; ;./lcd.h: 35: void Lcd_Clear() {
[v _Lcd_Clear `(v ~T0 @X0 1 ef ]
{
[e :U _Lcd_Clear ]
[f ]
"36
[; ;./lcd.h: 36:     Lcd_Cmd(0);
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
"37
[; ;./lcd.h: 37:     Lcd_Cmd(1);
[e ( _Lcd_Cmd (1 -> -> 1 `i `uc ]
"38
[; ;./lcd.h: 38: }
[e :UE 150 ]
}
"40
[; ;./lcd.h: 40: void Lcd_Set_Cursor(char a, char b) {
[v _Lcd_Set_Cursor `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _Lcd_Set_Cursor ]
[v _a `uc ~T0 @X0 1 r1 ]
[v _b `uc ~T0 @X0 1 r2 ]
[f ]
"41
[; ;./lcd.h: 41:     char temp, z, y;
[v _temp `uc ~T0 @X0 1 a ]
[v _z `uc ~T0 @X0 1 a ]
[v _y `uc ~T0 @X0 1 a ]
"42
[; ;./lcd.h: 42:     if (a == 1) {
[e $ ! == -> _a `i -> 1 `i 152  ]
{
"43
[; ;./lcd.h: 43:         temp = 0x80 + b - 1;
[e = _temp -> - + -> 128 `i -> _b `i -> 1 `i `uc ]
"44
[; ;./lcd.h: 44:         z = temp >> 4;
[e = _z -> >> -> _temp `i -> 4 `i `uc ]
"45
[; ;./lcd.h: 45:         y = temp & 0x0F;
[e = _y -> & -> _temp `i -> 15 `i `uc ]
"46
[; ;./lcd.h: 46:         Lcd_Cmd(z);
[e ( _Lcd_Cmd (1 _z ]
"47
[; ;./lcd.h: 47:         Lcd_Cmd(y);
[e ( _Lcd_Cmd (1 _y ]
"48
[; ;./lcd.h: 48:     } else if (a == 2) {
}
[e $U 153  ]
[e :U 152 ]
[e $ ! == -> _a `i -> 2 `i 154  ]
{
"49
[; ;./lcd.h: 49:         temp = 0xC0 + b - 1;
[e = _temp -> - + -> 192 `i -> _b `i -> 1 `i `uc ]
"50
[; ;./lcd.h: 50:         z = temp >> 4;
[e = _z -> >> -> _temp `i -> 4 `i `uc ]
"51
[; ;./lcd.h: 51:         y = temp & 0x0F;
[e = _y -> & -> _temp `i -> 15 `i `uc ]
"52
[; ;./lcd.h: 52:         Lcd_Cmd(z);
[e ( _Lcd_Cmd (1 _z ]
"53
[; ;./lcd.h: 53:         Lcd_Cmd(y);
[e ( _Lcd_Cmd (1 _y ]
"54
[; ;./lcd.h: 54:     }
}
[e :U 154 ]
[e :U 153 ]
"55
[; ;./lcd.h: 55: }
[e :UE 151 ]
}
"57
[; ;./lcd.h: 57: void Lcd_Init() {
[v _Lcd_Init `(v ~T0 @X0 1 ef ]
{
[e :U _Lcd_Init ]
[f ]
"58
[; ;./lcd.h: 58:     Lcd_Port(0x00);
[e ( _Lcd_Port (1 -> -> 0 `i `uc ]
"59
[; ;./lcd.h: 59:     _delay((unsigned long)((20)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"60
[; ;./lcd.h: 60:     Lcd_Cmd(0x03);
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
"61
[; ;./lcd.h: 61:     _delay((unsigned long)((5)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"62
[; ;./lcd.h: 62:     Lcd_Cmd(0x03);
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
"63
[; ;./lcd.h: 63:     _delay((unsigned long)((11)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 11 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"64
[; ;./lcd.h: 64:     Lcd_Cmd(0x03);
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
"66
[; ;./lcd.h: 66:     Lcd_Cmd(0x02);
[e ( _Lcd_Cmd (1 -> -> 2 `i `uc ]
"67
[; ;./lcd.h: 67:     Lcd_Cmd(0x02);
[e ( _Lcd_Cmd (1 -> -> 2 `i `uc ]
"68
[; ;./lcd.h: 68:     Lcd_Cmd(0x08);
[e ( _Lcd_Cmd (1 -> -> 8 `i `uc ]
"69
[; ;./lcd.h: 69:     Lcd_Cmd(0x00);
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
"70
[; ;./lcd.h: 70:     Lcd_Cmd(0x0C);
[e ( _Lcd_Cmd (1 -> -> 12 `i `uc ]
"71
[; ;./lcd.h: 71:     Lcd_Cmd(0x00);
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
"72
[; ;./lcd.h: 72:     Lcd_Cmd(0x06);
[e ( _Lcd_Cmd (1 -> -> 6 `i `uc ]
"73
[; ;./lcd.h: 73: }
[e :UE 155 ]
}
"75
[; ;./lcd.h: 75: void Lcd_Write_Char(char a) {
[v _Lcd_Write_Char `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _Lcd_Write_Char ]
[v _a `uc ~T0 @X0 1 r1 ]
[f ]
"76
[; ;./lcd.h: 76:     char temp, y;
[v _temp `uc ~T0 @X0 1 a ]
[v _y `uc ~T0 @X0 1 a ]
"77
[; ;./lcd.h: 77:     temp = a & 0x0F;
[e = _temp -> & -> _a `i -> 15 `i `uc ]
"78
[; ;./lcd.h: 78:     y = a & 0xF0;
[e = _y -> & -> _a `i -> 240 `i `uc ]
"79
[; ;./lcd.h: 79:     RB2 = 1;
[e = _RB2 -> -> 1 `i `b ]
"80
[; ;./lcd.h: 80:     Lcd_Port(y >> 4);
[e ( _Lcd_Port (1 -> >> -> _y `i -> 4 `i `uc ]
"81
[; ;./lcd.h: 81:     RB3 = 1;
[e = _RB3 -> -> 1 `i `b ]
"82
[; ;./lcd.h: 82:     _delay((unsigned long)((40)*(4000000/4000000.0)));
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"83
[; ;./lcd.h: 83:     RB3 = 0;
[e = _RB3 -> -> 0 `i `b ]
"84
[; ;./lcd.h: 84:     Lcd_Port(temp);
[e ( _Lcd_Port (1 _temp ]
"85
[; ;./lcd.h: 85:     RB3 = 1;
[e = _RB3 -> -> 1 `i `b ]
"86
[; ;./lcd.h: 86:     _delay((unsigned long)((40)*(4000000/4000000.0)));
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"87
[; ;./lcd.h: 87:     RB3 = 0;
[e = _RB3 -> -> 0 `i `b ]
"88
[; ;./lcd.h: 88: }
[e :UE 156 ]
}
"90
[; ;./lcd.h: 90: void Lcd_Write_String(char *a) {
[v _Lcd_Write_String `(v ~T0 @X0 1 ef1`*uc ]
{
[e :U _Lcd_Write_String ]
[v _a `*uc ~T0 @X0 1 r1 ]
[f ]
"91
[; ;./lcd.h: 91:     int i;
[v _i `i ~T0 @X0 1 a ]
"92
[; ;./lcd.h: 92:     for (i = 0; a[i] != '\0'; i++)
{
[e = _i -> 0 `i ]
[e $U 161  ]
[e :U 158 ]
"93
[; ;./lcd.h: 93:         Lcd_Write_Char(a[i]);
[e ( _Lcd_Write_Char (1 *U + _a * -> _i `x -> -> # *U _a `i `x ]
[e ++ _i -> 1 `i ]
[e :U 161 ]
[e $ != -> *U + _a * -> _i `x -> -> # *U _a `i `x `ui -> 0 `ui 158  ]
[e :U 159 ]
}
"94
[; ;./lcd.h: 94: }
[e :UE 157 ]
}
"96
[; ;./lcd.h: 96: void Lcd_Write_Integer(int a) {
[v _Lcd_Write_Integer `(v ~T0 @X0 1 ef1`i ]
{
[e :U _Lcd_Write_Integer ]
[v _a `i ~T0 @X0 1 r1 ]
[f ]
"97
[; ;./lcd.h: 97:     char Data[10];
[v _Data `uc ~T0 @X0 -> 10 `i a ]
"98
[; ;./lcd.h: 98:     sprintf(Data, "%d", a);
[e ( _sprintf (1 , (. , &U _Data :s 1C _a ]
"99
[; ;./lcd.h: 99:     Lcd_Write_String(Data);
[e ( _Lcd_Write_String (1 &U _Data ]
"100
[; ;./lcd.h: 100: }
[e :UE 162 ]
}
"102
[; ;./lcd.h: 102: void Lcd_Shift_Right() {
[v _Lcd_Shift_Right `(v ~T0 @X0 1 ef ]
{
[e :U _Lcd_Shift_Right ]
[f ]
"103
[; ;./lcd.h: 103:     Lcd_Cmd(0x01);
[e ( _Lcd_Cmd (1 -> -> 1 `i `uc ]
"104
[; ;./lcd.h: 104:     Lcd_Cmd(0x0C);
[e ( _Lcd_Cmd (1 -> -> 12 `i `uc ]
"105
[; ;./lcd.h: 105: }
[e :UE 163 ]
}
"107
[; ;./lcd.h: 107: void Lcd_Shift_Left() {
[v _Lcd_Shift_Left `(v ~T0 @X0 1 ef ]
{
[e :U _Lcd_Shift_Left ]
[f ]
"108
[; ;./lcd.h: 108:     Lcd_Cmd(0x01);
[e ( _Lcd_Cmd (1 -> -> 1 `i `uc ]
"109
[; ;./lcd.h: 109:     Lcd_Cmd(0x08);
[e ( _Lcd_Cmd (1 -> -> 8 `i `uc ]
"110
[; ;./lcd.h: 110: }
[e :UE 164 ]
}
"6 ./KeyPad.h
[; ;./KeyPad.h: 6: const int keyPadMatrix[] = {
[v _keyPadMatrix `Ci ~T0 @X0 -> 17 `i e ]
[i _keyPadMatrix
:U ..
-> -> 65 `ui `i
-> -> 49 `ui `i
-> -> 50 `ui `i
-> -> 51 `ui `i
-> -> 66 `ui `i
-> -> 52 `ui `i
-> -> 53 `ui `i
-> -> 54 `ui `i
-> -> 67 `ui `i
-> -> 55 `ui `i
-> -> 56 `ui `i
-> -> 57 `ui `i
-> -> 68 `ui `i
-> -> 42 `ui `i
-> -> 48 `ui `i
-> -> 35 `ui `i
-> 255 `i
..
]
"14
[; ;./KeyPad.h: 14: char key, old_key;
[v _key `uc ~T0 @X0 1 e ]
[v _old_key `uc ~T0 @X0 1 e ]
"16
[; ;./KeyPad.h: 16: int KeyPadGetKey() {
[v _KeyPadGetKey `(i ~T0 @X0 1 ef ]
{
[e :U _KeyPadGetKey ]
[f ]
"18
[; ;./KeyPad.h: 18:     char key = 0, row;
[v _key `uc ~T0 @X0 1 a ]
[e = _key -> -> 0 `i `uc ]
[v _row `uc ~T0 @X0 1 a ]
"20
[; ;./KeyPad.h: 20:     for (row = 0b00000001; row < 0b00010000; row <<= 1) {
{
[e = _row -> -> 1 `i `uc ]
[e $ < -> _row `i -> 16 `i 166  ]
[e $U 167  ]
[e :U 166 ]
{
"21
[; ;./KeyPad.h: 21:         {
{
"22
[; ;./KeyPad.h: 22:             RA0 = (row & 0x0001) >> 0;
[e = _RA0 -> >> & -> _row `i -> 1 `i -> 0 `i `b ]
"23
[; ;./KeyPad.h: 23:             RA1 = (row & 0x0002) >> 1;
[e = _RA1 -> >> & -> _row `i -> 2 `i -> 1 `i `b ]
"24
[; ;./KeyPad.h: 24:             RA2 = (row & 0x0004) >> 2;
[e = _RA2 -> >> & -> _row `i -> 4 `i -> 2 `i `b ]
"25
[; ;./KeyPad.h: 25:             RA3 = (row & 0x0008) >> 3;
[e = _RA3 -> >> & -> _row `i -> 8 `i -> 3 `i `b ]
"26
[; ;./KeyPad.h: 26:             _delay((unsigned long)((1)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"27
[; ;./KeyPad.h: 27:         }
}
"29
[; ;./KeyPad.h: 29:         if (RA4)break;
[e $ ! _RA4 169  ]
[e $U 167  ]
[e :U 169 ]
"30
[; ;./KeyPad.h: 30:         key++;
[e ++ _key -> -> 1 `i `uc ]
"31
[; ;./KeyPad.h: 31:         if (RA5)break;
[e $ ! _RA5 170  ]
[e $U 167  ]
[e :U 170 ]
"32
[; ;./KeyPad.h: 32:         key++;
[e ++ _key -> -> 1 `i `uc ]
"33
[; ;./KeyPad.h: 33:         if (RA6)break;
[e $ ! _RA6 171  ]
[e $U 167  ]
[e :U 171 ]
"34
[; ;./KeyPad.h: 34:         key++;
[e ++ _key -> -> 1 `i `uc ]
"35
[; ;./KeyPad.h: 35:         if (RA7)break;
[e $ ! _RA7 172  ]
[e $U 167  ]
[e :U 172 ]
"36
[; ;./KeyPad.h: 36:         key++;
[e ++ _key -> -> 1 `i `uc ]
"37
[; ;./KeyPad.h: 37:     }
}
[e =<< _row -> -> 1 `i `uc ]
[e $ < -> _row `i -> 16 `i 166  ]
[e :U 167 ]
}
"38
[; ;./KeyPad.h: 38:     RA0 = 0;
[e = _RA0 -> -> 0 `i `b ]
"39
[; ;./KeyPad.h: 39:     RA1 = 0;
[e = _RA1 -> -> 0 `i `b ]
"40
[; ;./KeyPad.h: 40:     RA2 = 0;
[e = _RA2 -> -> 0 `i `b ]
"41
[; ;./KeyPad.h: 41:     RA3 = 0;
[e = _RA3 -> -> 0 `i `b ]
"42
[; ;./KeyPad.h: 42:     if (key != old_key) {
[e $ ! != -> _key `i -> _old_key `i 173  ]
{
"43
[; ;./KeyPad.h: 43:         old_key = key;
[e = _old_key _key ]
"44
[; ;./KeyPad.h: 44:         return keyPadMatrix[ key ];
[e ) *U + &U _keyPadMatrix * -> _key `ux -> -> # *U &U _keyPadMatrix `ui `ux ]
[e $UE 165  ]
"45
[; ;./KeyPad.h: 45:     } else
}
[e $U 174  ]
[e :U 173 ]
"46
[; ;./KeyPad.h: 46:         return keyPadMatrix[ 0x10 ];
[e ) *U + &U _keyPadMatrix * -> -> -> 16 `i `ui `ux -> -> # *U &U _keyPadMatrix `ui `ux ]
[e $UE 165  ]
[e :U 174 ]
"47
[; ;./KeyPad.h: 47: }
[e :UE 165 ]
}
"10 main.c
[; ;main.c: 10: int Grados = 0;
[v _Grados `i ~T0 @X0 1 e ]
[i _Grados
-> 0 `i
]
"11
[; ;main.c: 11: int key2 = '0';
[v _key2 `i ~T0 @X0 1 e ]
[i _key2
-> -> 48 `ui `i
]
"12
[; ;main.c: 12: int buffer = 0;
[v _buffer `i ~T0 @X0 1 e ]
[i _buffer
-> 0 `i
]
"13
[; ;main.c: 13: int CmHorario = 0;
[v _CmHorario `i ~T0 @X0 1 e ]
[i _CmHorario
-> 0 `i
]
"14
[; ;main.c: 14: int CmAntiHorario = 0;
[v _CmAntiHorario `i ~T0 @X0 1 e ]
[i _CmAntiHorario
-> 0 `i
]
"15
[; ;main.c: 15: _Bool LastState = 0;
[v _LastState `a ~T0 @X0 1 e ]
[i _LastState
-> -> 0 `i `a
]
"16
[; ;main.c: 16: char keypress = '0';
[v _keypress `uc ~T0 @X0 1 e ]
[i _keypress
-> -> 48 `ui `uc
]
"17
[; ;main.c: 17: int cm = 0;
[v _cm `i ~T0 @X0 1 e ]
[i _cm
-> 0 `i
]
[v $root$_main `(v ~T0 @X0 0 e ]
"22
[; ;main.c: 22: int main() {
[v _main `(i ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"25
[; ;main.c: 25:     PinsInit();
[e ( _PinsInit ..  ]
"26
[; ;main.c: 26:     Lcd_Init();
[e ( _Lcd_Init ..  ]
"28
[; ;main.c: 28:     StopMotor();
[e ( _StopMotor ..  ]
"29
[; ;main.c: 29:     configurarHorario();
[e ( _configurarHorario ..  ]
"30
[; ;main.c: 30:     configurarAntiHorario();
[e ( _configurarAntiHorario ..  ]
"32
[; ;main.c: 32:     while (1) {
[e :U 177 ]
{
"34
[; ;main.c: 34:         keypress = KeyPadGetKey();
[e = _keypress -> ( _KeyPadGetKey ..  `uc ]
"37
[; ;main.c: 37:         if (keypress != keyPadMatrix[ 0x10 ]) {
[e $ ! != -> _keypress `i *U + &U _keyPadMatrix * -> -> -> 16 `i `ui `ux -> -> # *U &U _keyPadMatrix `ui `ux 179  ]
{
"39
[; ;main.c: 39:             switch (keypress) {
[e $U 181  ]
{
"40
[; ;main.c: 40:                 case 'A':
[e :U 182 ]
"41
[; ;main.c: 41:                     configurarHorario();
[e ( _configurarHorario ..  ]
"42
[; ;main.c: 42:                     break;
[e $U 180  ]
"43
[; ;main.c: 43:                 case'B':
[e :U 183 ]
"44
[; ;main.c: 44:                     configurarAntiHorario();
[e ( _configurarAntiHorario ..  ]
"45
[; ;main.c: 45:                     break;
[e $U 180  ]
"46
[; ;main.c: 46:                 case'C':
[e :U 184 ]
"47
[; ;main.c: 47:                     StopMotor();
[e ( _StopMotor ..  ]
"48
[; ;main.c: 48:                     break;
[e $U 180  ]
"49
[; ;main.c: 49:                 case'D':
[e :U 185 ]
"50
[; ;main.c: 50:                     RunMotor();
[e ( _RunMotor ..  ]
"51
[; ;main.c: 51:                     break;
[e $U 180  ]
"52
[; ;main.c: 52:             }
}
[e $U 180  ]
[e :U 181 ]
[e [\ -> _keypress `i , $ -> -> 65 `ui `i 182
 , $ -> -> 66 `ui `i 183
 , $ -> -> 67 `ui `i 184
 , $ -> -> 68 `ui `i 185
 180 ]
[e :U 180 ]
"53
[; ;main.c: 53:         }
}
[e :U 179 ]
"56
[; ;main.c: 56:         if (RB0 == 1 && LastState == 0) {
[e $ ! && == -> _RB0 `i -> 1 `i == -> _LastState `i -> 0 `i 186  ]
{
"57
[; ;main.c: 57:             Encoder();
[e ( _Encoder ..  ]
"58
[; ;main.c: 58:         } else if (RB0 == 0) {
}
[e $U 187  ]
[e :U 186 ]
[e $ ! == -> _RB0 `i -> 0 `i 188  ]
{
"59
[; ;main.c: 59:             LastState = 0;
[e = _LastState -> -> 0 `i `a ]
"60
[; ;main.c: 60:         }
}
[e :U 188 ]
[e :U 187 ]
"61
[; ;main.c: 61:         _delay((unsigned long)((1)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"62
[; ;main.c: 62:     }
}
[e :U 176 ]
[e $U 177  ]
[e :U 178 ]
"63
[; ;main.c: 63:     return 0;
[e ) -> 0 `i ]
[e $UE 175  ]
"64
[; ;main.c: 64: }
[e :UE 175 ]
}
"69
[; ;main.c: 69: int RunMotor() {
[v _RunMotor `(i ~T0 @X0 1 ef ]
{
[e :U _RunMotor ]
[f ]
"70
[; ;main.c: 70:     if (CmAntiHorario != 0 && CmHorario != 0) {
[e $ ! && != _CmAntiHorario -> 0 `i != _CmHorario -> 0 `i 190  ]
{
"71
[; ;main.c: 71:         RC0 = 1;
[e = _RC0 -> -> 1 `i `b ]
"72
[; ;main.c: 72:         RC1 = 0;
[e = _RC1 -> -> 0 `i `b ]
"73
[; ;main.c: 73:     }
}
[e :U 190 ]
"74
[; ;main.c: 74:     return 0;
[e ) -> 0 `i ]
[e $UE 189  ]
"75
[; ;main.c: 75: }
[e :UE 189 ]
}
"77
[; ;main.c: 77: int StopMotor() {
[v _StopMotor `(i ~T0 @X0 1 ef ]
{
[e :U _StopMotor ]
[f ]
"78
[; ;main.c: 78:     RC1 = 0;
[e = _RC1 -> -> 0 `i `b ]
"79
[; ;main.c: 79:     RC0 = 0;
[e = _RC0 -> -> 0 `i `b ]
"80
[; ;main.c: 80:     return 0;
[e ) -> 0 `i ]
[e $UE 191  ]
"81
[; ;main.c: 81: }
[e :UE 191 ]
}
"83
[; ;main.c: 83: int configurarHorario() {
[v _configurarHorario `(i ~T0 @X0 1 ef ]
{
[e :U _configurarHorario ]
[f ]
"85
[; ;main.c: 85:     buffer = 0;
[e = _buffer -> 0 `i ]
"86
[; ;main.c: 86:     StopMotor();
[e ( _StopMotor ..  ]
"88
[; ;main.c: 88:     Lcd_Clear();
[e ( _Lcd_Clear ..  ]
"89
[; ;main.c: 89:     Lcd_Set_Cursor(1, 1);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"90
[; ;main.c: 90:     Lcd_Write_String("Adelante: ");
[e ( _Lcd_Write_String (1 :s 2C ]
"91
[; ;main.c: 91:     Lcd_Set_Cursor(2, 1);
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
"92
[; ;main.c: 92:     Lcd_Write_String("0 Cm");
[e ( _Lcd_Write_String (1 :s 3C ]
"94
[; ;main.c: 94:     while (1) {
[e :U 194 ]
{
"96
[; ;main.c: 96:         keypress = KeyPadGetKey();
[e = _keypress -> ( _KeyPadGetKey ..  `uc ]
"97
[; ;main.c: 97:         if (keypress != keyPadMatrix[ 0x10 ]) {
[e $ ! != -> _keypress `i *U + &U _keyPadMatrix * -> -> -> 16 `i `ui `ux -> -> # *U &U _keyPadMatrix `ui `ux 196  ]
{
"98
[; ;main.c: 98:             key2 = keypress;
[e = _key2 -> _keypress `i ]
"99
[; ;main.c: 99:             switch (key2) {
[e $U 198  ]
{
"101
[; ;main.c: 101:                 case 'A':
[e :U 199 ]
"102
[; ;main.c: 102:                     buffer = 0;
[e = _buffer -> 0 `i ]
"103
[; ;main.c: 103:                     Lcd_Clear();
[e ( _Lcd_Clear ..  ]
"104
[; ;main.c: 104:                     Lcd_Set_Cursor(1, 1);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"105
[; ;main.c: 105:                     Lcd_Write_String("Adelante: ");
[e ( _Lcd_Write_String (1 :s 4C ]
"106
[; ;main.c: 106:                     Lcd_Set_Cursor(2, 1);
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
"107
[; ;main.c: 107:                     Lcd_Write_String("0 Cm");
[e ( _Lcd_Write_String (1 :s 5C ]
"108
[; ;main.c: 108:                     break;
[e $U 197  ]
"109
[; ;main.c: 109:                 case 'B':
[e :U 200 ]
"110
[; ;main.c: 110:                     break;
[e $U 197  ]
"111
[; ;main.c: 111:                 case 'C':
[e :U 201 ]
"112
[; ;main.c: 112:                     break;
[e $U 197  ]
"113
[; ;main.c: 113:                 case 'D':
[e :U 202 ]
"114
[; ;main.c: 114:                     Grados = 0;
[e = _Grados -> 0 `i ]
"115
[; ;main.c: 115:                     CmHorario = buffer;
[e = _CmHorario _buffer ]
"116
[; ;main.c: 116:                     RunMotor();
[e ( _RunMotor ..  ]
"117
[; ;main.c: 117:                     if (CmHorario != 0) {
[e $ ! != _CmHorario -> 0 `i 203  ]
{
"118
[; ;main.c: 118:                         return 0;
[e ) -> 0 `i ]
[e $UE 192  ]
"119
[; ;main.c: 119:                     }
}
[e :U 203 ]
"120
[; ;main.c: 120:                     break;
[e $U 197  ]
"121
[; ;main.c: 121:                 case '*':
[e :U 204 ]
"122
[; ;main.c: 122:                     break;
[e $U 197  ]
"123
[; ;main.c: 123:                 case '#':
[e :U 205 ]
"124
[; ;main.c: 124:                     break;
[e $U 197  ]
"125
[; ;main.c: 125:                 default:
[e :U 206 ]
"126
[; ;main.c: 126:                     buffer = (10 * buffer + key2);
[e = _buffer + * -> 10 `i _buffer _key2 ]
"127
[; ;main.c: 127:                     buffer -= 48;
[e =- _buffer -> 48 `i ]
"128
[; ;main.c: 128:                     Lcd_Set_Cursor(2, 1);
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
"129
[; ;main.c: 129:                     Lcd_Write_Integer(buffer);
[e ( _Lcd_Write_Integer (1 _buffer ]
"130
[; ;main.c: 130:                     Lcd_Write_String(" Cm");
[e ( _Lcd_Write_String (1 :s 6C ]
"131
[; ;main.c: 131:             }
}
[e $U 197  ]
[e :U 198 ]
[e [\ _key2 , $ -> -> 65 `ui `i 199
 , $ -> -> 66 `ui `i 200
 , $ -> -> 67 `ui `i 201
 , $ -> -> 68 `ui `i 202
 , $ -> -> 42 `ui `i 204
 , $ -> -> 35 `ui `i 205
 206 ]
[e :U 197 ]
"132
[; ;main.c: 132:         }
}
[e :U 196 ]
"133
[; ;main.c: 133:         _delay((unsigned long)((1)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"134
[; ;main.c: 134:     }
}
[e :U 193 ]
[e $U 194  ]
[e :U 195 ]
"135
[; ;main.c: 135: }
[e :UE 192 ]
}
"137
[; ;main.c: 137: int configurarAntiHorario() {
[v _configurarAntiHorario `(i ~T0 @X0 1 ef ]
{
[e :U _configurarAntiHorario ]
[f ]
"139
[; ;main.c: 139:     buffer = 0;
[e = _buffer -> 0 `i ]
"140
[; ;main.c: 140:     StopMotor();
[e ( _StopMotor ..  ]
"142
[; ;main.c: 142:     Lcd_Clear();
[e ( _Lcd_Clear ..  ]
"143
[; ;main.c: 143:     Lcd_Set_Cursor(1, 1);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"144
[; ;main.c: 144:     Lcd_Write_String("Atras: ");
[e ( _Lcd_Write_String (1 :s 7C ]
"145
[; ;main.c: 145:     Lcd_Set_Cursor(2, 1);
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
"146
[; ;main.c: 146:     Lcd_Write_String("0 Cm");
[e ( _Lcd_Write_String (1 :s 8C ]
"148
[; ;main.c: 148:     while (1) {
[e :U 209 ]
{
"150
[; ;main.c: 150:         keypress = KeyPadGetKey();
[e = _keypress -> ( _KeyPadGetKey ..  `uc ]
"151
[; ;main.c: 151:         if (keypress != keyPadMatrix[ 0x10 ]) {
[e $ ! != -> _keypress `i *U + &U _keyPadMatrix * -> -> -> 16 `i `ui `ux -> -> # *U &U _keyPadMatrix `ui `ux 211  ]
{
"152
[; ;main.c: 152:             key2 = keypress;
[e = _key2 -> _keypress `i ]
"153
[; ;main.c: 153:             switch (key2) {
[e $U 213  ]
{
"154
[; ;main.c: 154:                 case 'A':
[e :U 214 ]
"155
[; ;main.c: 155:                     break;
[e $U 212  ]
"156
[; ;main.c: 156:                 case 'B':
[e :U 215 ]
"157
[; ;main.c: 157:                     buffer = 0;
[e = _buffer -> 0 `i ]
"158
[; ;main.c: 158:                     Lcd_Clear();
[e ( _Lcd_Clear ..  ]
"159
[; ;main.c: 159:                     Lcd_Set_Cursor(1, 1);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"160
[; ;main.c: 160:                     Lcd_Write_String("Atras: ");
[e ( _Lcd_Write_String (1 :s 9C ]
"161
[; ;main.c: 161:                     Lcd_Set_Cursor(2, 1);
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
"162
[; ;main.c: 162:                     Lcd_Write_String("0 Cm");
[e ( _Lcd_Write_String (1 :s 10C ]
"163
[; ;main.c: 163:                     break;
[e $U 212  ]
"164
[; ;main.c: 164:                 case 'C':
[e :U 216 ]
"165
[; ;main.c: 165:                     break;
[e $U 212  ]
"166
[; ;main.c: 166:                 case 'D':
[e :U 217 ]
"167
[; ;main.c: 167:                     Grados = 0;
[e = _Grados -> 0 `i ]
"168
[; ;main.c: 168:                     CmAntiHorario = buffer;
[e = _CmAntiHorario _buffer ]
"169
[; ;main.c: 169:                     RunMotor();
[e ( _RunMotor ..  ]
"170
[; ;main.c: 170:                     if (CmAntiHorario != 0) {
[e $ ! != _CmAntiHorario -> 0 `i 218  ]
{
"171
[; ;main.c: 171:                         return 0;
[e ) -> 0 `i ]
[e $UE 207  ]
"172
[; ;main.c: 172:                     }
}
[e :U 218 ]
"173
[; ;main.c: 173:                     break;
[e $U 212  ]
"174
[; ;main.c: 174:                 case '*':
[e :U 219 ]
"175
[; ;main.c: 175:                     break;
[e $U 212  ]
"176
[; ;main.c: 176:                 case '#':
[e :U 220 ]
"177
[; ;main.c: 177:                     break;
[e $U 212  ]
"178
[; ;main.c: 178:                 default:
[e :U 221 ]
"179
[; ;main.c: 179:                     buffer = (10 * buffer + key2);
[e = _buffer + * -> 10 `i _buffer _key2 ]
"180
[; ;main.c: 180:                     buffer -= 48;
[e =- _buffer -> 48 `i ]
"181
[; ;main.c: 181:                     Lcd_Set_Cursor(2, 1);
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
"182
[; ;main.c: 182:                     Lcd_Write_Integer(buffer);
[e ( _Lcd_Write_Integer (1 _buffer ]
"183
[; ;main.c: 183:                     Lcd_Write_String(" Cm");
[e ( _Lcd_Write_String (1 :s 11C ]
"184
[; ;main.c: 184:             }
}
[e $U 212  ]
[e :U 213 ]
[e [\ _key2 , $ -> -> 65 `ui `i 214
 , $ -> -> 66 `ui `i 215
 , $ -> -> 67 `ui `i 216
 , $ -> -> 68 `ui `i 217
 , $ -> -> 42 `ui `i 219
 , $ -> -> 35 `ui `i 220
 221 ]
[e :U 212 ]
"185
[; ;main.c: 185:         }
}
[e :U 211 ]
"186
[; ;main.c: 186:         _delay((unsigned long)((1)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"187
[; ;main.c: 187:     }
}
[e :U 208 ]
[e $U 209  ]
[e :U 210 ]
"188
[; ;main.c: 188: }
[e :UE 207 ]
}
"190
[; ;main.c: 190: int VerificarInversionGiro() {
[v _VerificarInversionGiro `(i ~T0 @X0 1 ef ]
{
[e :U _VerificarInversionGiro ]
[f ]
"191
[; ;main.c: 191:     if (RC0 && (Grados * 0.097 >= CmHorario)) {
[e $ ! && _RC0 >= * -> _Grados `d .0.097 -> _CmHorario `d 223  ]
{
"192
[; ;main.c: 192:         Grados = 0;
[e = _Grados -> 0 `i ]
"193
[; ;main.c: 193:         RC0 = !RC0;
[e = _RC0 ! _RC0 ]
"194
[; ;main.c: 194:         RC1 = !RC1;
[e = _RC1 ! _RC1 ]
"195
[; ;main.c: 195:     } else if (RC1 && Grados * 0.097 >= CmAntiHorario) {
}
[e $U 224  ]
[e :U 223 ]
[e $ ! && _RC1 >= * -> _Grados `d .0.097 -> _CmAntiHorario `d 225  ]
{
"196
[; ;main.c: 196:         Grados = 0;
[e = _Grados -> 0 `i ]
"197
[; ;main.c: 197:         RC0 = !RC0;
[e = _RC0 ! _RC0 ]
"198
[; ;main.c: 198:         RC1 = !RC1;
[e = _RC1 ! _RC1 ]
"199
[; ;main.c: 199:     }
}
[e :U 225 ]
[e :U 224 ]
"200
[; ;main.c: 200:     return 0;
[e ) -> 0 `i ]
[e $UE 222  ]
"201
[; ;main.c: 201: }
[e :UE 222 ]
}
"203
[; ;main.c: 203: int Encoder() {
[v _Encoder `(i ~T0 @X0 1 ef ]
{
[e :U _Encoder ]
[f ]
"204
[; ;main.c: 204:     LastState = 1;
[e = _LastState -> -> 1 `i `a ]
"205
[; ;main.c: 205:     Grados++;
[e ++ _Grados -> 1 `i ]
"206
[; ;main.c: 206:     VerificarInversionGiro();
[e ( _VerificarInversionGiro ..  ]
"208
[; ;main.c: 208:     cm = Grados * 0.097;
[e = _cm -> * -> _Grados `d .0.097 `i ]
"210
[; ;main.c: 210:     if (RC0 && (Grados * 0.097 != cm)) {
[e $ ! && _RC0 != * -> _Grados `d .0.097 -> _cm `d 227  ]
{
"211
[; ;main.c: 211:         cm = Grados * 0.097;
[e = _cm -> * -> _Grados `d .0.097 `i ]
"212
[; ;main.c: 212:         Lcd_Clear();
[e ( _Lcd_Clear ..  ]
"213
[; ;main.c: 213:         Lcd_Set_Cursor(1, 1);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"214
[; ;main.c: 214:         Lcd_Write_String("Dir: Adelante");
[e ( _Lcd_Write_String (1 :s 12C ]
"215
[; ;main.c: 215:         Lcd_Set_Cursor(2, 1);
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
"216
[; ;main.c: 216:         Lcd_Write_Integer(cm);
[e ( _Lcd_Write_Integer (1 _cm ]
"217
[; ;main.c: 217:         Lcd_Write_String(" Cm de: ");
[e ( _Lcd_Write_String (1 :s 13C ]
"218
[; ;main.c: 218:         Lcd_Write_Integer(CmHorario);
[e ( _Lcd_Write_Integer (1 _CmHorario ]
"219
[; ;main.c: 219:     } else if (RC1 && (Grados * 0.097 != cm)) {
}
[e $U 228  ]
[e :U 227 ]
[e $ ! && _RC1 != * -> _Grados `d .0.097 -> _cm `d 229  ]
{
"220
[; ;main.c: 220:         cm = Grados * 0.097;
[e = _cm -> * -> _Grados `d .0.097 `i ]
"221
[; ;main.c: 221:         Lcd_Clear();
[e ( _Lcd_Clear ..  ]
"222
[; ;main.c: 222:         Lcd_Set_Cursor(1, 1);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"223
[; ;main.c: 223:         Lcd_Write_String("Dir: Atras");
[e ( _Lcd_Write_String (1 :s 14C ]
"224
[; ;main.c: 224:         Lcd_Set_Cursor(2, 1);
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
"225
[; ;main.c: 225:         Lcd_Write_Integer(Grados * 0.097);
[e ( _Lcd_Write_Integer (1 -> * -> _Grados `d .0.097 `i ]
"226
[; ;main.c: 226:         Lcd_Write_String(" Cm de: ");
[e ( _Lcd_Write_String (1 :s 15C ]
"227
[; ;main.c: 227:         Lcd_Write_Integer(CmAntiHorario);
[e ( _Lcd_Write_Integer (1 _CmAntiHorario ]
"228
[; ;main.c: 228:     }
}
[e :U 229 ]
[e :U 228 ]
"229
[; ;main.c: 229:     return 0;
[e ) -> 0 `i ]
[e $UE 226  ]
"230
[; ;main.c: 230: }
[e :UE 226 ]
}
[p f _sprintf 8388736 ]
[a 14C 68 105 114 58 32 65 116 114 97 115 0 ]
[a 3C 48 32 67 109 0 ]
[a 5C 48 32 67 109 0 ]
[a 8C 48 32 67 109 0 ]
[a 10C 48 32 67 109 0 ]
[a 6C 32 67 109 0 ]
[a 11C 32 67 109 0 ]
[a 12C 68 105 114 58 32 65 100 101 108 97 110 116 101 0 ]
[a 1C 37 100 0 ]
[a 7C 65 116 114 97 115 58 32 0 ]
[a 9C 65 116 114 97 115 58 32 0 ]
[a 2C 65 100 101 108 97 110 116 101 58 32 0 ]
[a 4C 65 100 101 108 97 110 116 101 58 32 0 ]
[a 13C 32 67 109 32 100 101 58 32 0 ]
[a 15C 32 67 109 32 100 101 58 32 0 ]
